{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"clang-format \u4f4d\u4e8e clang/tools/clang-format \uff0c\u53ef\u7528\u4e8e\u683c\u5f0f\u5316 C / C++ / Java / JavaScript / Objective-C / Protobuf / C# \u4ee3\u7801\u3002 $ clang-format -help OVERVIEW: A tool to format C/C++/Java/JavaScript/JSON/Objective-C/Protobuf/C# code. If no arguments are specified, it formats the code from standard input and writes the result to the standard output. If <file>s are given, it reformats the files. If -i is specified together with <file>s, the files are edited in-place. Otherwise, the result is written to the standard output. USAGE: clang-format [options] [<file> ...] OPTIONS: Clang-format options: --Werror - If set, changes formatting warnings to errors --Wno-error=<value> - If set don't error out on the specified warning type. =unknown - If set, unknown format options are only warned about. This can be used to enable formatting, even if the configuration contains unknown (newer) options. Use with caution, as this might lead to dramatically differing format depending on an option being supported or not. --assume-filename=<string> - Override filename used to determine the language. When reading from stdin, clang-format assumes this filename to determine the language. --cursor=<uint> - The position of the cursor when invoking clang-format from an editor integration --dry-run - If set, do not actually make the formatting changes --dump-config - Dump configuration options to stdout and exit. Can be used with -style option. --fallback-style=<string> - The name of the predefined style used as a fallback in case clang-format is invoked with -style=file, but can not find the .clang-format file to use. Use -fallback-style=none to skip formatting. --ferror-limit=<uint> - Set the maximum number of clang-format errors to emit before stopping (0 = no limit). Used only with --dry-run or -n -i - Inplace edit <file>s, if specified. --length=<uint> - Format a range of this length (in bytes). Multiple ranges can be formatted by specifying several -offset and -length pairs. When only a single -offset is specified without -length, clang-format will format up to the end of the file. Can only be used with one input file. --lines=<string> - <start line>:<end line> - format a range of lines (both 1-based). Multiple ranges can be formatted by specifying several -lines arguments. Can't be used with -offset and -length. Can only be used with one input file. -n - Alias for --dry-run --offset=<uint> - Format a range starting at this byte offset. Multiple ranges can be formatted by specifying several -offset and -length pairs. Can only be used with one input file. --output-replacements-xml - Output replacements as XML. --sort-includes - If set, overrides the include sorting behavior determined by the SortIncludes style flag --style=<string> - Coding style, currently supports: LLVM, Google, Chromium, Mozilla, WebKit. Use -style=file to load style configuration from .clang-format file located in one of the parent directories of the source file (or current directory for stdin). Use -style=\"{key: value, ...}\" to set specific parameters, e.g.: -style=\"{BasedOnStyle: llvm, IndentWidth: 8}\" --verbose - If set, shows the list of processed files Generic Options: --help - Display available options (--help-hidden for more) --help-list - Display list of available options (--help-list-hidden for more) --version - Display the version of this program","title":"\u4ecb\u7ecd"},{"location":"AccessModifierOffset/","text":"AccessModifierOffset ( Integer ) \u00b6 Info clang-format 3.3 \u8bbf\u95ee\u4fee\u9970\u7b26\u7684\u989d\u5916\u7f29\u8fdb\u6216\u7f29\u51fa\uff0c\u4f8b\u5982 public : \u3002","title":"AccessModifierOffset"},{"location":"AccessModifierOffset/#accessmodifieroffset-integer","text":"Info clang-format 3.3 \u8bbf\u95ee\u4fee\u9970\u7b26\u7684\u989d\u5916\u7f29\u8fdb\u6216\u7f29\u51fa\uff0c\u4f8b\u5982 public : \u3002","title":"AccessModifierOffset (Integer)"},{"location":"AlignAfterOpenBracket/","text":"AlignAfterOpenBracket ( BracketAlignmentStyle ) \u00b6 Info clang-format 3.8 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u5de6\u62ec\u53f7\u540e\u6c34\u5e73\u5bf9\u9f50\u53c2\u6570\u3002 \u8fd9\u9002\u7528\u4e8e\u5706\u62ec\u53f7\u3001\u5c16\u62ec\u53f7\u548c\u65b9\u62ec\u53f7\u3002 \u53ef\u80fd\u7684\u503c\uff1a Align DontAlign AlwaysBreak BAS_Align : \u5c06\u5de6\u62ec\u53f7\u4e2d\u7684\u53c2\u6570\u5bf9\u9f50\uff0c\u4f8b\u5982\uff1a someLongFunction ( argument1 , argument2 ); BAS_DontAlign : \u4e0d\u8981\u5bf9\u9f50\uff0c\u800c\u662f\u4f7f\u7528 ContinuationIndentWidth \uff0c\u4f8b\u5982\uff1a someLongFunction ( argument1 , argument2 ); BAS_AlwaysBreak : \u5982\u679c\u53c2\u6570\u4e0d\u9002\u5408\u5728\u4e00\u884c\u4e2d\uff0c\u5219\u59cb\u7ec8\u5728\u5de6\u62ec\u53f7\u540e\u4e2d\u65ad\uff0c\u4f8b\u5982\uff1a someLongFunction ( argument1 , argument2 );","title":"AlignAfterOpenBracket"},{"location":"AlignAfterOpenBracket/#alignafteropenbracket-bracketalignmentstyle","text":"Info clang-format 3.8 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u5de6\u62ec\u53f7\u540e\u6c34\u5e73\u5bf9\u9f50\u53c2\u6570\u3002 \u8fd9\u9002\u7528\u4e8e\u5706\u62ec\u53f7\u3001\u5c16\u62ec\u53f7\u548c\u65b9\u62ec\u53f7\u3002 \u53ef\u80fd\u7684\u503c\uff1a Align DontAlign AlwaysBreak BAS_Align : \u5c06\u5de6\u62ec\u53f7\u4e2d\u7684\u53c2\u6570\u5bf9\u9f50\uff0c\u4f8b\u5982\uff1a someLongFunction ( argument1 , argument2 ); BAS_DontAlign : \u4e0d\u8981\u5bf9\u9f50\uff0c\u800c\u662f\u4f7f\u7528 ContinuationIndentWidth \uff0c\u4f8b\u5982\uff1a someLongFunction ( argument1 , argument2 ); BAS_AlwaysBreak : \u5982\u679c\u53c2\u6570\u4e0d\u9002\u5408\u5728\u4e00\u884c\u4e2d\uff0c\u5219\u59cb\u7ec8\u5728\u5de6\u62ec\u53f7\u540e\u4e2d\u65ad\uff0c\u4f8b\u5982\uff1a someLongFunction ( argument1 , argument2 );","title":"AlignAfterOpenBracket (BracketAlignmentStyle)"},{"location":"AlignArrayOfStructures/","text":"AlignArrayOfStructures ( ArrayInitializerAlignmentStyle ) \u00b6 Info clang-format 13 \u5982\u679c\u4e0d\u662f None \uff0c\u5219\u5728\u5bf9\u7ed3\u6784\u6570\u7ec4\u4f7f\u7528\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u5c06\u5b57\u6bb5\u5bf9\u9f50\u5230\u5217\u4e2d\u3002 \u53ef\u80fd\u7684\u503c\uff1a Left Right None AIAS_Left : \u5bf9\u9f50\u6570\u7ec4\u5217\u5e76\u5de6\u5bf9\u9f50\u5217\uff0c\u4f8b\u5982\uff1a struct test demo [] = { { 56 , 23 , \"hello\" }, { -1 , 93463 , \"world\" }, { 7 , 5 , \"!!\" } }; AIAS_Right : \u5bf9\u9f50\u6570\u7ec4\u5217\u5e76\u53f3\u5bf9\u9f50\u5217\uff0c\u4f8b\u5982\uff1a struct test demo [] = { { 56 , 23 , \"hello\" }, { -1 , 93463 , \"world\" }, { 7 , 5 , \"!!\" } }; AIAS_None : \u4e0d\u8981\u5bf9\u9f50\u6570\u7ec4\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u5217\u3002","title":"AlignArrayOfStructures"},{"location":"AlignArrayOfStructures/#alignarrayofstructures-arrayinitializeralignmentstyle","text":"Info clang-format 13 \u5982\u679c\u4e0d\u662f None \uff0c\u5219\u5728\u5bf9\u7ed3\u6784\u6570\u7ec4\u4f7f\u7528\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u5c06\u5b57\u6bb5\u5bf9\u9f50\u5230\u5217\u4e2d\u3002 \u53ef\u80fd\u7684\u503c\uff1a Left Right None AIAS_Left : \u5bf9\u9f50\u6570\u7ec4\u5217\u5e76\u5de6\u5bf9\u9f50\u5217\uff0c\u4f8b\u5982\uff1a struct test demo [] = { { 56 , 23 , \"hello\" }, { -1 , 93463 , \"world\" }, { 7 , 5 , \"!!\" } }; AIAS_Right : \u5bf9\u9f50\u6570\u7ec4\u5217\u5e76\u53f3\u5bf9\u9f50\u5217\uff0c\u4f8b\u5982\uff1a struct test demo [] = { { 56 , 23 , \"hello\" }, { -1 , 93463 , \"world\" }, { 7 , 5 , \"!!\" } }; AIAS_None : \u4e0d\u8981\u5bf9\u9f50\u6570\u7ec4\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u5217\u3002","title":"AlignArrayOfStructures (ArrayInitializerAlignmentStyle)"},{"location":"AlignConsecutiveAssignments/","text":"AlignConsecutiveAssignments ( AlignConsecutiveStyle ) \u00b6 Info clang-format 3.8 \u5bf9\u9f50\u8fde\u7eed\u8d4b\u503c\u7684\u6837\u5f0f\u3002 Consecutive \u4f1a\u4ea7\u751f\u5982\u4e0b\u683c\u5f0f\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u8d4b\u503c\u3002 ACS_Consecutive : \u5bf9\u9f50\u8fde\u7eed\u884c\u4e0a\u7684\u8d4b\u503c\u3002\u8fd9\u5c06\u5bfc\u81f4\u7c7b\u4f3c\u7684\u683c\u5f0f\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ; ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ; ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ; ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ;","title":"AlignConsecutiveAssignments"},{"location":"AlignConsecutiveAssignments/#alignconsecutiveassignments-alignconsecutivestyle","text":"Info clang-format 3.8 \u5bf9\u9f50\u8fde\u7eed\u8d4b\u503c\u7684\u6837\u5f0f\u3002 Consecutive \u4f1a\u4ea7\u751f\u5982\u4e0b\u683c\u5f0f\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u8d4b\u503c\u3002 ACS_Consecutive : \u5bf9\u9f50\u8fde\u7eed\u884c\u4e0a\u7684\u8d4b\u503c\u3002\u8fd9\u5c06\u5bfc\u81f4\u7c7b\u4f3c\u7684\u683c\u5f0f\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ; ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ; ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ; ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int a = 1 ; int somelongname = 2 ; double c = 3 ; int d = 3 ; /* A comment. */ double e = 4 ;","title":"AlignConsecutiveAssignments (AlignConsecutiveStyle)"},{"location":"AlignConsecutiveBitFields/","text":"AlignConsecutiveBitFields ( AlignConsecutiveStyle ) \u00b6 Info clang-format 11 \u5bf9\u9f50\u8fde\u7eed\u4f4d\u5b57\u6bb5\u7684\u6837\u5f0f\u3002 \u5c06\u8fde\u7eed\u884c\u7684\u4f4d\u57df\u5206\u9694\u7b26\u5bf9\u9f50\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u4f4d\u57df\u3002 ACS_Consecutive : \u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u4f4d\u57df\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ; ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ; ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ; ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ;","title":"AlignConsecutiveBitFields"},{"location":"AlignConsecutiveBitFields/#alignconsecutivebitfields-alignconsecutivestyle","text":"Info clang-format 11 \u5bf9\u9f50\u8fde\u7eed\u4f4d\u5b57\u6bb5\u7684\u6837\u5f0f\u3002 \u5c06\u8fde\u7eed\u884c\u7684\u4f4d\u57df\u5206\u9694\u7b26\u5bf9\u9f50\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u4f4d\u57df\u3002 ACS_Consecutive : \u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u4f4d\u57df\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ; ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ; ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ; ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa : 1 ; int b : 12 ; int ccc : 8 ; int d : 2 ; /* A comment. */ int ee : 3 ;","title":"AlignConsecutiveBitFields (AlignConsecutiveStyle)"},{"location":"AlignConsecutiveDeclarations/","text":"AlignConsecutiveDeclarations ( AlignConsecutiveStyle ) \u00b6 Info clang-format 3.8 \u5bf9\u9f50\u8fde\u7eed\u58f0\u660e\u7684\u6837\u5f0f\u3002 \u5c06\u8fde\u7eed\u884c\u7684\u58f0\u660e\u540d\u79f0\u5bf9\u9f50\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u4f4d\u58f0\u660e\u3002 ACS_Consecutive : \u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u58f0\u660e\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ; ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ; ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ; ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ;","title":"AlignConsecutiveDeclarations"},{"location":"AlignConsecutiveDeclarations/#alignconsecutivedeclarations-alignconsecutivestyle","text":"Info clang-format 3.8 \u5bf9\u9f50\u8fde\u7eed\u58f0\u660e\u7684\u6837\u5f0f\u3002 \u5c06\u8fde\u7eed\u884c\u7684\u58f0\u660e\u540d\u79f0\u5bf9\u9f50\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u4f4d\u58f0\u660e\u3002 ACS_Consecutive : \u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u58f0\u660e\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ; ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ; ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ; ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a int aaaa = 12 ; float b = 23 ; std :: string ccc ; int a = 42 ; /* A comment. */ bool c = false ;","title":"AlignConsecutiveDeclarations (AlignConsecutiveStyle)"},{"location":"AlignConsecutiveMacros/","text":"AlignConsecutiveMacros ( AlignConsecutiveStyle ) \u00b6 Info clang-format 9 \u5bf9\u9f50\u8fde\u7eed\u5b8f\u5b9a\u4e49\u7684\u6837\u5f0f\u3002 Consecutive \u4f1a\u4ea7\u751f\u5982\u4e0b\u683c\u5f0f\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) #define bar(y, z) (y + z) \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u5b8f\u5b9a\u4e49\u3002 ACS_Consecutive : \u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u5b8f\u5b9a\u4e49\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z) ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z) ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z) ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z)","title":"AlignConsecutiveMacros"},{"location":"AlignConsecutiveMacros/#alignconsecutivemacros-alignconsecutivestyle","text":"Info clang-format 9 \u5bf9\u9f50\u8fde\u7eed\u5b8f\u5b9a\u4e49\u7684\u6837\u5f0f\u3002 Consecutive \u4f1a\u4ea7\u751f\u5982\u4e0b\u683c\u5f0f\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) #define bar(y, z) (y + z) \u53ef\u80fd\u7684\u503c\uff1a None Consecutive AcrossEmptyLines AcrossComments AcrossEmptyLinesAndComments ACS_None : \u4e0d\u8981\u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u5b8f\u5b9a\u4e49\u3002 ACS_Consecutive : \u5728\u8fde\u7eed\u7684\u884c\u4e0a\u5bf9\u9f50\u5b8f\u5b9a\u4e49\u3002\u8fd9\u5c06\u5bfc\u81f4\u5982\u4e0b\u683c\u5f0f\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z) ACS_AcrossEmptyLines : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u8de8\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z) ACS_AcrossComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u8d8a\u4ec5\u5305\u542b\u6ce8\u91ca\u7684\u884c\uff0c\u4f8b\u5982\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z) ACS_AcrossEmptyLinesAndComments : \u4e0e ACS_Consecutive \u76f8\u540c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u8de8\u884c\uff0c\u53ea\u5305\u542b\u6ce8\u91ca\u548c\u7a7a\u884c\uff0c\u4f8b\u5982\uff1a #define SHORT_NAME 42 #define LONGER_NAME 0x007f #define EVEN_LONGER_NAME (2) #define foo(x) (x * x) /* some comment */ #define bar(y, z) (y + z)","title":"AlignConsecutiveMacros (AlignConsecutiveStyle)"},{"location":"AlignEscapedNewlines/","text":"AlignEscapedNewlines ( EscapedNewlineAlignmentStyle ) \u00b6 Info clang-format 5 \u5728\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u4e2d\u5bf9\u9f50\u53cd\u659c\u6760\u7684\u9009\u9879\u3002 \u53ef\u80fd\u7684\u503c\uff1a DontAlign Left Right ENAS_DontAlign : \u4e0d\u8981\u5bf9\u9f50\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u3002 #define A \\ int aaaa; \\ int b; \\ int dddddddddd; ENAS_Left : \u5c06\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u5c3d\u53ef\u80fd\u5de6\u5bf9\u9f50\u3002 #define A \\ int aaaa; \\ int b; \\ int dddddddddd; ENAS_Right : \u5c06\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u5c3d\u53ef\u80fd\u53f3\u5bf9\u9f50\u3002 #define A \\ int aaaa; \\ int b; \\ int dddddddddd;","title":"AlignEscapedNewlines"},{"location":"AlignEscapedNewlines/#alignescapednewlines-escapednewlinealignmentstyle","text":"Info clang-format 5 \u5728\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u4e2d\u5bf9\u9f50\u53cd\u659c\u6760\u7684\u9009\u9879\u3002 \u53ef\u80fd\u7684\u503c\uff1a DontAlign Left Right ENAS_DontAlign : \u4e0d\u8981\u5bf9\u9f50\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u3002 #define A \\ int aaaa; \\ int b; \\ int dddddddddd; ENAS_Left : \u5c06\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u5c3d\u53ef\u80fd\u5de6\u5bf9\u9f50\u3002 #define A \\ int aaaa; \\ int b; \\ int dddddddddd; ENAS_Right : \u5c06\u8f6c\u4e49\u7684\u6362\u884c\u7b26\u5c3d\u53ef\u80fd\u53f3\u5bf9\u9f50\u3002 #define A \\ int aaaa; \\ int b; \\ int dddddddddd;","title":"AlignEscapedNewlines (EscapedNewlineAlignmentStyle)"},{"location":"AlignOperands/","text":"AlignOperands ( OperandAlignmentStyle ) \u00b6 Info clang-format 12 \u5982\u679c\u4e3a true \uff0c\u5219\u6c34\u5e73\u5bf9\u9f50\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u3002 \u53ef\u80fd\u7684\u503c\uff1a DontAlign Align AlignAfterOperator OAS_DontAlign : \u4e0d\u8981\u5bf9\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u8fdb\u884c\u5bf9\u9f50\u3002\u6362\u884c\u540e\u7684\u884c\u4ece\u884c\u9996\u5f00\u59cb\u7f29\u8fdb ContinuationIndentWidth \u7a7a\u683c\u3002 OAS_Align : \u6c34\u5e73\u5bf9\u9f50\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u3002 \u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u5c06\u4e00\u4e2a\u9700\u8981\u5728\u591a\u884c\u4e2d\u5206\u5272\u7684\u5355\u4e2a\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u5bf9\u9f50\uff0c\u4f8b\u5982\uff1a int aaa = bbbbbbbbbbbbbbb + ccccccccccccccc ; \u5f53 BreakBeforeBinaryOperators \u88ab\u8bbe\u7f6e\u65f6\uff0c\u88ab\u5305\u88c5\u7684\u64cd\u4f5c\u7b26\u4e0e\u64cd\u4f5c\u6570\u5728\u7b2c\u4e00\u884c\u5bf9\u9f50\u3002 int aaa = bbbbbbbbbbbbbbb + ccccccccccccccc; OAS_AlignAfterOperator : \u6c34\u5e73\u5bf9\u9f50\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u3002 \u8fd9\u7c7b\u4f3c\u4e8e AOS_Align \uff0c\u9664\u4e86\u5f53 BreakBeforeBinaryOperators \u88ab\u8bbe\u7f6e\u65f6\uff0c\u8be5\u64cd\u4f5c\u7b26\u662f\u4e0d\u7f29\u8fdb\u7684\uff0c\u4ee5\u4fbf\u88ab\u5305\u88c5\u7684\u64cd\u4f5c\u6570\u5728\u7b2c\u4e00\u884c\u4e0e\u64cd\u4f5c\u6570\u5bf9\u9f50\u3002 int aaa = bbbbbbbbbbbbbbb + ccccccccccccccc ;","title":"AlignOperands"},{"location":"AlignOperands/#alignoperands-operandalignmentstyle","text":"Info clang-format 12 \u5982\u679c\u4e3a true \uff0c\u5219\u6c34\u5e73\u5bf9\u9f50\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u3002 \u53ef\u80fd\u7684\u503c\uff1a DontAlign Align AlignAfterOperator OAS_DontAlign : \u4e0d\u8981\u5bf9\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u8fdb\u884c\u5bf9\u9f50\u3002\u6362\u884c\u540e\u7684\u884c\u4ece\u884c\u9996\u5f00\u59cb\u7f29\u8fdb ContinuationIndentWidth \u7a7a\u683c\u3002 OAS_Align : \u6c34\u5e73\u5bf9\u9f50\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u3002 \u5177\u4f53\u5730\u8bf4\uff0c\u5b83\u5c06\u4e00\u4e2a\u9700\u8981\u5728\u591a\u884c\u4e2d\u5206\u5272\u7684\u5355\u4e2a\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u5bf9\u9f50\uff0c\u4f8b\u5982\uff1a int aaa = bbbbbbbbbbbbbbb + ccccccccccccccc ; \u5f53 BreakBeforeBinaryOperators \u88ab\u8bbe\u7f6e\u65f6\uff0c\u88ab\u5305\u88c5\u7684\u64cd\u4f5c\u7b26\u4e0e\u64cd\u4f5c\u6570\u5728\u7b2c\u4e00\u884c\u5bf9\u9f50\u3002 int aaa = bbbbbbbbbbbbbbb + ccccccccccccccc; OAS_AlignAfterOperator : \u6c34\u5e73\u5bf9\u9f50\u4e8c\u8fdb\u5236\u548c\u4e09\u5143\u8868\u8fbe\u5f0f\u7684\u64cd\u4f5c\u6570\u3002 \u8fd9\u7c7b\u4f3c\u4e8e AOS_Align \uff0c\u9664\u4e86\u5f53 BreakBeforeBinaryOperators \u88ab\u8bbe\u7f6e\u65f6\uff0c\u8be5\u64cd\u4f5c\u7b26\u662f\u4e0d\u7f29\u8fdb\u7684\uff0c\u4ee5\u4fbf\u88ab\u5305\u88c5\u7684\u64cd\u4f5c\u6570\u5728\u7b2c\u4e00\u884c\u4e0e\u64cd\u4f5c\u6570\u5bf9\u9f50\u3002 int aaa = bbbbbbbbbbbbbbb + ccccccccccccccc ;","title":"AlignOperands (OperandAlignmentStyle)"},{"location":"AlignTrailingComments/","text":"AlignTrailingComments ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u5bf9\u9f50\u5c3e\u968f\u6ce8\u91ca\u3002 true false int a ; // My comment a int b = 2 ; // comment b int a ; // My comment a int b = 2 ; // comment about b","title":"AlignTrailingComments"},{"location":"AlignTrailingComments/#aligntrailingcomments-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u5bf9\u9f50\u5c3e\u968f\u6ce8\u91ca\u3002 true false int a ; // My comment a int b = 2 ; // comment b int a ; // My comment a int b = 2 ; // comment about b","title":"AlignTrailingComments (Boolean)"},{"location":"AllowAllArgumentsOnNextLine/","text":"AllowAllArgumentsOnNextLine ( Boolean ) \u00b6 Info clang-format 9 \u5982\u679c\u51fd\u6570\u8c03\u7528\u6216\u82b1\u62ec\u53f7\u7684\u521d\u59cb\u5316\u5217\u8868\u4e0d\u80fd\u653e\u5728\u4e00\u884c\u4e2d\uff0c\u5219\u5141\u8bb8\u5c06\u6240\u6709\u53c2\u6570\u653e\u5230\u4e0b\u4e00\u884c\uff0c\u5373\u4f7f BinPackArguments \u4e3a false \u3002 true false callFunction ( a , b , c , d ); callFunction ( a , b , c , d );","title":"AllowAllArgumentsOnNextLine"},{"location":"AllowAllArgumentsOnNextLine/#allowallargumentsonnextline-boolean","text":"Info clang-format 9 \u5982\u679c\u51fd\u6570\u8c03\u7528\u6216\u82b1\u62ec\u53f7\u7684\u521d\u59cb\u5316\u5217\u8868\u4e0d\u80fd\u653e\u5728\u4e00\u884c\u4e2d\uff0c\u5219\u5141\u8bb8\u5c06\u6240\u6709\u53c2\u6570\u653e\u5230\u4e0b\u4e00\u884c\uff0c\u5373\u4f7f BinPackArguments \u4e3a false \u3002 true false callFunction ( a , b , c , d ); callFunction ( a , b , c , d );","title":"AllowAllArgumentsOnNextLine (Boolean)"},{"location":"AllowAllConstructorInitializersOnNextLine/","text":"AllowAllConstructorInitializersOnNextLine ( Boolean ) \u00b6 Info clang-format 9 Warning \u6b64\u9009\u9879\u5df2\u5f03\u7528\u3002 \u8bf7\u53c2\u9605 PackConstructorInitializers \u7684 NextLine \u3002","title":"AllowAllConstructorInitializersOnNextLine"},{"location":"AllowAllConstructorInitializersOnNextLine/#allowallconstructorinitializersonnextline-boolean","text":"Info clang-format 9 Warning \u6b64\u9009\u9879\u5df2\u5f03\u7528\u3002 \u8bf7\u53c2\u9605 PackConstructorInitializers \u7684 NextLine \u3002","title":"AllowAllConstructorInitializersOnNextLine (Boolean)"},{"location":"AllowAllParametersOfDeclarationOnNextLine/","text":"AllowAllParametersOfDeclarationOnNextLine ( Boolean ) \u00b6 Info clang-format 3.3 \u5982\u679c\u51fd\u6570\u58f0\u660e\u4e0d\u9002\u5408\u4e00\u884c\uff0c\u5219\u5141\u8bb8\u5c06\u51fd\u6570\u58f0\u660e\u7684\u6240\u6709\u53c2\u6570\u653e\u5230\u4e0b\u4e00\u884c\uff0c\u5373\u4f7f BinPackParameters \u4e3a false \u3002 true false void myFunction ( int a , int b , int c , int d , int e ); void myFunction ( int a , int b , int c , int d , int e );","title":"AllowAllParametersOfDeclarationOnNextLine"},{"location":"AllowAllParametersOfDeclarationOnNextLine/#allowallparametersofdeclarationonnextline-boolean","text":"Info clang-format 3.3 \u5982\u679c\u51fd\u6570\u58f0\u660e\u4e0d\u9002\u5408\u4e00\u884c\uff0c\u5219\u5141\u8bb8\u5c06\u51fd\u6570\u58f0\u660e\u7684\u6240\u6709\u53c2\u6570\u653e\u5230\u4e0b\u4e00\u884c\uff0c\u5373\u4f7f BinPackParameters \u4e3a false \u3002 true false void myFunction ( int a , int b , int c , int d , int e ); void myFunction ( int a , int b , int c , int d , int e );","title":"AllowAllParametersOfDeclarationOnNextLine (Boolean)"},{"location":"AllowShortBlocksOnASingleLine/","text":"AllowShortBlocksOnASingleLine ( ShortBlockStyle ) \u00b6 Info clang-format 11 \u4f9d\u8d56\u4e8e\u503c\uff0c while ( true ) { continue ; \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Empty Always SBS_Never : \u6c38\u8fdc\u4e0d\u8981\u5c06\u5757\u5408\u5e76\u4e3a\u4e00\u884c\u3002 while ( true ) { } while ( true ) { continue ; } SBS_Empty : \u53ea\u5408\u5e76\u7a7a\u5757\u3002 while ( true ) {} while ( true ) { continue ; } SBS_Always : \u603b\u662f\u5c06\u77ed\u5757\u5408\u5e76\u4e3a\u4e00\u884c\u3002 while ( true ) {} while ( true ) { continue ; }","title":"AllowShortBlocksOnASingleLine"},{"location":"AllowShortBlocksOnASingleLine/#allowshortblocksonasingleline-shortblockstyle","text":"Info clang-format 11 \u4f9d\u8d56\u4e8e\u503c\uff0c while ( true ) { continue ; \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Empty Always SBS_Never : \u6c38\u8fdc\u4e0d\u8981\u5c06\u5757\u5408\u5e76\u4e3a\u4e00\u884c\u3002 while ( true ) { } while ( true ) { continue ; } SBS_Empty : \u53ea\u5408\u5e76\u7a7a\u5757\u3002 while ( true ) {} while ( true ) { continue ; } SBS_Always : \u603b\u662f\u5c06\u77ed\u5757\u5408\u5e76\u4e3a\u4e00\u884c\u3002 while ( true ) {} while ( true ) { continue ; }","title":"AllowShortBlocksOnASingleLine (ShortBlockStyle)"},{"location":"AllowShortCaseLabelsOnASingleLine/","text":"AllowShortCaseLabelsOnASingleLine ( Boolean ) \u00b6 Info clang-format 3.6 \u5982\u679c\u4e3a true \uff0c\u77ed case \u6807\u7b7e\u5c06\u6536\u7f29\u4e3a\u4e00\u884c\u3002 true false switch ( a ) { case 1 : x = 1 ; break ; case 2 : return ; } switch ( a ) { case 1 : x = 1 ; break ; case 2 : return ; }","title":"AllowShortCaseLabelsOnASingleLine"},{"location":"AllowShortCaseLabelsOnASingleLine/#allowshortcaselabelsonasingleline-boolean","text":"Info clang-format 3.6 \u5982\u679c\u4e3a true \uff0c\u77ed case \u6807\u7b7e\u5c06\u6536\u7f29\u4e3a\u4e00\u884c\u3002 true false switch ( a ) { case 1 : x = 1 ; break ; case 2 : return ; } switch ( a ) { case 1 : x = 1 ; break ; case 2 : return ; }","title":"AllowShortCaseLabelsOnASingleLine (Boolean)"},{"location":"AllowShortEnumsOnASingleLine/","text":"AllowShortEnumsOnASingleLine ( Boolean ) \u00b6 Info clang-format 12 \u5141\u8bb8\u5728\u5355\u884c\u4e0a\u4f7f\u7528\u77ed\u7684\u679a\u4e3e\u3002 true false enum { A , B } myEnum ; enum { A , B } myEnum ;","title":"AllowShortEnumsOnASingleLine"},{"location":"AllowShortEnumsOnASingleLine/#allowshortenumsonasingleline-boolean","text":"Info clang-format 12 \u5141\u8bb8\u5728\u5355\u884c\u4e0a\u4f7f\u7528\u77ed\u7684\u679a\u4e3e\u3002 true false enum { A , B } myEnum ; enum { A , B } myEnum ;","title":"AllowShortEnumsOnASingleLine (Boolean)"},{"location":"AllowShortFunctionsOnASingleLine/","text":"AllowShortFunctionsOnASingleLine ( ShortFunctionStyle ) \u00b6 Info clang-format 3.5 \u6839\u636e\u503c\uff0c int f () { return 0 ; } \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a None InlineOnly Empty Inline All SFS_None : \u6c38\u8fdc\u4e0d\u8981\u5c06\u51fd\u6570\u5408\u5e76\u5230\u4e00\u884c\u4e2d\u3002 SFS_InlineOnly : \u53ea\u5408\u5e76\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u4e0e Inline \u76f8\u540c\uff0c\u9664\u4e86\u5b83\u4e0d\u6697\u542b Empty : \u5373\u9876\u5c42\u7a7a\u51fd\u6570\u4e5f\u4e0d\u5408\u5e76\u3002 class Foo { void f () { foo (); } }; void f () { foo (); } void f () { } SFS_Empty : \u53ea\u5408\u5e76\u7a7a\u51fd\u6570\u3002 void f () {} void f2 () { bar2 (); } SFS_Inline : \u53ea\u5408\u5e76\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u6697\u542b Empty \u3002 class Foo { void f () { foo (); } }; void f () { foo (); } void f () {} SFS_All : \u5408\u5e76\u6240\u6709\u62df\u5408\u5728\u4e00\u884c\u4e0a\u7684\u51fd\u6570\u3002 class Foo { void f () { foo (); } }; void f () { bar (); }","title":"AllowShortFunctionsOnASingleLine"},{"location":"AllowShortFunctionsOnASingleLine/#allowshortfunctionsonasingleline-shortfunctionstyle","text":"Info clang-format 3.5 \u6839\u636e\u503c\uff0c int f () { return 0 ; } \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a None InlineOnly Empty Inline All SFS_None : \u6c38\u8fdc\u4e0d\u8981\u5c06\u51fd\u6570\u5408\u5e76\u5230\u4e00\u884c\u4e2d\u3002 SFS_InlineOnly : \u53ea\u5408\u5e76\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u4e0e Inline \u76f8\u540c\uff0c\u9664\u4e86\u5b83\u4e0d\u6697\u542b Empty : \u5373\u9876\u5c42\u7a7a\u51fd\u6570\u4e5f\u4e0d\u5408\u5e76\u3002 class Foo { void f () { foo (); } }; void f () { foo (); } void f () { } SFS_Empty : \u53ea\u5408\u5e76\u7a7a\u51fd\u6570\u3002 void f () {} void f2 () { bar2 (); } SFS_Inline : \u53ea\u5408\u5e76\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u6697\u542b Empty \u3002 class Foo { void f () { foo (); } }; void f () { foo (); } void f () {} SFS_All : \u5408\u5e76\u6240\u6709\u62df\u5408\u5728\u4e00\u884c\u4e0a\u7684\u51fd\u6570\u3002 class Foo { void f () { foo (); } }; void f () { bar (); }","title":"AllowShortFunctionsOnASingleLine (ShortFunctionStyle)"},{"location":"AllowShortIfStatementsOnASingleLine/","text":"AllowShortIfStatementsOnASingleLine ( ShortIfStyle ) \u00b6 Info clang-format 9 \u5982\u679c\u4e3a true \uff0c\u5219 if ( a ) return ; \u53ef\u4ee5\u653e\u5728\u4e00\u6761\u7ebf\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never WithoutElse OnlyFirstIf AllIfsAndElse SIS_Never : \u6c38\u8fdc\u4e0d\u8981\u628a\u7b80\u77ed\u7684 if \u653e\u5728\u540c\u4e00\u884c\u4e0a\u3002 if ( a ) return ; if ( b ) return ; else return ; if ( c ) return ; else { return ; } SIS_WithoutElse : \u5982\u679c\u6ca1\u6709 else \uff0c\u53ea\u6709\u5f53 else \u4e0d\u662f\u590d\u5408\u8bed\u53e5\u65f6\uff0c\u624d\u5c06\u77ed if \u653e\u5728\u540c\u4e00\u884c\u3002 if ( a ) return ; if ( b ) return ; else return ; if ( c ) return ; else { return ; } SIS_OnlyFirstIf : \u5728\u540c\u4e00\u884c\u4e2d\u653e\u7f6e\u7b80\u77ed\u7684 if \uff0c\u4f46\u4e0d\u8981\u653e\u7f6e else if \u6216 else \u8bed\u53e5\u3002 if ( a ) return ; if ( b ) return ; else if ( b ) return ; else return ; if ( c ) return ; else { return ; } SIS_AllIfsAndElse : \u5982\u679c else \u4e0d\u662f\u4e00\u4e2a\u590d\u5408\u8bed\u53e5\uff0c\u603b\u662f\u5c06\u7b80\u77ed\u7684 if \u653e\u5728\u540c\u4e00\u884c\u3002 if ( a ) return ; if ( b ) return ; else return ; if ( c ) return ; else { return ; }","title":"AllowShortIfStatementsOnASingleLine"},{"location":"AllowShortIfStatementsOnASingleLine/#allowshortifstatementsonasingleline-shortifstyle","text":"Info clang-format 9 \u5982\u679c\u4e3a true \uff0c\u5219 if ( a ) return ; \u53ef\u4ee5\u653e\u5728\u4e00\u6761\u7ebf\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never WithoutElse OnlyFirstIf AllIfsAndElse SIS_Never : \u6c38\u8fdc\u4e0d\u8981\u628a\u7b80\u77ed\u7684 if \u653e\u5728\u540c\u4e00\u884c\u4e0a\u3002 if ( a ) return ; if ( b ) return ; else return ; if ( c ) return ; else { return ; } SIS_WithoutElse : \u5982\u679c\u6ca1\u6709 else \uff0c\u53ea\u6709\u5f53 else \u4e0d\u662f\u590d\u5408\u8bed\u53e5\u65f6\uff0c\u624d\u5c06\u77ed if \u653e\u5728\u540c\u4e00\u884c\u3002 if ( a ) return ; if ( b ) return ; else return ; if ( c ) return ; else { return ; } SIS_OnlyFirstIf : \u5728\u540c\u4e00\u884c\u4e2d\u653e\u7f6e\u7b80\u77ed\u7684 if \uff0c\u4f46\u4e0d\u8981\u653e\u7f6e else if \u6216 else \u8bed\u53e5\u3002 if ( a ) return ; if ( b ) return ; else if ( b ) return ; else return ; if ( c ) return ; else { return ; } SIS_AllIfsAndElse : \u5982\u679c else \u4e0d\u662f\u4e00\u4e2a\u590d\u5408\u8bed\u53e5\uff0c\u603b\u662f\u5c06\u7b80\u77ed\u7684 if \u653e\u5728\u540c\u4e00\u884c\u3002 if ( a ) return ; if ( b ) return ; else return ; if ( c ) return ; else { return ; }","title":"AllowShortIfStatementsOnASingleLine (ShortIfStyle)"},{"location":"AllowShortLambdasOnASingleLine/","text":"AllowShortLambdasOnASingleLine ( ShortLambdaStyle ) \u00b6 Info clang-format 9 \u4f9d\u8d56\u4e8e\u503c\uff0c auto lambda []() { return 0 ; } \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a None Empty Inline All SLS_None : \u6c38\u8fdc\u4e0d\u8981\u5c06 lambda \u5408\u5e76\u5230\u4e00\u884c\u4e2d\u3002 SLS_Empty : \u53ea\u5408\u5e76\u7a7a\u7684 lambda \u3002 auto lambda = []( int a ) {} auto lambda2 = []( int a ) { return a ; }; SLS_Inline : \u5982\u679c\u662f\u51fd\u6570\u7684\u53c2\u6570\u5c06 lambda \u5408\u5e76\u4e3a\u4e00\u884c\u3002 auto lambda = []( int a ) { return a ; }; sort ( a . begin (), a . end (), ()[] { return x < y ; }) SLS_All : \u5c06\u6240\u6709\u62df\u5408\u7684 lambda \u5408\u5e76\u5230\u4e00\u884c\u4e0a\u3002 auto lambda = []( int a ) {} auto lambda2 = []( int a ) { return a ; };","title":"AllowShortLambdasOnASingleLine"},{"location":"AllowShortLambdasOnASingleLine/#allowshortlambdasonasingleline-shortlambdastyle","text":"Info clang-format 9 \u4f9d\u8d56\u4e8e\u503c\uff0c auto lambda []() { return 0 ; } \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002 \u53ef\u80fd\u7684\u503c\uff1a None Empty Inline All SLS_None : \u6c38\u8fdc\u4e0d\u8981\u5c06 lambda \u5408\u5e76\u5230\u4e00\u884c\u4e2d\u3002 SLS_Empty : \u53ea\u5408\u5e76\u7a7a\u7684 lambda \u3002 auto lambda = []( int a ) {} auto lambda2 = []( int a ) { return a ; }; SLS_Inline : \u5982\u679c\u662f\u51fd\u6570\u7684\u53c2\u6570\u5c06 lambda \u5408\u5e76\u4e3a\u4e00\u884c\u3002 auto lambda = []( int a ) { return a ; }; sort ( a . begin (), a . end (), ()[] { return x < y ; }) SLS_All : \u5c06\u6240\u6709\u62df\u5408\u7684 lambda \u5408\u5e76\u5230\u4e00\u884c\u4e0a\u3002 auto lambda = []( int a ) {} auto lambda2 = []( int a ) { return a ; };","title":"AllowShortLambdasOnASingleLine (ShortLambdaStyle)"},{"location":"AllowShortLoopsOnASingleLine/","text":"AllowShortLoopsOnASingleLine ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219 while ( true ) continue ; \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002","title":"AllowShortLoopsOnASingleLine"},{"location":"AllowShortLoopsOnASingleLine/#allowshortloopsonasingleline-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219 while ( true ) continue ; \u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002","title":"AllowShortLoopsOnASingleLine (Boolean)"},{"location":"AlwaysBreakAfterDefinitionReturnType/","text":"AlwaysBreakAfterDefinitionReturnType ( DefinitionReturnTypeBreakingStyle ) \u00b6 Info clang-format 3.7 Warning \u8be5\u9009\u9879\u5df2\u5f03\u7528\uff0c\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\u800c\u4fdd\u7559\u3002 \u51fd\u6570\u5b9a\u4e49\u8fd4\u56de\u8981\u4f7f\u7528\u7684\u7c7b\u578b\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None All TopLevel DRTBS_None : \u81ea\u52a8\u8fd4\u56de\u7c7b\u578b\u540e\u4e2d\u65ad\u3002 PenaltyReturnTypeOnItsOwnLine \u88ab\u8003\u8651\u5728\u5185\u3002 DRTBS_All : \u603b\u662f\u5728\u8fd4\u56de\u7c7b\u578b\u540e\u4e2d\u65ad\u3002 DRTBS_TopLevel : \u603b\u662f\u5728\u9876\u7ea7\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002","title":"AlwaysBreakAfterDefinitionReturnType"},{"location":"AlwaysBreakAfterDefinitionReturnType/#alwaysbreakafterdefinitionreturntype-definitionreturntypebreakingstyle","text":"Info clang-format 3.7 Warning \u8be5\u9009\u9879\u5df2\u5f03\u7528\uff0c\u4e3a\u4e86\u5411\u540e\u517c\u5bb9\u800c\u4fdd\u7559\u3002 \u51fd\u6570\u5b9a\u4e49\u8fd4\u56de\u8981\u4f7f\u7528\u7684\u7c7b\u578b\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None All TopLevel DRTBS_None : \u81ea\u52a8\u8fd4\u56de\u7c7b\u578b\u540e\u4e2d\u65ad\u3002 PenaltyReturnTypeOnItsOwnLine \u88ab\u8003\u8651\u5728\u5185\u3002 DRTBS_All : \u603b\u662f\u5728\u8fd4\u56de\u7c7b\u578b\u540e\u4e2d\u65ad\u3002 DRTBS_TopLevel : \u603b\u662f\u5728\u9876\u7ea7\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002","title":"AlwaysBreakAfterDefinitionReturnType (DefinitionReturnTypeBreakingStyle)"},{"location":"AlwaysBreakAfterReturnType/","text":"AlwaysBreakAfterReturnType ( ReturnTypeBreakingStyle ) \u00b6 Info clang-format 3.8 \u51fd\u6570\u58f0\u660e\u8fd4\u56de\u8981\u4f7f\u7528\u7684\u7c7b\u578b\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None All TopLevel AllDefinitions TopLevelDefinitions RTBS_None : \u8fd4\u56de\u7c7b\u578b\u540e\u81ea\u52a8\u4e2d\u65ad\u3002 PenaltyReturnTypeOnItsOwnLine \u88ab\u8003\u8651\u5728\u5185\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_All : \u603b\u662f\u5728\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_TopLevel : \u603b\u662f\u5728\u9876\u7ea7\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_AllDefinitions : \u603b\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_TopLevelDefinitions : \u603b\u662f\u5728\u9876\u7ea7\u5b9a\u4e49\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; }","title":"AlwaysBreakAfterReturnType"},{"location":"AlwaysBreakAfterReturnType/#alwaysbreakafterreturntype-returntypebreakingstyle","text":"Info clang-format 3.8 \u51fd\u6570\u58f0\u660e\u8fd4\u56de\u8981\u4f7f\u7528\u7684\u7c7b\u578b\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None All TopLevel AllDefinitions TopLevelDefinitions RTBS_None : \u8fd4\u56de\u7c7b\u578b\u540e\u81ea\u52a8\u4e2d\u65ad\u3002 PenaltyReturnTypeOnItsOwnLine \u88ab\u8003\u8651\u5728\u5185\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_All : \u603b\u662f\u5728\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_TopLevel : \u603b\u662f\u5728\u9876\u7ea7\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_AllDefinitions : \u603b\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; } RTBS_TopLevelDefinitions : \u603b\u662f\u5728\u9876\u7ea7\u5b9a\u4e49\u7684\u8fd4\u56de\u7c7b\u578b\u4e4b\u540e\u4e2d\u65ad\u3002 class A { int f () { return 0 ; }; }; int f (); int f () { return 1 ; }","title":"AlwaysBreakAfterReturnType (ReturnTypeBreakingStyle)"},{"location":"AlwaysBreakBeforeMultilineStrings/","text":"AlwaysBreakBeforeMultilineStrings ( Boolean ) \u00b6 Info clang-format 3.4 \u5982\u679c\u4e3a true \uff0c\u603b\u662f\u5728\u591a\u884c\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u4e4b\u524d\u4e2d\u65ad\u3002 \u8fd9\u4e2a\u6807\u5fd7\u662f\u4e3a\u4e86\u4f7f\u6587\u4ef6\u4e2d\u6709\u591a\u4e2a\u591a\u884c\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u770b\u8d77\u6765\u66f4\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5728\u6b64\u65f6\u5305\u88c5\u5b57\u7b26\u4e32\u5bfc\u81f4\u4ece\u884c\u5f00\u59cb\u7684 ContinuationIndentWidth \u7a7a\u683c\u7f29\u8fdb\u65f6\uff0c\u5b83\u624d\u4f1a\u751f\u6548\u3002 true false aaaa = \"bbbb\" \"cccc\" ; aaaa = \"bbbb\" \"cccc\" ;","title":"AlwaysBreakBeforeMultilineStrings"},{"location":"AlwaysBreakBeforeMultilineStrings/#alwaysbreakbeforemultilinestrings-boolean","text":"Info clang-format 3.4 \u5982\u679c\u4e3a true \uff0c\u603b\u662f\u5728\u591a\u884c\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u4e4b\u524d\u4e2d\u65ad\u3002 \u8fd9\u4e2a\u6807\u5fd7\u662f\u4e3a\u4e86\u4f7f\u6587\u4ef6\u4e2d\u6709\u591a\u4e2a\u591a\u884c\u5b57\u7b26\u4e32\u7684\u60c5\u51b5\u770b\u8d77\u6765\u66f4\u4e00\u81f4\u3002\u56e0\u6b64\uff0c\u53ea\u6709\u5728\u6b64\u65f6\u5305\u88c5\u5b57\u7b26\u4e32\u5bfc\u81f4\u4ece\u884c\u5f00\u59cb\u7684 ContinuationIndentWidth \u7a7a\u683c\u7f29\u8fdb\u65f6\uff0c\u5b83\u624d\u4f1a\u751f\u6548\u3002 true false aaaa = \"bbbb\" \"cccc\" ; aaaa = \"bbbb\" \"cccc\" ;","title":"AlwaysBreakBeforeMultilineStrings (Boolean)"},{"location":"AlwaysBreakTemplateDeclarations/","text":"AlwaysBreakTemplateDeclarations ( BreakTemplateDeclarationsStyle ) \u00b6 Info clang-format 7 \u8981\u4f7f\u7528\u7684\u6a21\u677f\u58f0\u660e\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a No MultiLine Yes BTDS_No : \u5728\u58f0\u660e\u4e4b\u524d\u4e0d\u8981\u5f3a\u5236\u4e2d\u65ad\u3002 PenaltyBreakTemplateDeclaration \u88ab\u8003\u8651\u5728\u5185\u3002 template < typename T > T foo () { } template < typename T > T foo ( int aaaaaaaaaaaaaaaaaaaaa , int bbbbbbbbbbbbbbbbbbbbb ) { } BTDS_MultiLine : \u53ea\u6709\u5f53\u4e0b\u5217\u58f0\u660e\u8de8\u591a\u884c\u65f6\uff0c\u624d\u5728\u6a21\u677f\u58f0\u660e\u540e\u5f3a\u5236\u4e2d\u65ad\u3002 template < typename T > T foo () { } template < typename T > T foo ( int aaaaaaaaaaaaaaaaaaaaa , int bbbbbbbbbbbbbbbbbbbbb ) { } BTDS_Yes : \u603b\u662f\u5728\u6a21\u677f\u58f0\u660e\u4e4b\u540e\u4e2d\u65ad\u3002 template < typename T > T foo () { } template < typename T > T foo ( int aaaaaaaaaaaaaaaaaaaaa , int bbbbbbbbbbbbbbbbbbbbb ) { }","title":"AlwaysBreakTemplateDeclarations"},{"location":"AlwaysBreakTemplateDeclarations/#alwaysbreaktemplatedeclarations-breaktemplatedeclarationsstyle","text":"Info clang-format 7 \u8981\u4f7f\u7528\u7684\u6a21\u677f\u58f0\u660e\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a No MultiLine Yes BTDS_No : \u5728\u58f0\u660e\u4e4b\u524d\u4e0d\u8981\u5f3a\u5236\u4e2d\u65ad\u3002 PenaltyBreakTemplateDeclaration \u88ab\u8003\u8651\u5728\u5185\u3002 template < typename T > T foo () { } template < typename T > T foo ( int aaaaaaaaaaaaaaaaaaaaa , int bbbbbbbbbbbbbbbbbbbbb ) { } BTDS_MultiLine : \u53ea\u6709\u5f53\u4e0b\u5217\u58f0\u660e\u8de8\u591a\u884c\u65f6\uff0c\u624d\u5728\u6a21\u677f\u58f0\u660e\u540e\u5f3a\u5236\u4e2d\u65ad\u3002 template < typename T > T foo () { } template < typename T > T foo ( int aaaaaaaaaaaaaaaaaaaaa , int bbbbbbbbbbbbbbbbbbbbb ) { } BTDS_Yes : \u603b\u662f\u5728\u6a21\u677f\u58f0\u660e\u4e4b\u540e\u4e2d\u65ad\u3002 template < typename T > T foo () { } template < typename T > T foo ( int aaaaaaaaaaaaaaaaaaaaa , int bbbbbbbbbbbbbbbbbbbbb ) { }","title":"AlwaysBreakTemplateDeclarations (BreakTemplateDeclarationsStyle)"},{"location":"AttributeMacros/","text":"AttributeMacros ( List of Strings ) \u00b6 Info clang-format 12 \u5b57\u7b26\u4e32\u7684\u5411\u91cf\uff0c\u5e94\u8be5\u88ab\u89e3\u91ca\u4e3a\u5c5e\u6027/\u9650\u5b9a\u7b26\u800c\u4e0d\u662f\u6807\u8bc6\u7b26\u3002\u8fd9\u5bf9\u4e8e\u8bed\u8a00\u6269\u5c55\u6216\u9759\u6001\u5206\u6790\u5668\u6ce8\u91ca\u5f88\u6709\u7528\u3002 \u4f8b\u5982\uff1a x = ( char * __capability ) & y ; int function ( void ) __ununsed ; void only_writes_to_buffer ( char * __output buffer ); \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a AttributeMacros : [ '__capability' , '__output' , '__ununsed' ]","title":"AttributeMacros"},{"location":"AttributeMacros/#attributemacros-list-of-strings","text":"Info clang-format 12 \u5b57\u7b26\u4e32\u7684\u5411\u91cf\uff0c\u5e94\u8be5\u88ab\u89e3\u91ca\u4e3a\u5c5e\u6027/\u9650\u5b9a\u7b26\u800c\u4e0d\u662f\u6807\u8bc6\u7b26\u3002\u8fd9\u5bf9\u4e8e\u8bed\u8a00\u6269\u5c55\u6216\u9759\u6001\u5206\u6790\u5668\u6ce8\u91ca\u5f88\u6709\u7528\u3002 \u4f8b\u5982\uff1a x = ( char * __capability ) & y ; int function ( void ) __ununsed ; void only_writes_to_buffer ( char * __output buffer ); \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a AttributeMacros : [ '__capability' , '__output' , '__ununsed' ]","title":"AttributeMacros (List of Strings)"},{"location":"BasedOnStyle/","text":"BasedOnStyle ( string ) \u00b6 \u7528\u4e8e\u914d\u7f6e\u4e2d\u672a\u7279\u522b\u8bbe\u7f6e\u7684\u6240\u6709\u9009\u9879\u7684\u6837\u5f0f\u3002\u7528\u4e8e\u914d\u7f6e\u4e2d\u672a\u7279\u522b\u8bbe\u7f6e\u7684\u6240\u6709\u9009\u9879\u7684\u6837\u5f0f\u3002 \u6b64\u9009\u9879\u4ec5\u5728 clang-format \u914d\u7f6e\u4e2d\u652f\u6301\uff08\u5728 -style='{...}' \u548c .clang-format \u6587\u4ef6\uff09\u3002 \u53ef\u80fd\u7684\u503c\uff1a LLVM \u4e00\u79cd\u7b26\u5408 LLVM\u4ee3\u7801\u89c4\u8303 \u7684\u6837\u5f0f Google \u4e00\u79cd\u7b26\u5408 Google C++\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f Chromium \u4e00\u79cd\u7b26\u5408 Chromium\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f Mozilla \u4e00\u79cd\u7b26\u5408 Mozilla\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f WebKit \u4e00\u79cd\u7b26\u5408 WebKit\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f Microsoft \u4e00\u79cd\u7b26\u5408 Microsoft\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f GNU \u4e00\u79cd\u7b26\u5408 GNU\u4ee3\u7801\u89c4\u8303 \u7684\u6837\u5f0f InheritParentConfig \u4e0d\u662f\u771f\u6b63\u7684\u6837\u5f0f\uff0c\u4f46\u5141\u8bb8\u4f7f\u7528\u6765\u81ea\u7236\u76ee\u5f55\u7684 .clang-format \u6587\u4ef6(\u5982\u679c\u6ca1\u6709\u7236\u76ee\u5f55\uff0c\u5219\u4e3a\u5176\u7236\u76ee\u5f55)\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\u7236\u6587\u4ef6\uff0c\u5b83\u4f1a\u9000\u56de\u5230 fallback \u6837\u5f0f\uff0c\u5e76\u5c06\u66f4\u6539\u5e94\u7528\u5230\u8be5\u6837\u5f0f\u3002\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\uff0c\u60a8\u53ef\u4ee5\u8986\u76d6\u5b50\u76ee\u5f55\u7684\u4e3b\u6837\u5f0f\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u8fd9\u4e5f\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a --style={BasedOnStyle: InheritParentConfig, ColumnLimit: 20}","title":"BasedOnStyle"},{"location":"BasedOnStyle/#basedonstyle-string","text":"\u7528\u4e8e\u914d\u7f6e\u4e2d\u672a\u7279\u522b\u8bbe\u7f6e\u7684\u6240\u6709\u9009\u9879\u7684\u6837\u5f0f\u3002\u7528\u4e8e\u914d\u7f6e\u4e2d\u672a\u7279\u522b\u8bbe\u7f6e\u7684\u6240\u6709\u9009\u9879\u7684\u6837\u5f0f\u3002 \u6b64\u9009\u9879\u4ec5\u5728 clang-format \u914d\u7f6e\u4e2d\u652f\u6301\uff08\u5728 -style='{...}' \u548c .clang-format \u6587\u4ef6\uff09\u3002 \u53ef\u80fd\u7684\u503c\uff1a LLVM \u4e00\u79cd\u7b26\u5408 LLVM\u4ee3\u7801\u89c4\u8303 \u7684\u6837\u5f0f Google \u4e00\u79cd\u7b26\u5408 Google C++\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f Chromium \u4e00\u79cd\u7b26\u5408 Chromium\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f Mozilla \u4e00\u79cd\u7b26\u5408 Mozilla\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f WebKit \u4e00\u79cd\u7b26\u5408 WebKit\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f Microsoft \u4e00\u79cd\u7b26\u5408 Microsoft\u98ce\u683c\u6307\u5357 \u7684\u6837\u5f0f GNU \u4e00\u79cd\u7b26\u5408 GNU\u4ee3\u7801\u89c4\u8303 \u7684\u6837\u5f0f InheritParentConfig \u4e0d\u662f\u771f\u6b63\u7684\u6837\u5f0f\uff0c\u4f46\u5141\u8bb8\u4f7f\u7528\u6765\u81ea\u7236\u76ee\u5f55\u7684 .clang-format \u6587\u4ef6(\u5982\u679c\u6ca1\u6709\u7236\u76ee\u5f55\uff0c\u5219\u4e3a\u5176\u7236\u76ee\u5f55)\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\u7236\u6587\u4ef6\uff0c\u5b83\u4f1a\u9000\u56de\u5230 fallback \u6837\u5f0f\uff0c\u5e76\u5c06\u66f4\u6539\u5e94\u7528\u5230\u8be5\u6837\u5f0f\u3002\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\uff0c\u60a8\u53ef\u4ee5\u8986\u76d6\u5b50\u76ee\u5f55\u7684\u4e3b\u6837\u5f0f\u7684\u67d0\u4e9b\u90e8\u5206\u3002\u8fd9\u4e5f\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a --style={BasedOnStyle: InheritParentConfig, ColumnLimit: 20}","title":"BasedOnStyle (string)"},{"location":"BinPackArguments/","text":"BinPackArguments ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a false \uff0c\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u8981\u4e48\u90fd\u5728\u540c\u4e00\u884c\uff0c\u8981\u4e48\u5404\u4e00\u884c\u3002 true false void f () { f ( aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ); } void f () { f ( aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ); }","title":"BinPackArguments"},{"location":"BinPackArguments/#binpackarguments-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a false \uff0c\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u8981\u4e48\u90fd\u5728\u540c\u4e00\u884c\uff0c\u8981\u4e48\u5404\u4e00\u884c\u3002 true false void f () { f ( aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ); } void f () { f ( aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ); }","title":"BinPackArguments (Boolean)"},{"location":"BinPackParameters/","text":"BinPackParameters ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a false \uff0c\u51fd\u6570\u58f0\u660e\u6216\u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u53c2\u8981\u4e48\u90fd\u5728\u540c\u4e00\u884c\uff0c\u8981\u4e48\u5404\u6709\u4e00\u884c\u3002 true false void f ( int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ) {} void f ( int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ) {}","title":"BinPackParameters"},{"location":"BinPackParameters/#binpackparameters-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a false \uff0c\u51fd\u6570\u58f0\u660e\u6216\u51fd\u6570\u5b9a\u4e49\u7684\u5f62\u53c2\u8981\u4e48\u90fd\u5728\u540c\u4e00\u884c\uff0c\u8981\u4e48\u5404\u6709\u4e00\u884c\u3002 true false void f ( int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ) {} void f ( int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaa , int aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ) {}","title":"BinPackParameters (Boolean)"},{"location":"BitFieldColonSpacing/","text":"BitFieldColonSpacing ( BitFieldColonSpacingStyle ) \u00b6 Info clang-format 12 \u7528\u4e8e\u4f4d\u5b57\u6bb5\u7684 BitFieldColonSpacingStyle \u3002 \u53ef\u80fd\u7684\u503c\uff1a Both None Before After BFCS_Both : \u6bcf\u8fb9\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 unsigned bf : 2 ; BFCS_None : \u5728 : \u5468\u56f4\u4e0d\u6dfb\u52a0\u7a7a\u683c(\u9664\u975e\u9700\u8981 AlignConsecutiveBitFields )\u3002 unsigned bf : 2 ; BFCS_Before : \u53ea\u5728 : \u524d\u9762\u6dfb\u52a0\u7a7a\u683c\u3002 unsigned bf : 2 ; BFCS_After : \u53ea\u5728 : \u540e\u9762\u52a0\u7a7a\u683c(\u5982\u679c AlignConsecutiveBitFields \u9700\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u5728\u524d\u9762\u52a0\u7a7a\u683c)\u3002 unsigned bf : 2 ;","title":"BitFieldColonSpacing"},{"location":"BitFieldColonSpacing/#bitfieldcolonspacing-bitfieldcolonspacingstyle","text":"Info clang-format 12 \u7528\u4e8e\u4f4d\u5b57\u6bb5\u7684 BitFieldColonSpacingStyle \u3002 \u53ef\u80fd\u7684\u503c\uff1a Both None Before After BFCS_Both : \u6bcf\u8fb9\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 unsigned bf : 2 ; BFCS_None : \u5728 : \u5468\u56f4\u4e0d\u6dfb\u52a0\u7a7a\u683c(\u9664\u975e\u9700\u8981 AlignConsecutiveBitFields )\u3002 unsigned bf : 2 ; BFCS_Before : \u53ea\u5728 : \u524d\u9762\u6dfb\u52a0\u7a7a\u683c\u3002 unsigned bf : 2 ; BFCS_After : \u53ea\u5728 : \u540e\u9762\u52a0\u7a7a\u683c(\u5982\u679c AlignConsecutiveBitFields \u9700\u8981\u7684\u8bdd\uff0c\u53ef\u4ee5\u5728\u524d\u9762\u52a0\u7a7a\u683c)\u3002 unsigned bf : 2 ;","title":"BitFieldColonSpacing (BitFieldColonSpacingStyle)"},{"location":"BraceWrapping/","text":"BraceWrapping ( BraceWrappingFlags ) \u00b6 Info clang-format 3.8 \u63a7\u5236\u5927\u62ec\u53f7\u6362\u884c\u60c5\u51b5\u3002 \u5982\u679c BreakBeforeBraces \u88ab\u8bbe\u7f6e\u4e3a BS_Custom \uff0c\u4f7f\u7528\u8fd9\u4e2a\u6765\u6307\u5b9a\u5e94\u8be5\u5982\u4f55\u5904\u7406\u6bcf\u4e2a\u5355\u72ec\u7684\u5927\u62ec\u53f7\u3002\u5426\u5219\uff0c\u8fd9\u5c06\u88ab\u5ffd\u7565\u3002 # Example of usage: BreakBeforeBraces : Custom BraceWrapping : AfterEnum : true AfterStruct : false SplitEmptyFunction : false \u5d4c\u5957\u7684\u914d\u7f6e\u6807\u8bb0\uff1a bool AfterCaseLabel : case \u6807\u7b7e\u7684\u62ec\u53f7 true false switch ( foo ) { case 1 : { bar (); break ; } default : { plop (); } } switch ( foo ) { case 1 : { bar (); break ; } default : { plop (); } } bool AfterClass : class \u5b9a\u4e49\u7684\u62ec\u53f7 true false class foo {}; class foo {}; BraceWrappingAfterControlStatementStyle AfterControlStatement : \u5305\u542b\u63a7\u5236\u8bed\u53e5 ( if / for / while / switch /\u2026) \u53ef\u80fd\u7684\u503c\uff1a Never MultiLine Always BWACS_Never : \u4e0d\u8981\u5728\u63a7\u5236\u8bed\u53e5\u540e\u9762\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u3002 if ( foo ()) { } else { } for ( int i = 0 ; i < 10 ; ++ i ) { } BWACS_MultiLine : \u5728\u591a\u884c\u63a7\u5236\u8bed\u53e5\u540e\u53ea\u4f7f\u7528\u5927\u62ec\u53f7\u3002 if ( foo && bar && baz ) { quux (); } while ( foo || bar ) { } BWACS_Always : \u5728\u63a7\u5236\u8bed\u53e5\u540e\u9762\u603b\u662f\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u3002 if ( foo ()) { } else {} for ( int i = 0 ; i < 10 ; ++ i ) {} bool AfterEnum : enum \u5b9a\u4e49\u7684\u62ec\u53f7 true false enum X : int { B }; enum X : int { B }; bool AfterFunction : \u51fd\u6570\u5b9a\u4e49\u7684\u62ec\u53f7 true false void foo () { bar (); bar2 (); } void foo () { bar (); bar2 (); } bool AfterNamespace : namespace \u5b9a\u4e49\u7684\u62ec\u53f7 true false namespace { int foo (); int bar (); } namespace { int foo (); int bar (); } bool AfterObjCDeclaration : ObjC \u5b9a\u4e49\u7684\u62ec\u53f7 (interfaces, implementations\u2026). @autoreleasepool \u548c @synchronized \u5757\u6839\u636e AfterControlStatement \u6807\u5fd7\u8fdb\u884c\u5305\u88c5 bool AfterStruct : struct \u5b9a\u4e49\u7684\u62ec\u53f7 true false struct foo { int x ; }; struct foo { int x ; }; bool AfterUnion : union \u5b9a\u4e49\u7684\u62ec\u53f7 true false union foo { int x ; } union foo { int x ; } bool AfterExternBlock : extern \u5b9a\u4e49\u7684\u62ec\u53f7 true false extern \"C\" { int foo (); } extern \"C\" { int foo (); } bool BeforeCatch : catch \u4e4b\u524d\u7684\u62ec\u53f7 true false try { foo (); } catch () { } try { foo (); } catch () { } bool BeforeElse : else \u4e4b\u524d\u7684\u62ec\u53f7 true false if ( foo ()) { } else { } if ( foo ()) { } else { } bool BeforeLambdaBody : lambda \u5757\u7684\u62ec\u53f7 true false connect ( []() { foo (); bar (); }); connect ([]() { foo (); bar (); }); bool BeforeWhile : while \u524d\u7684\u62ec\u53f7 true false do { foo (); } while ( 1 ); do { foo (); } while ( 1 ); bool IndentBraces : \u7f29\u8fdb\u5305\u88c5\u7684\u62ec\u53f7\u672c\u8eab bool SplitEmptyFunction : \u5982\u679c\u4e3a false \uff0c\u5219\u7a7a\u51fd\u6570\u4f53\u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002\u8be5\u9009\u9879\u4ec5\u5728\u51fd\u6570\u7684\u5de6\u62ec\u53f7\u5df2\u7ecf\u88ab\u5305\u88c5\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5373\u8bbe\u7f6e\u4e86 AfterFunction \u62ec\u53f7\u5c01\u88c5\u6a21\u5f0f\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u4e0d\u53ef\u4ee5/\u4e0d\u5e94\u8be5\u653e\u5728\u5355\u884c\u4e0a(\u5982 AllowShortFunctionsOnASingleLine \u548c\u6784\u9020\u51fd\u6570\u683c\u5f0f\u5316\u9009\u9879)\u3002 true false int f () { } int f () {} bool SplitEmptyRecord : \u5982\u679c\u4e3a false \uff0c\u7a7a\u8bb0\u5f55(\u4f8b\u5982\u7c7b\uff0c\u7ed3\u6784\u4f53\u6216\u8054\u5408)\u4e3b\u4f53\u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002\u6b64\u9009\u9879\u4ec5\u5728\u8bb0\u5f55\u7684\u5f00\u62ec\u53f7\u5df2\u7ecf\u88ab\u5305\u88c5\u65f6\u4f7f\u7528\uff0c\u5373\u8bbe\u7f6e\u4e86 AfterClass (\u5bf9\u4e8e\u7c7b)\u62ec\u53f7\u5c01\u88c5\u6a21\u5f0f\u3002 true flase class Foo { } class Foo {} bool SplitEmptyNamespace : \u5982\u679c\u4e3a false \uff0c\u5219\u7a7a\u7684\u547d\u540d\u7a7a\u95f4\u4e3b\u4f53\u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002\u8be5\u9009\u9879\u4ec5\u5728\u540d\u79f0\u7a7a\u95f4\u7684\u5de6\u5927\u62ec\u53f7\u5df2\u7ecf\u88ab\u5305\u88c5\u65f6\u4f7f\u7528\uff0c\u5373\u8bbe\u7f6e\u4e86 AfterNamespace \u5927\u62ec\u53f7\u5305\u88c5\u6a21\u5f0f\u3002 true false namespace Foo { } namespace Foo {}","title":"BraceWrapping"},{"location":"BraceWrapping/#bracewrapping-bracewrappingflags","text":"Info clang-format 3.8 \u63a7\u5236\u5927\u62ec\u53f7\u6362\u884c\u60c5\u51b5\u3002 \u5982\u679c BreakBeforeBraces \u88ab\u8bbe\u7f6e\u4e3a BS_Custom \uff0c\u4f7f\u7528\u8fd9\u4e2a\u6765\u6307\u5b9a\u5e94\u8be5\u5982\u4f55\u5904\u7406\u6bcf\u4e2a\u5355\u72ec\u7684\u5927\u62ec\u53f7\u3002\u5426\u5219\uff0c\u8fd9\u5c06\u88ab\u5ffd\u7565\u3002 # Example of usage: BreakBeforeBraces : Custom BraceWrapping : AfterEnum : true AfterStruct : false SplitEmptyFunction : false \u5d4c\u5957\u7684\u914d\u7f6e\u6807\u8bb0\uff1a bool AfterCaseLabel : case \u6807\u7b7e\u7684\u62ec\u53f7 true false switch ( foo ) { case 1 : { bar (); break ; } default : { plop (); } } switch ( foo ) { case 1 : { bar (); break ; } default : { plop (); } } bool AfterClass : class \u5b9a\u4e49\u7684\u62ec\u53f7 true false class foo {}; class foo {}; BraceWrappingAfterControlStatementStyle AfterControlStatement : \u5305\u542b\u63a7\u5236\u8bed\u53e5 ( if / for / while / switch /\u2026) \u53ef\u80fd\u7684\u503c\uff1a Never MultiLine Always BWACS_Never : \u4e0d\u8981\u5728\u63a7\u5236\u8bed\u53e5\u540e\u9762\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u3002 if ( foo ()) { } else { } for ( int i = 0 ; i < 10 ; ++ i ) { } BWACS_MultiLine : \u5728\u591a\u884c\u63a7\u5236\u8bed\u53e5\u540e\u53ea\u4f7f\u7528\u5927\u62ec\u53f7\u3002 if ( foo && bar && baz ) { quux (); } while ( foo || bar ) { } BWACS_Always : \u5728\u63a7\u5236\u8bed\u53e5\u540e\u9762\u603b\u662f\u7528\u5927\u62ec\u53f7\u62ec\u8d77\u6765\u3002 if ( foo ()) { } else {} for ( int i = 0 ; i < 10 ; ++ i ) {} bool AfterEnum : enum \u5b9a\u4e49\u7684\u62ec\u53f7 true false enum X : int { B }; enum X : int { B }; bool AfterFunction : \u51fd\u6570\u5b9a\u4e49\u7684\u62ec\u53f7 true false void foo () { bar (); bar2 (); } void foo () { bar (); bar2 (); } bool AfterNamespace : namespace \u5b9a\u4e49\u7684\u62ec\u53f7 true false namespace { int foo (); int bar (); } namespace { int foo (); int bar (); } bool AfterObjCDeclaration : ObjC \u5b9a\u4e49\u7684\u62ec\u53f7 (interfaces, implementations\u2026). @autoreleasepool \u548c @synchronized \u5757\u6839\u636e AfterControlStatement \u6807\u5fd7\u8fdb\u884c\u5305\u88c5 bool AfterStruct : struct \u5b9a\u4e49\u7684\u62ec\u53f7 true false struct foo { int x ; }; struct foo { int x ; }; bool AfterUnion : union \u5b9a\u4e49\u7684\u62ec\u53f7 true false union foo { int x ; } union foo { int x ; } bool AfterExternBlock : extern \u5b9a\u4e49\u7684\u62ec\u53f7 true false extern \"C\" { int foo (); } extern \"C\" { int foo (); } bool BeforeCatch : catch \u4e4b\u524d\u7684\u62ec\u53f7 true false try { foo (); } catch () { } try { foo (); } catch () { } bool BeforeElse : else \u4e4b\u524d\u7684\u62ec\u53f7 true false if ( foo ()) { } else { } if ( foo ()) { } else { } bool BeforeLambdaBody : lambda \u5757\u7684\u62ec\u53f7 true false connect ( []() { foo (); bar (); }); connect ([]() { foo (); bar (); }); bool BeforeWhile : while \u524d\u7684\u62ec\u53f7 true false do { foo (); } while ( 1 ); do { foo (); } while ( 1 ); bool IndentBraces : \u7f29\u8fdb\u5305\u88c5\u7684\u62ec\u53f7\u672c\u8eab bool SplitEmptyFunction : \u5982\u679c\u4e3a false \uff0c\u5219\u7a7a\u51fd\u6570\u4f53\u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002\u8be5\u9009\u9879\u4ec5\u5728\u51fd\u6570\u7684\u5de6\u62ec\u53f7\u5df2\u7ecf\u88ab\u5305\u88c5\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\uff0c\u5373\u8bbe\u7f6e\u4e86 AfterFunction \u62ec\u53f7\u5c01\u88c5\u6a21\u5f0f\uff0c\u5e76\u4e14\u8be5\u51fd\u6570\u4e0d\u53ef\u4ee5/\u4e0d\u5e94\u8be5\u653e\u5728\u5355\u884c\u4e0a(\u5982 AllowShortFunctionsOnASingleLine \u548c\u6784\u9020\u51fd\u6570\u683c\u5f0f\u5316\u9009\u9879)\u3002 true false int f () { } int f () {} bool SplitEmptyRecord : \u5982\u679c\u4e3a false \uff0c\u7a7a\u8bb0\u5f55(\u4f8b\u5982\u7c7b\uff0c\u7ed3\u6784\u4f53\u6216\u8054\u5408)\u4e3b\u4f53\u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002\u6b64\u9009\u9879\u4ec5\u5728\u8bb0\u5f55\u7684\u5f00\u62ec\u53f7\u5df2\u7ecf\u88ab\u5305\u88c5\u65f6\u4f7f\u7528\uff0c\u5373\u8bbe\u7f6e\u4e86 AfterClass (\u5bf9\u4e8e\u7c7b)\u62ec\u53f7\u5c01\u88c5\u6a21\u5f0f\u3002 true flase class Foo { } class Foo {} bool SplitEmptyNamespace : \u5982\u679c\u4e3a false \uff0c\u5219\u7a7a\u7684\u547d\u540d\u7a7a\u95f4\u4e3b\u4f53\u53ef\u4ee5\u653e\u5728\u4e00\u884c\u4e0a\u3002\u8be5\u9009\u9879\u4ec5\u5728\u540d\u79f0\u7a7a\u95f4\u7684\u5de6\u5927\u62ec\u53f7\u5df2\u7ecf\u88ab\u5305\u88c5\u65f6\u4f7f\u7528\uff0c\u5373\u8bbe\u7f6e\u4e86 AfterNamespace \u5927\u62ec\u53f7\u5305\u88c5\u6a21\u5f0f\u3002 true false namespace Foo { } namespace Foo {}","title":"BraceWrapping (BraceWrappingFlags)"},{"location":"BreakAfterJavaFieldAnnotations/","text":"BreakAfterJavaFieldAnnotations ( Boolean ) \u00b6 Info clang-format 3.8 \u5728 Java \u6587\u4ef6\u4e2d\u5b57\u6bb5\u7684\u6bcf\u4e2a\u6ce8\u91ca\u4e4b\u540e\u4e2d\u65ad\u3002 true false @Partial @Mock DataLoad loader ; @Partial @Mock DataLoad loader ;","title":"BreakAfterJavaFieldAnnotations"},{"location":"BreakAfterJavaFieldAnnotations/#breakafterjavafieldannotations-boolean","text":"Info clang-format 3.8 \u5728 Java \u6587\u4ef6\u4e2d\u5b57\u6bb5\u7684\u6bcf\u4e2a\u6ce8\u91ca\u4e4b\u540e\u4e2d\u65ad\u3002 true false @Partial @Mock DataLoad loader ; @Partial @Mock DataLoad loader ;","title":"BreakAfterJavaFieldAnnotations (Boolean)"},{"location":"BreakBeforeBinaryOperators/","text":"BreakBeforeBinaryOperators ( BinaryOperatorStyle ) \u00b6 Info clang-format 3.6 \u4e8c\u5143\u8fd0\u7b97\u7b26\u6362\u884c\u7684\u65b9\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None NonAssignment All BOS_None : \u8fd0\u7b97\u7b26\u4e4b\u540e\u4e2d\u65ad\u3002 LooooooooooongType loooooooooooooooooooooongVariable = someLooooooooooooooooongFunction (); bool value = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa > ccccccccccccccccccccccccccccccccccccccccc ; BOS_NonAssignment : \u5728\u975e\u8d4b\u503c\u64cd\u4f5c\u7b26\u4e4b\u524d\u4e2d\u65ad\u3002 LooooooooooongType loooooooooooooooooooooongVariable = someLooooooooooooooooongFunction (); bool value = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa > ccccccccccccccccccccccccccccccccccccccccc ; BOS_All : \u8fd0\u7b97\u7b26\u4e4b\u524d\u4e2d\u65ad\u3002 LooooooooooongType loooooooooooooooooooooongVariable = someLooooooooooooooooongFunction (); bool value = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa > ccccccccccccccccccccccccccccccccccccccccc ;","title":"BreakBeforeBinaryOperators"},{"location":"BreakBeforeBinaryOperators/#breakbeforebinaryoperators-binaryoperatorstyle","text":"Info clang-format 3.6 \u4e8c\u5143\u8fd0\u7b97\u7b26\u6362\u884c\u7684\u65b9\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None NonAssignment All BOS_None : \u8fd0\u7b97\u7b26\u4e4b\u540e\u4e2d\u65ad\u3002 LooooooooooongType loooooooooooooooooooooongVariable = someLooooooooooooooooongFunction (); bool value = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa > ccccccccccccccccccccccccccccccccccccccccc ; BOS_NonAssignment : \u5728\u975e\u8d4b\u503c\u64cd\u4f5c\u7b26\u4e4b\u524d\u4e2d\u65ad\u3002 LooooooooooongType loooooooooooooooooooooongVariable = someLooooooooooooooooongFunction (); bool value = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa > ccccccccccccccccccccccccccccccccccccccccc ; BOS_All : \u8fd0\u7b97\u7b26\u4e4b\u524d\u4e2d\u65ad\u3002 LooooooooooongType loooooooooooooooooooooongVariable = someLooooooooooooooooongFunction (); bool value = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa > ccccccccccccccccccccccccccccccccccccccccc ;","title":"BreakBeforeBinaryOperators (BinaryOperatorStyle)"},{"location":"BreakBeforeBraces/","text":"BreakBeforeBraces ( BraceBreakingStyle ) \u00b6 Info clang-format 3.7 \u8981\u4f7f\u7528\u7684\u5927\u62ec\u53f7\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Attach Linux Mozilla Stroustrup Allman Whitesmiths GNU WebKit Custom BS_Attach : \u59cb\u7ec8\u5c06\u5927\u62ec\u53f7\u9644\u52a0\u5230\u5468\u56f4\u7684\u4e0a\u4e0b\u6587\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Linux : \u4e0e Attach \u7c7b\u4f3c\uff0c\u4f46\u5728\u51fd\u6570\u3001\u540d\u79f0\u7a7a\u95f4\u548c\u7c7b\u5b9a\u4e49\u7684\u5927\u62ec\u53f7\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Mozilla : \u4e0e Attach \u7c7b\u4f3c\uff0c\u4f46\u5728\u679a\u4e3e\u3001\u51fd\u6570\u548c\u8bb0\u5f55\u5b9a\u4e49\u7684\u5927\u62ec\u53f7\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Stroustrup : \u4e0e Attach \u7c7b\u4f3c\uff0c\u4f46\u5728\u51fd\u6570\u5b9a\u4e49\u3001 catch \u548c else \u4e4b\u524d\u65ad\u5f00\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Allman : \u603b\u662f\u5728\u5927\u62ec\u53f7\u4e4b\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Whitesmiths : \u50cf Allman \u4e00\u6837\uff0c\u4f46\u603b\u662f\u7528\u5927\u62ec\u53f7\u7f29\u8fdb\u548c\u7528\u5927\u62ec\u53f7\u5bf9\u9f50\u4ee3\u7801\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_GNU : \u603b\u662f\u5728\u5927\u62ec\u53f7\u4e4b\u524d\u4e2d\u65ad\uff0c\u5e76\u5728\u63a7\u5236\u8bed\u53e5\u7684\u5927\u62ec\u53f7\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u7f29\u8fdb\uff0c\u800c\u4e0d\u662f\u5728\u7c7b\u3001\u51fd\u6570\u6216\u5176\u4ed6\u5b9a\u4e49\u7684\u5927\u62ec\u53f7\u4e2d\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_WebKit : \u7c7b\u4f3c\u4e8e Attach \uff0c\u4f46\u662f\u5728\u51fd\u6570\u4e4b\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Custom : \u5728 BraceWrapping \u4e2d\u914d\u7f6e\u6bcf\u4e2a\u5355\u72ec\u7684\u5927\u62ec\u53f7\u3002","title":"BreakBeforeBraces"},{"location":"BreakBeforeBraces/#breakbeforebraces-bracebreakingstyle","text":"Info clang-format 3.7 \u8981\u4f7f\u7528\u7684\u5927\u62ec\u53f7\u4e2d\u65ad\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Attach Linux Mozilla Stroustrup Allman Whitesmiths GNU WebKit Custom BS_Attach : \u59cb\u7ec8\u5c06\u5927\u62ec\u53f7\u9644\u52a0\u5230\u5468\u56f4\u7684\u4e0a\u4e0b\u6587\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Linux : \u4e0e Attach \u7c7b\u4f3c\uff0c\u4f46\u5728\u51fd\u6570\u3001\u540d\u79f0\u7a7a\u95f4\u548c\u7c7b\u5b9a\u4e49\u7684\u5927\u62ec\u53f7\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Mozilla : \u4e0e Attach \u7c7b\u4f3c\uff0c\u4f46\u5728\u679a\u4e3e\u3001\u51fd\u6570\u548c\u8bb0\u5f55\u5b9a\u4e49\u7684\u5927\u62ec\u53f7\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Stroustrup : \u4e0e Attach \u7c7b\u4f3c\uff0c\u4f46\u5728\u51fd\u6570\u5b9a\u4e49\u3001 catch \u548c else \u4e4b\u524d\u65ad\u5f00\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Allman : \u603b\u662f\u5728\u5927\u62ec\u53f7\u4e4b\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Whitesmiths : \u50cf Allman \u4e00\u6837\uff0c\u4f46\u603b\u662f\u7528\u5927\u62ec\u53f7\u7f29\u8fdb\u548c\u7528\u5927\u62ec\u53f7\u5bf9\u9f50\u4ee3\u7801\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_GNU : \u603b\u662f\u5728\u5927\u62ec\u53f7\u4e4b\u524d\u4e2d\u65ad\uff0c\u5e76\u5728\u63a7\u5236\u8bed\u53e5\u7684\u5927\u62ec\u53f7\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u7f29\u8fdb\uff0c\u800c\u4e0d\u662f\u5728\u7c7b\u3001\u51fd\u6570\u6216\u5176\u4ed6\u5b9a\u4e49\u7684\u5927\u62ec\u53f7\u4e2d\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_WebKit : \u7c7b\u4f3c\u4e8e Attach \uff0c\u4f46\u662f\u5728\u51fd\u6570\u4e4b\u524d\u4e2d\u65ad\u3002 namespace N { enum E { E1 , E2 , }; class C { public : C (); }; bool baz ( int i ) { try { do { switch ( i ) { case 1 : { foobar (); break ; } default : { break ; } } } while ( -- i ); return true ; } catch (...) { handleError (); return false ; } } void foo ( bool b ) { if ( b ) { baz ( 2 ); } else { baz ( 5 ); } } void bar () { foo ( true ); } } // namespace N BS_Custom : \u5728 BraceWrapping \u4e2d\u914d\u7f6e\u6bcf\u4e2a\u5355\u72ec\u7684\u5927\u62ec\u53f7\u3002","title":"BreakBeforeBraces (BraceBreakingStyle)"},{"location":"BreakBeforeConceptDeclarations/","text":"BreakBeforeConceptDeclarations ( Boolean ) \u00b6 Info clang-format 13 \u5982\u679c\u4e3a true \uff0c concept \u5c06\u88ab\u653e\u7f6e\u5230\u65b0\u884c\u3002 true false template < typename T > concept ... template < typename T > concept ...","title":"BreakBeforeConceptDeclarations"},{"location":"BreakBeforeConceptDeclarations/#breakbeforeconceptdeclarations-boolean","text":"Info clang-format 13 \u5982\u679c\u4e3a true \uff0c concept \u5c06\u88ab\u653e\u7f6e\u5230\u65b0\u884c\u3002 true false template < typename T > concept ... template < typename T > concept ...","title":"BreakBeforeConceptDeclarations (Boolean)"},{"location":"BreakBeforeTernaryOperators/","text":"BreakBeforeTernaryOperators ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5c06\u5728\u6362\u884c\u7b26\u4e4b\u540e\u653e\u7f6e\u4e09\u5143\u64cd\u4f5c\u7b26\u3002 true false veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongDescription ? firstValue : SecondValueVeryVeryVeryVeryLong ; veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongDescription ? firstValue : SecondValueVeryVeryVeryVeryLong ;","title":"BreakBeforeTernaryOperators"},{"location":"BreakBeforeTernaryOperators/#breakbeforeternaryoperators-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5c06\u5728\u6362\u884c\u7b26\u4e4b\u540e\u653e\u7f6e\u4e09\u5143\u64cd\u4f5c\u7b26\u3002 true false veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongDescription ? firstValue : SecondValueVeryVeryVeryVeryLong ; veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongDescription ? firstValue : SecondValueVeryVeryVeryVeryLong ;","title":"BreakBeforeTernaryOperators (Boolean)"},{"location":"BreakConstructorInitializers/","text":"BreakConstructorInitializers ( BreakConstructorInitializersStyle ) \u00b6 Info clang-format 5 \u8981\u4f7f\u7528\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a BeforeColon BeforeComma AfterColon BCIS_BeforeColon : \u5728\u5192\u53f7\u4e4b\u524d\u548c\u9017\u53f7\u4e4b\u540e\u4e2d\u65ad\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\u3002 Constructor () : initializer1 (), initializer2 () BCIS_BeforeComma : \u5728\u5192\u53f7\u548c\u9017\u53f7\u4e4b\u524d\u4e2d\u65ad\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\uff0c\u5e76\u5c06\u9017\u53f7\u4e0e\u5192\u53f7\u5bf9\u9f50\u3002 Constructor () : initializer1 () , initializer2 () BCIS_AfterColon : \u5728\u5192\u53f7\u548c\u9017\u53f7\u540e\u4e2d\u65ad\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\u3002 Constructor () : initializer1 (), initializer2 ()","title":"BreakConstructorInitializers"},{"location":"BreakConstructorInitializers/#breakconstructorinitializers-breakconstructorinitializersstyle","text":"Info clang-format 5 \u8981\u4f7f\u7528\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a BeforeColon BeforeComma AfterColon BCIS_BeforeColon : \u5728\u5192\u53f7\u4e4b\u524d\u548c\u9017\u53f7\u4e4b\u540e\u4e2d\u65ad\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\u3002 Constructor () : initializer1 (), initializer2 () BCIS_BeforeComma : \u5728\u5192\u53f7\u548c\u9017\u53f7\u4e4b\u524d\u4e2d\u65ad\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\uff0c\u5e76\u5c06\u9017\u53f7\u4e0e\u5192\u53f7\u5bf9\u9f50\u3002 Constructor () : initializer1 () , initializer2 () BCIS_AfterColon : \u5728\u5192\u53f7\u548c\u9017\u53f7\u540e\u4e2d\u65ad\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5f0f\u3002 Constructor () : initializer1 (), initializer2 ()","title":"BreakConstructorInitializers (BreakConstructorInitializersStyle)"},{"location":"BreakInheritanceList/","text":"BreakInheritanceList ( BreakInheritanceListStyle ) \u00b6 Info clang-format 7 \u8981\u4f7f\u7528\u7684\u7ee7\u627f\u5217\u8868\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a BeforeColon BeforeComma AfterColon BILS_BeforeColon : \u5728\u5192\u53f7\u4e4b\u524d\u548c\u9017\u53f7\u4e4b\u540e\u4e2d\u65ad\u7ee7\u627f\u5217\u8868\u3002 class Foo : Base1 , Base2 {}; BILS_BeforeComma : \u5728\u5192\u53f7\u548c\u9017\u53f7\u4e4b\u524d\u4e2d\u65ad\u7ee7\u627f\u5217\u8868\uff0c\u5e76\u5c06\u9017\u53f7\u4e0e\u5192\u53f7\u5bf9\u9f50\u3002 class Foo : Base1 , Base2 {}; BILS_AfterColon : \u5728\u5192\u53f7\u548c\u9017\u53f7\u540e\u65ad\u5f00\u7ee7\u627f\u5217\u8868\u3002 class Foo : Base1 , Base2 {};","title":"BreakInheritanceList"},{"location":"BreakInheritanceList/#breakinheritancelist-breakinheritanceliststyle","text":"Info clang-format 7 \u8981\u4f7f\u7528\u7684\u7ee7\u627f\u5217\u8868\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a BeforeColon BeforeComma AfterColon BILS_BeforeColon : \u5728\u5192\u53f7\u4e4b\u524d\u548c\u9017\u53f7\u4e4b\u540e\u4e2d\u65ad\u7ee7\u627f\u5217\u8868\u3002 class Foo : Base1 , Base2 {}; BILS_BeforeComma : \u5728\u5192\u53f7\u548c\u9017\u53f7\u4e4b\u524d\u4e2d\u65ad\u7ee7\u627f\u5217\u8868\uff0c\u5e76\u5c06\u9017\u53f7\u4e0e\u5192\u53f7\u5bf9\u9f50\u3002 class Foo : Base1 , Base2 {}; BILS_AfterColon : \u5728\u5192\u53f7\u548c\u9017\u53f7\u540e\u65ad\u5f00\u7ee7\u627f\u5217\u8868\u3002 class Foo : Base1 , Base2 {};","title":"BreakInheritanceList (BreakInheritanceListStyle)"},{"location":"BreakStringLiterals/","text":"BreakStringLiterals ( Boolean ) \u00b6 Info clang-format 3.9 \u5141\u8bb8\u5728\u683c\u5f0f\u5316\u65f6\u4e2d\u65ad\u5b57\u7b26\u4e32\u6587\u5b57\u3002 true false const char * x = \"veryVeryVeryVeryVeryVe\" \"ryVeryVeryVeryVeryVery\" \"VeryLongString\" ; const char * x = \"veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString\" ;","title":"BreakStringLiterals"},{"location":"BreakStringLiterals/#breakstringliterals-boolean","text":"Info clang-format 3.9 \u5141\u8bb8\u5728\u683c\u5f0f\u5316\u65f6\u4e2d\u65ad\u5b57\u7b26\u4e32\u6587\u5b57\u3002 true false const char * x = \"veryVeryVeryVeryVeryVe\" \"ryVeryVeryVeryVeryVery\" \"VeryLongString\" ; const char * x = \"veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString\" ;","title":"BreakStringLiterals (Boolean)"},{"location":"ColumnLimit/","text":"ColumnLimit ( Unsigned ) \u00b6 Info clang-format 3.7 \u5217\u7684\u9650\u5236\u3002 \u5217\u9650\u5236\u4e3a 0 \u610f\u5473\u7740\u6ca1\u6709\u5217\u9650\u5236\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c clang-format \u5c06\u5728\u8bed\u53e5\u4e2d\u5c0a\u91cd\u8f93\u5165\u7684\u65ad\u884c\u51b3\u5b9a\uff0c\u9664\u975e\u5b83\u4eec\u4e0e\u5176\u4ed6\u89c4\u5219\u76f8\u62b5\u89e6\u3002","title":"ColumnLimit"},{"location":"ColumnLimit/#columnlimit-unsigned","text":"Info clang-format 3.7 \u5217\u7684\u9650\u5236\u3002 \u5217\u9650\u5236\u4e3a 0 \u610f\u5473\u7740\u6ca1\u6709\u5217\u9650\u5236\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c clang-format \u5c06\u5728\u8bed\u53e5\u4e2d\u5c0a\u91cd\u8f93\u5165\u7684\u65ad\u884c\u51b3\u5b9a\uff0c\u9664\u975e\u5b83\u4eec\u4e0e\u5176\u4ed6\u89c4\u5219\u76f8\u62b5\u89e6\u3002","title":"ColumnLimit (Unsigned)"},{"location":"CommentPragmas/","text":"CommentPragmas ( String ) \u00b6 Info clang-format 3.7 \u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u63cf\u8ff0\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u6ce8\u91ca\uff0c\u4e0d\u5e94\u8be5\u5c06\u6ce8\u91ca\u5206\u6210\u884c\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u66f4\u6539\u6ce8\u91ca\u3002 // CommentPragmas: '^ FOOBAR pragma:' // Will leave the following line unaffected #include <vector> // FOOBAR pragma: keep","title":"CommentPragmas"},{"location":"CommentPragmas/#commentpragmas-string","text":"Info clang-format 3.7 \u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5b83\u63cf\u8ff0\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u6ce8\u91ca\uff0c\u4e0d\u5e94\u8be5\u5c06\u6ce8\u91ca\u5206\u6210\u884c\u6216\u4ee5\u5176\u4ed6\u65b9\u5f0f\u66f4\u6539\u6ce8\u91ca\u3002 // CommentPragmas: '^ FOOBAR pragma:' // Will leave the following line unaffected #include <vector> // FOOBAR pragma: keep","title":"CommentPragmas (String)"},{"location":"CompactNamespaces/","text":"CompactNamespaces ( Boolean ) \u00b6 Info clang-format 5 \u5982\u679c\u4e3a true \uff0c\u8fde\u7eed\u7684\u540d\u79f0\u7a7a\u95f4\u58f0\u660e\u5c06\u5728\u540c\u4e00\u884c\u4e0a\u3002\u5982\u679c\u4e3a false \uff0c\u5219\u6bcf\u4e2a\u540d\u79f0\u7a7a\u95f4\u90fd\u58f0\u660e\u5728\u4e00\u4e2a\u65b0\u7684\u884c\u4e2d\u3002 true false namespace Foo { namespace Bar { }} namespace Foo { namespace Bar { } } \u5982\u679c\u5b83\u4e0d\u80fd\u653e\u5728\u4e00\u884c\u4e2d\uff0c\u6ea2\u51fa\u7684\u540d\u79f0\u7a7a\u95f4\u5c06\u88ab\u5305\u88c5\uff1a namespace Foo { namespace Bar { namespace Extra { }}}","title":"CompactNamespaces"},{"location":"CompactNamespaces/#compactnamespaces-boolean","text":"Info clang-format 5 \u5982\u679c\u4e3a true \uff0c\u8fde\u7eed\u7684\u540d\u79f0\u7a7a\u95f4\u58f0\u660e\u5c06\u5728\u540c\u4e00\u884c\u4e0a\u3002\u5982\u679c\u4e3a false \uff0c\u5219\u6bcf\u4e2a\u540d\u79f0\u7a7a\u95f4\u90fd\u58f0\u660e\u5728\u4e00\u4e2a\u65b0\u7684\u884c\u4e2d\u3002 true false namespace Foo { namespace Bar { }} namespace Foo { namespace Bar { } } \u5982\u679c\u5b83\u4e0d\u80fd\u653e\u5728\u4e00\u884c\u4e2d\uff0c\u6ea2\u51fa\u7684\u540d\u79f0\u7a7a\u95f4\u5c06\u88ab\u5305\u88c5\uff1a namespace Foo { namespace Bar { namespace Extra { }}}","title":"CompactNamespaces (Boolean)"},{"location":"ConfiguringStyle/","text":"clang-format \u652f\u6301\u4e24\u79cd\u63d0\u4f9b\u81ea\u5b9a\u4e49\u6837\u5f0f\u9009\u9879\u7684\u65b9\u5f0f\uff1a\u76f4\u63a5\u5728 -style= \u547d\u4ee4\u884c\u9009\u9879\u4e2d\u6307\u5b9a\u6837\u5f0f\u914d\u7f6e\uff0c\u6216\u8005\u4f7f\u7528 -style=file \u5e76\u5c06\u6837\u5f0f\u914d\u7f6e\u653e\u5728\u9879\u76ee\u76ee\u5f55\u7684 .clang-format \u6216 _clang-format \u6587\u4ef6\u4e2d\u3002 \u5f53\u4f7f\u7528 -style=file \u65f6\uff0c\u6bcf\u4e2a\u8f93\u5165\u6587\u4ef6\u7684 clang-format \u5c06\u5c1d\u8bd5\u5728\u8f93\u5165\u6587\u4ef6\u6700\u8fd1\u7684\u7236\u76ee\u5f55\u4e2d\u627e\u5230 .clang-format \u6587\u4ef6\u3002\u5f53\u4f7f\u7528\u6807\u51c6\u8f93\u5165\u65f6\uff0c\u641c\u7d22\u4ece\u5f53\u524d\u76ee\u5f55\u5f00\u59cb\u3002 \u6587\u4ef6 .clang-format \u4f7f\u7528 YAML \u683c\u5f0f\uff1a key1 : value1 key2 : value2 # \u4e00\u6761\u6ce8\u91ca\u3002 ... \u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u7531\u51e0\u4e2a\u90e8\u5206\u7ec4\u6210\uff0c\u6bcf\u4e2a\u90e8\u5206\u4f7f\u7528\u4e0d\u540c\u7684\u8bed\u8a00\uff1a\u53c2\u6570\u8868\u793a\u8be5\u914d\u7f6e\u90e8\u5206\u9488\u5bf9\u7684\u7f16\u7a0b\u8bed\u8a00\u3002\u6709\u5173\u652f\u6301\u7684\u8bed\u8a00\u5217\u8868\uff0c\u8bf7\u53c2\u9605\u4e0b\u9762\u8bed\u8a00\u9009\u9879\u7684\u8bf4\u660e\u3002\u7b2c\u4e00\u90e8\u5206\u53ef\u80fd\u6ca1\u6709\u8bbe\u7f6e\u8bed\u8a00\uff0c\u5b83\u5c06\u4e3a\u6240\u6709\u8bed\u8a00\u8bbe\u7f6e\u9ed8\u8ba4\u6837\u5f0f\u9009\u9879\u3002\u7279\u5b9a\u8bed\u8a00\u7684\u914d\u7f6e\u8282\u5c06\u8986\u76d6\u5728\u9ed8\u8ba4\u90e8\u5206\u7684\u8bbe\u7f6e\u7684\u9009\u9879\u3002 \u5f53 clang-format \u683c\u5f0f\u5316\u6587\u4ef6\u65f6\uff0c\u5b83\u4f7f\u7528\u6587\u4ef6\u540d\u81ea\u52a8\u68c0\u6d4b\u8bed\u8a00\u3002\u5f53\u683c\u5f0f\u5316\u6807\u51c6\u8f93\u5165\u6216\u6ca1\u6709\u4e0e\u5176\u8bed\u8a00\u5bf9\u5e94\u7684\u6269\u5c55\u540d\u7684\u6587\u4ef6\u65f6\uff0c -assume-filename= \u9009\u9879\u53ef\u4ee5\u7528\u6765\u8986\u76d6 clang-format \u7528\u4e8e\u68c0\u6d4b\u8bed\u8a00\u7684\u6587\u4ef6\u540d\u3002 \u591a\u8bed\u8a00\u914d\u7f6e\u6587\u4ef6\u7684\u793a\u4f8b\uff1a --- # \u6211\u4eec\u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684LLVM\u98ce\u683c\uff0c\u4f46\u67094\u5217\u7f29\u8fdb\u3002 BasedOnStyle : LLVM IndentWidth : 4 --- Language : Cpp # \u5f3a\u5236\u6307\u5411 C++ \u7c7b\u578b\u7684\u6307\u9488\u3002 DerivePointerAlignment : false PointerAlignment : Left --- Language : JavaScript # \u4e3aJS\u4f7f\u7528100\u5217\u3002 ColumnLimit : 100 --- Language : Proto # \u4e0d\u8981\u683c\u5f0f\u5316.proto\u6587\u4ef6\u3002 DisableFormat : true --- Language : CSharp # \u4e3aC#\u4f7f\u7528100\u5217\u3002 ColumnLimit : 100 ... \u83b7\u5f97\u5305\u542b\u6240\u6709\u9884\u5b9a\u4e49\u6837\u5f0f\u914d\u7f6e\u9009\u9879\u7684\u6709\u6548 .clang-format \u6587\u4ef6\u7684\u4e00\u4e2a\u7b80\u5355\u65b9\u6cd5\u662f\uff1a clang-format -style = llvm -dump-config > .clang-format \u5f53\u5728 -style= \u9009\u9879\u4e2d\u6307\u5b9a\u914d\u7f6e\u65f6\uff0c\u76f8\u540c\u7684\u914d\u7f6e\u5c06\u5e94\u7528\u4e8e\u6240\u6709\u8f93\u5165\u6587\u4ef6\u3002\u914d\u7f6e\u7684\u683c\u5f0f\u4e3a\uff1a -style = '{key1: value1, key2: value2, ...}'","title":"\u914d\u7f6e\u6837\u5f0f"},{"location":"ConstructorInitializerAllOnOneLineOrOnePerLine/","text":"ConstructorInitializerAllOnOneLineOrOnePerLine ( Boolean ) \u00b6 Info clang-format 3.7 Warning \u6b64\u9009\u9879\u5df2\u5f03\u7528\u3002 \u8bf7\u53c2\u9605 PackConstructorInitializers \u7684 CurrentLine \u3002","title":"ConstructorInitializerAllOnOneLineOrOnePerLine"},{"location":"ConstructorInitializerAllOnOneLineOrOnePerLine/#constructorinitializerallononelineoroneperline-boolean","text":"Info clang-format 3.7 Warning \u6b64\u9009\u9879\u5df2\u5f03\u7528\u3002 \u8bf7\u53c2\u9605 PackConstructorInitializers \u7684 CurrentLine \u3002","title":"ConstructorInitializerAllOnOneLineOrOnePerLine (Boolean)"},{"location":"ConstructorInitializerIndentWidth/","text":"ConstructorInitializerIndentWidth ( Unsigned ) \u00b6 Info clang-format 3.7 \u7528\u4e8e\u7f29\u8fdb\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u548c\u7ee7\u627f\u5217\u8868\u7684\u5b57\u7b26\u6570\u3002","title":"ConstructorInitializerIndentWidth"},{"location":"ConstructorInitializerIndentWidth/#constructorinitializerindentwidth-unsigned","text":"Info clang-format 3.7 \u7528\u4e8e\u7f29\u8fdb\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u548c\u7ee7\u627f\u5217\u8868\u7684\u5b57\u7b26\u6570\u3002","title":"ConstructorInitializerIndentWidth (Unsigned)"},{"location":"ContinuationIndentWidth/","text":"ContinuationIndentWidth ( Unsigned ) \u00b6 Info clang-format 3.7 \u8fde\u7eed\u884c\u7f29\u8fdb\u5bbd\u5ea6\u3002 ContinuationIndentWidth : 2 int i = // VeryVeryVeryVeryVeryLongComment longFunction ( // Again a long comment arg );","title":"ContinuationIndentWidth"},{"location":"ContinuationIndentWidth/#continuationindentwidth-unsigned","text":"Info clang-format 3.7 \u8fde\u7eed\u884c\u7f29\u8fdb\u5bbd\u5ea6\u3002 ContinuationIndentWidth : 2 int i = // VeryVeryVeryVeryVeryLongComment longFunction ( // Again a long comment arg );","title":"ContinuationIndentWidth (Unsigned)"},{"location":"Cpp11BracedListStyle/","text":"Cpp11BracedListStyle ( Boolean ) \u00b6 Info clang-format 3.4 \u5982\u679c\u4e3a true \uff0c\u5c06\u5e26\u5927\u62ec\u53f7\u7684\u5217\u8868\u683c\u5f0f\u5316\u4e3a\u6700\u9002\u5408 C++11 \u5e26\u5927\u62ec\u53f7\u7684\u5217\u8868\u3002 \u91cd\u8981\u533a\u522b\uff1a \u62ec\u53f7\u5185\u6ca1\u6709\u7a7a\u683c\u3002 \u5728\u53f3\u62ec\u53f7\u4e4b\u524d\u4e0d\u80fd\u6362\u884c\u3002 \u4f7f\u7528\u5ef6\u7eed\u7f29\u8fdb\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5757\u7f29\u8fdb\u3002 \u57fa\u672c\u4e0a\uff0c\u5e26\u5927\u62ec\u53f7\u7684 C++11 \u5217\u8868\u7684\u683c\u5f0f\u4e0e\u51fd\u6570\u8c03\u7528\u5728\u5176\u4f4d\u7f6e\u4e0a\u7684\u683c\u5f0f\u5b8c\u5168\u76f8\u540c\u3002\u5982\u679c\u5e26\u62ec\u53f7\u7684\u5217\u8868\u8ddf\u5728\u4e00\u4e2a\u540d\u79f0\u540e\u9762(\u4f8b\u5982\uff0c\u7c7b\u578b\u540d\u6216\u53d8\u91cf\u540d)\uff0c clang-format \u7684\u683c\u5f0f\u5c31\u597d\u50cf {} \u662f\u5e26\u6709\u8be5\u540d\u79f0\u7684\u51fd\u6570\u8c03\u7528\u7684\u5706\u62ec\u53f7\u4e00\u6837\u3002\u5982\u679c\u6ca1\u6709\u540d\u79f0\uff0c\u5219\u5047\u5b9a\u540d\u79f0\u957f\u5ea6\u4e3a\u96f6\u3002 true false vector < int > x { 1 , 2 , 3 , 4 }; vector < T > x {{}, {}, {}, {}}; f ( MyMap [{ composite , key }]); new int [ 3 ]{ 1 , 2 , 3 }; vector < int > x { 1 , 2 , 3 , 4 }; vector < T > x { {}, {}, {}, {} }; f ( MyMap [{ composite , key }]); new int [ 3 ]{ 1 , 2 , 3 };","title":"Cpp11BracedListStyle"},{"location":"Cpp11BracedListStyle/#cpp11bracedliststyle-boolean","text":"Info clang-format 3.4 \u5982\u679c\u4e3a true \uff0c\u5c06\u5e26\u5927\u62ec\u53f7\u7684\u5217\u8868\u683c\u5f0f\u5316\u4e3a\u6700\u9002\u5408 C++11 \u5e26\u5927\u62ec\u53f7\u7684\u5217\u8868\u3002 \u91cd\u8981\u533a\u522b\uff1a \u62ec\u53f7\u5185\u6ca1\u6709\u7a7a\u683c\u3002 \u5728\u53f3\u62ec\u53f7\u4e4b\u524d\u4e0d\u80fd\u6362\u884c\u3002 \u4f7f\u7528\u5ef6\u7eed\u7f29\u8fdb\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5757\u7f29\u8fdb\u3002 \u57fa\u672c\u4e0a\uff0c\u5e26\u5927\u62ec\u53f7\u7684 C++11 \u5217\u8868\u7684\u683c\u5f0f\u4e0e\u51fd\u6570\u8c03\u7528\u5728\u5176\u4f4d\u7f6e\u4e0a\u7684\u683c\u5f0f\u5b8c\u5168\u76f8\u540c\u3002\u5982\u679c\u5e26\u62ec\u53f7\u7684\u5217\u8868\u8ddf\u5728\u4e00\u4e2a\u540d\u79f0\u540e\u9762(\u4f8b\u5982\uff0c\u7c7b\u578b\u540d\u6216\u53d8\u91cf\u540d)\uff0c clang-format \u7684\u683c\u5f0f\u5c31\u597d\u50cf {} \u662f\u5e26\u6709\u8be5\u540d\u79f0\u7684\u51fd\u6570\u8c03\u7528\u7684\u5706\u62ec\u53f7\u4e00\u6837\u3002\u5982\u679c\u6ca1\u6709\u540d\u79f0\uff0c\u5219\u5047\u5b9a\u540d\u79f0\u957f\u5ea6\u4e3a\u96f6\u3002 true false vector < int > x { 1 , 2 , 3 , 4 }; vector < T > x {{}, {}, {}, {}}; f ( MyMap [{ composite , key }]); new int [ 3 ]{ 1 , 2 , 3 }; vector < int > x { 1 , 2 , 3 , 4 }; vector < T > x { {}, {}, {}, {} }; f ( MyMap [{ composite , key }]); new int [ 3 ]{ 1 , 2 , 3 };","title":"Cpp11BracedListStyle (Boolean)"},{"location":"DeriveLineEnding/","text":"DeriveLineEnding ( Boolean ) \u00b6 Info clang-format 11 \u5206\u6790\u683c\u5f0f\u5316\u6587\u4ef6\u4e2d\u6700\u5e38\u7528\u7684\u884c\u7ed3\u675f\u7b26( \\r\\n \u6216 \\n )\u3002\u53ea\u6709\u5f53\u6ca1\u6709\u6d3e\u751f\u9879\u65f6\uff0c UseCRLF \u624d\u7528\u4f5c\u540e\u5907\u3002","title":"DeriveLineEnding"},{"location":"DeriveLineEnding/#derivelineending-boolean","text":"Info clang-format 11 \u5206\u6790\u683c\u5f0f\u5316\u6587\u4ef6\u4e2d\u6700\u5e38\u7528\u7684\u884c\u7ed3\u675f\u7b26( \\r\\n \u6216 \\n )\u3002\u53ea\u6709\u5f53\u6ca1\u6709\u6d3e\u751f\u9879\u65f6\uff0c UseCRLF \u624d\u7528\u4f5c\u540e\u5907\u3002","title":"DeriveLineEnding (Boolean)"},{"location":"DerivePointerAlignment/","text":"DerivePointerAlignment ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5206\u6790\u683c\u5f0f\u5316\u6587\u4ef6\uff0c\u4ee5\u786e\u5b9a\u6700\u5e38\u89c1\u7684 & \u548c * \u5bf9\u9f50\u65b9\u5f0f\u3002\u6307\u9488\u548c\u5f15\u7528\u5bf9\u9f50\u6837\u5f0f\u5c06\u6839\u636e\u6587\u4ef6\u4e2d\u627e\u5230\u7684\u9996\u9009\u9879\u8fdb\u884c\u66f4\u65b0\u3002\u7136\u540e\uff0c PointerAlignment \u4ec5\u7528\u4f5c\u540e\u5907\u3002","title":"DerivePointerAlignment"},{"location":"DerivePointerAlignment/#derivepointeralignment-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5206\u6790\u683c\u5f0f\u5316\u6587\u4ef6\uff0c\u4ee5\u786e\u5b9a\u6700\u5e38\u89c1\u7684 & \u548c * \u5bf9\u9f50\u65b9\u5f0f\u3002\u6307\u9488\u548c\u5f15\u7528\u5bf9\u9f50\u6837\u5f0f\u5c06\u6839\u636e\u6587\u4ef6\u4e2d\u627e\u5230\u7684\u9996\u9009\u9879\u8fdb\u884c\u66f4\u65b0\u3002\u7136\u540e\uff0c PointerAlignment \u4ec5\u7528\u4f5c\u540e\u5907\u3002","title":"DerivePointerAlignment (Boolean)"},{"location":"DisableFormat/","text":"DisableFormat ( Boolean ) \u00b6 Info clang-format 3.7 \u5b8c\u5168\u7981\u7528\u683c\u5f0f\u3002","title":"DisableFormat"},{"location":"DisableFormat/#disableformat-boolean","text":"Info clang-format 3.7 \u5b8c\u5168\u7981\u7528\u683c\u5f0f\u3002","title":"DisableFormat (Boolean)"},{"location":"DisableOnCode/","text":"Clang-format \u8fd8\u53ef\u4ee5\u7406\u89e3\u5728\u5e26\u5206\u9694\u7b26\u7684\u8303\u56f4\u5185\u5207\u6362\u683c\u5f0f\u7684\u7279\u6b8a\u6ce8\u91ca\u3002\u6ce8\u91ca // clang-format off \u6216 /* clang-format off */ \u5230\u6ce8\u91ca // clang-format on \u6216 /* clang-format on */ \u4e4b\u95f4\u7684\u4ee3\u7801\u4e0d\u4f1a\u88ab\u683c\u5f0f\u5316\u3002\u6ce8\u91ca\u672c\u8eab\u5c06\u88ab\u6b63\u5e38\u683c\u5f0f\u5316(\u5bf9\u9f50)\u3002 int formatted_code ; // clang-format off void unformatted_code ; // clang-format on void formatted_code_again ;","title":"\u7981\u7528\u683c\u5f0f"},{"location":"EmptyLineAfterAccessModifier/","text":"EmptyLineAfterAccessModifier ( EmptyLineAfterAccessModifierStyle ) \u00b6 Info clang-format 14 \u5b9a\u4e49\u4f55\u65f6\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u540e\u653e\u7f6e\u7a7a\u884c\u3002 EmptyLineBeforeAccessModifier \u914d\u7f6e\u5904\u7406\u4e24\u4e2a\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u95f4\u7684\u7a7a\u884c\u6570\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Leave Always ELAAMS_Never : \u5220\u9664\u8bbf\u95ee\u4fee\u9970\u7b26\u540e\u7684\u6240\u6709\u7a7a\u884c\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : }; ELAAMS_Leave : \u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u540e\u4fdd\u7559\u73b0\u6709\u7684\u7a7a\u884c\u3002\u5e94\u7528 MaxEmptyLinesToKeep \u3002 ELAAMS_Always : \u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u8bf7\u59cb\u7ec8\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u540e\u6dfb\u52a0\u7a7a\u884c\u3002 \u5e94\u7528 MaxEmptyLinesToKeep \u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : };","title":"EmptyLineAfterAccessModifier"},{"location":"EmptyLineAfterAccessModifier/#emptylineafteraccessmodifier-emptylineafteraccessmodifierstyle","text":"Info clang-format 14 \u5b9a\u4e49\u4f55\u65f6\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u540e\u653e\u7f6e\u7a7a\u884c\u3002 EmptyLineBeforeAccessModifier \u914d\u7f6e\u5904\u7406\u4e24\u4e2a\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u95f4\u7684\u7a7a\u884c\u6570\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Leave Always ELAAMS_Never : \u5220\u9664\u8bbf\u95ee\u4fee\u9970\u7b26\u540e\u7684\u6240\u6709\u7a7a\u884c\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : }; ELAAMS_Leave : \u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u540e\u4fdd\u7559\u73b0\u6709\u7684\u7a7a\u884c\u3002\u5e94\u7528 MaxEmptyLinesToKeep \u3002 ELAAMS_Always : \u5982\u679c\u6ca1\u6709\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u8bf7\u59cb\u7ec8\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u540e\u6dfb\u52a0\u7a7a\u884c\u3002 \u5e94\u7528 MaxEmptyLinesToKeep \u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : };","title":"EmptyLineAfterAccessModifier (EmptyLineAfterAccessModifierStyle)"},{"location":"EmptyLineBeforeAccessModifier/","text":"EmptyLineBeforeAccessModifier ( EmptyLineBeforeAccessModifierStyle ) \u00b6 Info clang-format 13 \u5b9a\u4e49\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u653e\u7f6e\u7a7a\u884c\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Leave LogicalBlock Always ELBAMS_Never : \u5220\u9664\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u7684\u6240\u6709\u7a7a\u884c\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : }; ELBAMS_Leave : \u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u4fdd\u6301\u73b0\u6709\u7684\u7a7a\u884c\u3002 ELBAMS_LogicalBlock : \u53ea\u6709\u5f53\u8bbf\u95ee\u4fee\u9970\u7b26\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u903b\u8f91\u5757\u65f6\u624d\u6dfb\u52a0\u7a7a\u884c\u3002\u903b\u8f91\u5757\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u5b57\u6bb5\u6216\u51fd\u6570\u7ec4\u6210\u7684\u4e00\u7ec4\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : }; ELBAMS_Always : \u603b\u662f\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u6dfb\u52a0\u7a7a\u884c\uff0c\u9664\u975e\u8bbf\u95ee\u4fee\u9970\u7b26\u4f4d\u4e8e\u7ed3\u6784\u6216\u7c7b\u5b9a\u4e49\u7684\u5f00\u5934\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : };","title":"EmptyLineBeforeAccessModifier"},{"location":"EmptyLineBeforeAccessModifier/#emptylinebeforeaccessmodifier-emptylinebeforeaccessmodifierstyle","text":"Info clang-format 13 \u5b9a\u4e49\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u653e\u7f6e\u7a7a\u884c\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Leave LogicalBlock Always ELBAMS_Never : \u5220\u9664\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u7684\u6240\u6709\u7a7a\u884c\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : }; ELBAMS_Leave : \u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u4fdd\u6301\u73b0\u6709\u7684\u7a7a\u884c\u3002 ELBAMS_LogicalBlock : \u53ea\u6709\u5f53\u8bbf\u95ee\u4fee\u9970\u7b26\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u903b\u8f91\u5757\u65f6\u624d\u6dfb\u52a0\u7a7a\u884c\u3002\u903b\u8f91\u5757\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6210\u5458\u5b57\u6bb5\u6216\u51fd\u6570\u7ec4\u6210\u7684\u4e00\u7ec4\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : }; ELBAMS_Always : \u603b\u662f\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u4e4b\u524d\u6dfb\u52a0\u7a7a\u884c\uff0c\u9664\u975e\u8bbf\u95ee\u4fee\u9970\u7b26\u4f4d\u4e8e\u7ed3\u6784\u6216\u7c7b\u5b9a\u4e49\u7684\u5f00\u5934\u3002 struct foo { private : int i ; protected : int j ; /* comment */ public : foo () {} private : protected : };","title":"EmptyLineBeforeAccessModifier (EmptyLineBeforeAccessModifierStyle)"},{"location":"ExperimentalAutoDetectBinPacking/","text":"ExperimentalAutoDetectBinPacking ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true , clang-format \u5c06\u68c0\u6d4b\u51fd\u6570\u8c03\u7528\u548c\u5b9a\u4e49\u662f\u5426\u6bcf\u884c\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u8fdb\u884c\u683c\u5f0f\u5316\u3002 \u6bcf\u4e2a\u8c03\u7528\u90fd\u53ef\u4ee5\u88ab\u5305\u542b\uff0c\u6bcf\u884c\u6216\u4e0d\u786e\u5b9a\u3002\u5982\u679c\u5b83\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4f8b\u5982\u5b8c\u5168\u5728\u4e00\u884c\u4e0a\uff0c\u4f46\u9700\u8981\u505a\u51fa\u51b3\u5b9a\uff0c clang-format \u5206\u6790\u8f93\u5165\u6587\u4ef6\u4e2d\u662f\u5426\u6709\u5176\u4ed6\u5305\u542b\u60c5\u51b5\uff0c\u5e76\u76f8\u5e94\u5730\u91c7\u53d6\u884c\u52a8\u3002 Note \u8fd9\u662f\u4e00\u4e2a\u5b9e\u9a8c\u6027\u7684\u6807\u5fd7\uff0c\u5b83\u53ef\u80fd\u4f1a\u6d88\u5931\u6216\u88ab\u91cd\u547d\u540d\u3002\u4e0d\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528\u5b83\uff0c\u7b49\u7b49\u3002\u4f7f\u7528\u65f6\u81ea\u8d1f\u98ce\u9669\u3002","title":"ExperimentalAutoDetectBinPacking"},{"location":"ExperimentalAutoDetectBinPacking/#experimentalautodetectbinpacking-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true , clang-format \u5c06\u68c0\u6d4b\u51fd\u6570\u8c03\u7528\u548c\u5b9a\u4e49\u662f\u5426\u6bcf\u884c\u4f7f\u7528\u4e00\u4e2a\u53c2\u6570\u8fdb\u884c\u683c\u5f0f\u5316\u3002 \u6bcf\u4e2a\u8c03\u7528\u90fd\u53ef\u4ee5\u88ab\u5305\u542b\uff0c\u6bcf\u884c\u6216\u4e0d\u786e\u5b9a\u3002\u5982\u679c\u5b83\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4f8b\u5982\u5b8c\u5168\u5728\u4e00\u884c\u4e0a\uff0c\u4f46\u9700\u8981\u505a\u51fa\u51b3\u5b9a\uff0c clang-format \u5206\u6790\u8f93\u5165\u6587\u4ef6\u4e2d\u662f\u5426\u6709\u5176\u4ed6\u5305\u542b\u60c5\u51b5\uff0c\u5e76\u76f8\u5e94\u5730\u91c7\u53d6\u884c\u52a8\u3002 Note \u8fd9\u662f\u4e00\u4e2a\u5b9e\u9a8c\u6027\u7684\u6807\u5fd7\uff0c\u5b83\u53ef\u80fd\u4f1a\u6d88\u5931\u6216\u88ab\u91cd\u547d\u540d\u3002\u4e0d\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4f7f\u7528\u5b83\uff0c\u7b49\u7b49\u3002\u4f7f\u7528\u65f6\u81ea\u8d1f\u98ce\u9669\u3002","title":"ExperimentalAutoDetectBinPacking (Boolean)"},{"location":"FixNamespaceComments/","text":"FixNamespaceComments ( Boolean ) \u00b6 Info clang-format 5 \u5982\u679c\u4e3a true , clang-format \u5c06\u4e3a\u77ed\u540d\u79f0\u7a7a\u95f4\u6dfb\u52a0\u7f3a\u5931\u7684\u540d\u79f0\u7a7a\u95f4\u7ed3\u675f\u6ce8\u91ca\uff0c\u5e76\u4fee\u590d\u65e0\u6548\u7684\u73b0\u6709\u540d\u79f0\u7a7a\u95f4\u3002\u77ed\u7684\u7531 ShortNamespaceLines \u63a7\u5236\u3002 true false namespace a { foo (); bar (); } // namespace a namespace a { foo (); bar (); }","title":"FixNamespaceComments"},{"location":"FixNamespaceComments/#fixnamespacecomments-boolean","text":"Info clang-format 5 \u5982\u679c\u4e3a true , clang-format \u5c06\u4e3a\u77ed\u540d\u79f0\u7a7a\u95f4\u6dfb\u52a0\u7f3a\u5931\u7684\u540d\u79f0\u7a7a\u95f4\u7ed3\u675f\u6ce8\u91ca\uff0c\u5e76\u4fee\u590d\u65e0\u6548\u7684\u73b0\u6709\u540d\u79f0\u7a7a\u95f4\u3002\u77ed\u7684\u7531 ShortNamespaceLines \u63a7\u5236\u3002 true false namespace a { foo (); bar (); } // namespace a namespace a { foo (); bar (); }","title":"FixNamespaceComments (Boolean)"},{"location":"ForEachMacros/","text":"ForEachMacros ( List of Strings ) \u00b6 Info clang-format 3.7 \u5b8f\u7684\u77e2\u91cf\uff0c\u5e94\u8be5\u89e3\u91ca\u4e3a foreach \u5faa\u73af\uff0c\u800c\u4e0d\u662f\u51fd\u6570\u8c03\u7528\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a FOREACH ( < variable - declaration > , ...) < loop - body > \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a ForEachMacros : [ 'RANGES_FOR' , 'FOREACH' ] \u4f8b\u5982: BOOST_FOREACH","title":"ForEachMacros"},{"location":"ForEachMacros/#foreachmacros-list-of-strings","text":"Info clang-format 3.7 \u5b8f\u7684\u77e2\u91cf\uff0c\u5e94\u8be5\u89e3\u91ca\u4e3a foreach \u5faa\u73af\uff0c\u800c\u4e0d\u662f\u51fd\u6570\u8c03\u7528\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a FOREACH ( < variable - declaration > , ...) < loop - body > \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a ForEachMacros : [ 'RANGES_FOR' , 'FOREACH' ] \u4f8b\u5982: BOOST_FOREACH","title":"ForEachMacros (List of Strings)"},{"location":"IfMacros/","text":"IfMacros ( List of Strings ) \u00b6 Info clang-format 14 \u5e94\u89e3\u91ca\u4e3a\u6761\u4ef6\u800c\u4e0d\u662f\u51fd\u6570\u8c03\u7528\u7684\u5b8f\u5411\u91cf\u3002 \u8fd9\u4e9b\u671f\u671b\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a IF (...) < conditional - body > else IF (...) < conditional - body > \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a IfMacros: ['IF'] \u4f8b\u5982\uff1a KJ_IF_MAYBE","title":"IfMacros"},{"location":"IfMacros/#ifmacros-list-of-strings","text":"Info clang-format 14 \u5e94\u89e3\u91ca\u4e3a\u6761\u4ef6\u800c\u4e0d\u662f\u51fd\u6570\u8c03\u7528\u7684\u5b8f\u5411\u91cf\u3002 \u8fd9\u4e9b\u671f\u671b\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a IF (...) < conditional - body > else IF (...) < conditional - body > \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a IfMacros: ['IF'] \u4f8b\u5982\uff1a KJ_IF_MAYBE","title":"IfMacros (List of Strings)"},{"location":"IncludeBlocks/","text":"IncludeBlocks ( IncludeBlocksStyle ) \u00b6 Info clang-format 7 \u6839\u636e\u8fd9\u4e2a\u503c\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a #include \u5757\u6309\u7c7b\u522b\u6392\u5e8f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Preserve Merge Regroup IBS_Preserve : \u5206\u522b\u5bf9\u6bcf\u4e2a #include \u5757\u8fdb\u884c\u6392\u5e8f\u3002 #include \"b.h\" into #include \"b.h\" #include <lib/main.h> #include \"a.h\" #include \"a.h\" #include <lib/main.h> IBS_Merge : \u5c06\u591a\u4e2a #include \u5757\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5e76\u6309\u4e00\u4e2a\u6392\u5e8f\u3002 #include \"b.h\" into #include \"a.h\" #include \"b.h\" #include <lib/main.h> #include <lib/main.h> #include \"a.h\" IBS_Regroup : \u5c06\u591a\u4e2a #include \u5757\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5e76\u6309\u4e00\u4e2a\u6392\u5e8f\u3002\u7136\u540e\u6839\u636e\u7c7b\u522b\u4f18\u5148\u7ea7\u5206\u7ec4\u3002\u53c2\u8003 IncludeCategories \u3002 #include \"b.h\" into #include \"a.h\" #include \"b.h\" #include <lib/main.h> #include \"a.h\" #include <lib/main.h>","title":"IncludeBlocks"},{"location":"IncludeBlocks/#includeblocks-includeblocksstyle","text":"Info clang-format 7 \u6839\u636e\u8fd9\u4e2a\u503c\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a #include \u5757\u6309\u7c7b\u522b\u6392\u5e8f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Preserve Merge Regroup IBS_Preserve : \u5206\u522b\u5bf9\u6bcf\u4e2a #include \u5757\u8fdb\u884c\u6392\u5e8f\u3002 #include \"b.h\" into #include \"b.h\" #include <lib/main.h> #include \"a.h\" #include \"a.h\" #include <lib/main.h> IBS_Merge : \u5c06\u591a\u4e2a #include \u5757\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5e76\u6309\u4e00\u4e2a\u6392\u5e8f\u3002 #include \"b.h\" into #include \"a.h\" #include \"b.h\" #include <lib/main.h> #include <lib/main.h> #include \"a.h\" IBS_Regroup : \u5c06\u591a\u4e2a #include \u5757\u5408\u5e76\u5728\u4e00\u8d77\uff0c\u5e76\u6309\u4e00\u4e2a\u6392\u5e8f\u3002\u7136\u540e\u6839\u636e\u7c7b\u522b\u4f18\u5148\u7ea7\u5206\u7ec4\u3002\u53c2\u8003 IncludeCategories \u3002 #include \"b.h\" into #include \"a.h\" #include \"b.h\" #include <lib/main.h> #include \"a.h\" #include <lib/main.h>","title":"IncludeBlocks (IncludeBlocksStyle)"},{"location":"IncludeCategories/","text":"IncludeCategories ( List of IncludeCategories ) \u00b6 Info clang-format 7 \u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u7528\u4e8e\u6392\u5e8f #include \u7684\u4e0d\u540c #include \u7c7b\u522b\u3002 \u652f\u6301 POSIX \u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u8fd9\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u6309\u987a\u5e8f\u5339\u914d\u5305\u542b\u7684\u6587\u4ef6\u540d(\u5305\u62ec <> \u6216 \"\" )\u3002\u5206\u914d\u5c5e\u4e8e\u7b2c\u4e00\u4e2a\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u503c\uff0c #include \u9996\u5148\u6839\u636e\u7c7b\u522b\u7f16\u53f7\u9012\u589e\u6392\u5e8f\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u7c7b\u522b\u5185\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u3002 \u5982\u679c\u6240\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4e0d\u5339\u914d\uff0c\u5219 INT_MAX \u88ab\u5206\u914d\u4e3a\u7c7b\u522b\u3002\u6e90\u6587\u4ef6\u7684\u4e3b\u6807\u9898\u81ea\u52a8\u83b7\u5f97\u7c7b\u522b 0 \u3002\u56e0\u6b64\u5b83\u901a\u5e38\u4fdd\u5b58\u5728 #include (https://llvm.org/docs/CodingStandards.html#include-style) \u7684\u5f00\u5934\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u6709\u67d0\u4e9b\u603b\u662f\u9700\u8981\u4f18\u5148\u7684\u5934\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5206\u914d\u8d1f\u4f18\u5148\u7ea7\u3002 \u5f53 IncludeBlocks = IBS_Regroup \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53ef\u9009\u5b57\u6bb5 SortPriority \u6765\u5b9a\u4e49 #include \u5e94\u8be5\u88ab\u6392\u5e8f\u7684\u4f18\u5148\u7ea7\u3002 Priority \u7684\u503c\u5b9a\u4e49\u4e86 #include \u5757\u7684\u987a\u5e8f\uff0c\u4e5f\u5141\u8bb8\u5bf9\u4e0d\u540c\u4f18\u5148\u7ea7\u7684 #include \u5757\u8fdb\u884c\u5206\u7ec4\u3002\u5982\u679c\u6ca1\u6709\u5206\u914d SortPriority \uff0c\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a Priority \u7684\u9ed8\u8ba4\u503c\u3002 \u6bcf\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u7528\u5927\u5c0f\u5199\u654f\u611f\u5b57\u6bb5\u6807\u8bb0\u4e3a\u533a\u5206\u5927\u5c0f\u5199\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4e0d\u662f\u3002 \u8981\u5728 .clang-format \u6587\u4ef6\u4e2d\u914d\u7f6e\u5b83\uff0c\u8bf7\u4f7f\u7528\uff1a IncludeCategories : - Regex : '^\"(llvm|llvm-c|clang|clang-c)/' Priority : 2 SortPriority : 2 CaseSensitive : true - Regex : '^(<|\"(gtest|gmock|isl|json)/)' Priority : 3 - Regex : '<[[:alnum:].]+>' Priority : 4 - Regex : '.*' Priority : 1 SortPriority : 0","title":"IncludeCategories"},{"location":"IncludeCategories/#includecategories-list-of-includecategories","text":"Info clang-format 7 \u6b63\u5219\u8868\u8fbe\u5f0f\u8868\u793a\u7528\u4e8e\u6392\u5e8f #include \u7684\u4e0d\u540c #include \u7c7b\u522b\u3002 \u652f\u6301 POSIX \u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u8fd9\u4e9b\u6b63\u5219\u8868\u8fbe\u5f0f\u6309\u987a\u5e8f\u5339\u914d\u5305\u542b\u7684\u6587\u4ef6\u540d(\u5305\u62ec <> \u6216 \"\" )\u3002\u5206\u914d\u5c5e\u4e8e\u7b2c\u4e00\u4e2a\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u503c\uff0c #include \u9996\u5148\u6839\u636e\u7c7b\u522b\u7f16\u53f7\u9012\u589e\u6392\u5e8f\uff0c\u7136\u540e\u5728\u6bcf\u4e2a\u7c7b\u522b\u5185\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\u3002 \u5982\u679c\u6240\u6709\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u4e0d\u5339\u914d\uff0c\u5219 INT_MAX \u88ab\u5206\u914d\u4e3a\u7c7b\u522b\u3002\u6e90\u6587\u4ef6\u7684\u4e3b\u6807\u9898\u81ea\u52a8\u83b7\u5f97\u7c7b\u522b 0 \u3002\u56e0\u6b64\u5b83\u901a\u5e38\u4fdd\u5b58\u5728 #include (https://llvm.org/docs/CodingStandards.html#include-style) \u7684\u5f00\u5934\u3002\u7136\u800c\uff0c\u5982\u679c\u4f60\u6709\u67d0\u4e9b\u603b\u662f\u9700\u8981\u4f18\u5148\u7684\u5934\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5206\u914d\u8d1f\u4f18\u5148\u7ea7\u3002 \u5f53 IncludeBlocks = IBS_Regroup \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u4e2a\u53ef\u9009\u5b57\u6bb5 SortPriority \u6765\u5b9a\u4e49 #include \u5e94\u8be5\u88ab\u6392\u5e8f\u7684\u4f18\u5148\u7ea7\u3002 Priority \u7684\u503c\u5b9a\u4e49\u4e86 #include \u5757\u7684\u987a\u5e8f\uff0c\u4e5f\u5141\u8bb8\u5bf9\u4e0d\u540c\u4f18\u5148\u7ea7\u7684 #include \u5757\u8fdb\u884c\u5206\u7ec4\u3002\u5982\u679c\u6ca1\u6709\u5206\u914d SortPriority \uff0c\u5219\u5c06\u5176\u8bbe\u7f6e\u4e3a Priority \u7684\u9ed8\u8ba4\u503c\u3002 \u6bcf\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u90fd\u53ef\u4ee5\u7528\u5927\u5c0f\u5199\u654f\u611f\u5b57\u6bb5\u6807\u8bb0\u4e3a\u533a\u5206\u5927\u5c0f\u5199\uff0c\u4f46\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4e0d\u662f\u3002 \u8981\u5728 .clang-format \u6587\u4ef6\u4e2d\u914d\u7f6e\u5b83\uff0c\u8bf7\u4f7f\u7528\uff1a IncludeCategories : - Regex : '^\"(llvm|llvm-c|clang|clang-c)/' Priority : 2 SortPriority : 2 CaseSensitive : true - Regex : '^(<|\"(gtest|gmock|isl|json)/)' Priority : 3 - Regex : '<[[:alnum:].]+>' Priority : 4 - Regex : '.*' Priority : 1 SortPriority : 0","title":"IncludeCategories (List of IncludeCategories)"},{"location":"IncludeIsMainRegex/","text":"IncludeIsMainRegex ( String ) \u00b6 Info clang-format 7 \u6307\u5b9a\u5728 file-to-main-include \u6620\u5c04\u4e2d\u5141\u8bb8\u7684\u540e\u7f00\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5f53\u731c\u6d4b #include \u662f\u5426\u662f main include \u65f6(\u4e3a\u7c7b\u522b 0 \u8d4b\u503c\uff0c\u89c1\u4e0a\u9762)\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5141\u8bb8\u540e\u7f00\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5230\u6807\u9898\u5e72\u3002\u5b8c\u6210\u90e8\u5206\u5339\u914d\uff0c\u56e0\u6b64: \"\" \u8868\u793a \u201c\u4efb\u610f\u540e\u7f00\u201d \"$\" \u8868\u793a \u201c\u6ca1\u6709\u540e\u7f00\u201d \u4f8b\u5982\uff0c\u5982\u679c\u914d\u7f6e\u4e3a (_test)?$ \uff0c\u5219\u5934\u6587\u4ef6 a.h \u5c06\u88ab\u89c6\u4e3a a.cc \u548c a_test.cc \u4e2d\u7684 main \u3002","title":"IncludeIsMainRegex"},{"location":"IncludeIsMainRegex/#includeismainregex-string","text":"Info clang-format 7 \u6307\u5b9a\u5728 file-to-main-include \u6620\u5c04\u4e2d\u5141\u8bb8\u7684\u540e\u7f00\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u5f53\u731c\u6d4b #include \u662f\u5426\u662f main include \u65f6(\u4e3a\u7c7b\u522b 0 \u8d4b\u503c\uff0c\u89c1\u4e0a\u9762)\uff0c\u4f7f\u7528\u8fd9\u4e2a\u5141\u8bb8\u540e\u7f00\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5230\u6807\u9898\u5e72\u3002\u5b8c\u6210\u90e8\u5206\u5339\u914d\uff0c\u56e0\u6b64: \"\" \u8868\u793a \u201c\u4efb\u610f\u540e\u7f00\u201d \"$\" \u8868\u793a \u201c\u6ca1\u6709\u540e\u7f00\u201d \u4f8b\u5982\uff0c\u5982\u679c\u914d\u7f6e\u4e3a (_test)?$ \uff0c\u5219\u5934\u6587\u4ef6 a.h \u5c06\u88ab\u89c6\u4e3a a.cc \u548c a_test.cc \u4e2d\u7684 main \u3002","title":"IncludeIsMainRegex (String)"},{"location":"IncludeIsMainSourceRegex/","text":"IncludeIsMainSourceRegex ( String ) \u00b6 Info clang-format 7 \u4e3a\u5728 file-to-main-include \u6620\u5c04\u4e2d\u5141\u8bb8\u88ab\u89c6\u4e3a main \u7684\u683c\u5f0f\u5316\u6587\u4ef6\u6307\u5b9a\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u5f53\u6587\u4ef6\u4ee5: .c \uff0c .cc \uff0c .cpp \uff0c .c++ \uff0c .cxx \uff0c .m \u6216 .mm \u6269\u5c55\u540d\u7ed3\u675f\u65f6\uff0c clang-format \u624d\u4f1a\u5c06\u6587\u4ef6\u89c6\u4e3a main \u3002\u5bf9\u4e8e\u8fd9\u4e9b\u6587\u4ef6\uff0c\u4f1a\u731c\u6d4b main include(\u8981\u5206\u914d\u7c7b\u522b 0 \uff0c\u53c2\u89c1\u4e0a\u9762)\u3002\u8fd9\u4e2a\u914d\u7f6e\u9009\u9879\u5141\u8bb8\u9644\u52a0\u540e\u7f00\u548c\u6269\u5c55\u540d\u7684\u6587\u4ef6\u88ab\u89c6\u4e3a main \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u4e2a\u9009\u9879\u88ab\u914d\u7f6e\u4e3a (Impl\\.hpp)$ \uff0c\u90a3\u4e48\u4e00\u4e2a\u6587\u4ef6 ClassImpl.hpp \u88ab\u8ba4\u4e3a\u662f main (\u9664\u4e86 Class.c \u3001 Class.cc \u3001 Class.cpp \u7b49)\u548c main include file \u903b\u8f91\u5c06\u88ab\u6267\u884c(\u7a0d\u540e\u9636\u6bb5\u8fd8\u5c06\u4f7f\u7528 IncludeIsMainRegex \u8bbe\u7f6e)\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u6b64\u9009\u9879\uff0c ClassImpl.hpp \u4e0d\u4f1a\u628a\u4e3b\u8981\u7684\u5305\u542b\u6587\u4ef6\u653e\u5728\u4efb\u4f55\u5176\u4ed6\u5305\u542b\u6587\u4ef6\u4e4b\u524d\u3002","title":"IncludeIsMainSourceRegex"},{"location":"IncludeIsMainSourceRegex/#includeismainsourceregex-string","text":"Info clang-format 7 \u4e3a\u5728 file-to-main-include \u6620\u5c04\u4e2d\u5141\u8bb8\u88ab\u89c6\u4e3a main \u7684\u683c\u5f0f\u5316\u6587\u4ef6\u6307\u5b9a\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u5f53\u6587\u4ef6\u4ee5: .c \uff0c .cc \uff0c .cpp \uff0c .c++ \uff0c .cxx \uff0c .m \u6216 .mm \u6269\u5c55\u540d\u7ed3\u675f\u65f6\uff0c clang-format \u624d\u4f1a\u5c06\u6587\u4ef6\u89c6\u4e3a main \u3002\u5bf9\u4e8e\u8fd9\u4e9b\u6587\u4ef6\uff0c\u4f1a\u731c\u6d4b main include(\u8981\u5206\u914d\u7c7b\u522b 0 \uff0c\u53c2\u89c1\u4e0a\u9762)\u3002\u8fd9\u4e2a\u914d\u7f6e\u9009\u9879\u5141\u8bb8\u9644\u52a0\u540e\u7f00\u548c\u6269\u5c55\u540d\u7684\u6587\u4ef6\u88ab\u89c6\u4e3a main \u3002 \u4f8b\u5982\uff0c\u5982\u679c\u8fd9\u4e2a\u9009\u9879\u88ab\u914d\u7f6e\u4e3a (Impl\\.hpp)$ \uff0c\u90a3\u4e48\u4e00\u4e2a\u6587\u4ef6 ClassImpl.hpp \u88ab\u8ba4\u4e3a\u662f main (\u9664\u4e86 Class.c \u3001 Class.cc \u3001 Class.cpp \u7b49)\u548c main include file \u903b\u8f91\u5c06\u88ab\u6267\u884c(\u7a0d\u540e\u9636\u6bb5\u8fd8\u5c06\u4f7f\u7528 IncludeIsMainRegex \u8bbe\u7f6e)\u3002\u5982\u679c\u4e0d\u8bbe\u7f6e\u6b64\u9009\u9879\uff0c ClassImpl.hpp \u4e0d\u4f1a\u628a\u4e3b\u8981\u7684\u5305\u542b\u6587\u4ef6\u653e\u5728\u4efb\u4f55\u5176\u4ed6\u5305\u542b\u6587\u4ef6\u4e4b\u524d\u3002","title":"IncludeIsMainSourceRegex (String)"},{"location":"IndentAccessModifiers/","text":"IndentAccessModifiers ( Boolean ) \u00b6 Info clang-format 13 \u6307\u5b9a\u8bbf\u95ee\u4fee\u9970\u7b26\u662f\u5426\u5e94\u8be5\u6709\u81ea\u5df1\u7684\u7f29\u8fdb\u7ea7\u522b\u3002 \u5f53\u4e3a false \u65f6\uff0c\u8bbf\u95ee\u4fee\u9970\u7b26\u76f8\u5bf9\u4e8e\u8bb0\u5f55\u6210\u5458\u7f29\u8fdb(\u6216\u9000\u7f29)\uff0c\u8868\u793a AccessModifierOffset \u3002\u8bb0\u5f55\u6210\u5458\u7f29\u8fdb\u6bd4\u8bb0\u5f55\u4f4e\u4e00\u7ea7\u3002\u5f53\u4e3a true \u65f6\uff0c\u8bbf\u95ee\u4fee\u9970\u7b26\u5c06\u83b7\u5f97\u81ea\u5df1\u7684\u7f29\u8fdb\u7ea7\u522b\u3002\u56e0\u6b64\uff0c\u8bb0\u5f55\u6210\u5458\u603b\u662f\u6bd4\u8bb0\u5f55\u7f29\u8fdb 2 \u7ea7\uff0c\u800c\u4e0d\u7ba1\u662f\u5426\u5b58\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u3002\u5ffd\u7565 AccessModifierOffset \u7684\u503c\u3002 true fasle class C { class D { void bar (); protected : D (); }; public : C (); }; void foo () { return 1 ; } class C { class D { void bar (); protected : D (); }; public : C (); }; void foo () { return 1 ; }","title":"IndentAccessModifiers"},{"location":"IndentAccessModifiers/#indentaccessmodifiers-boolean","text":"Info clang-format 13 \u6307\u5b9a\u8bbf\u95ee\u4fee\u9970\u7b26\u662f\u5426\u5e94\u8be5\u6709\u81ea\u5df1\u7684\u7f29\u8fdb\u7ea7\u522b\u3002 \u5f53\u4e3a false \u65f6\uff0c\u8bbf\u95ee\u4fee\u9970\u7b26\u76f8\u5bf9\u4e8e\u8bb0\u5f55\u6210\u5458\u7f29\u8fdb(\u6216\u9000\u7f29)\uff0c\u8868\u793a AccessModifierOffset \u3002\u8bb0\u5f55\u6210\u5458\u7f29\u8fdb\u6bd4\u8bb0\u5f55\u4f4e\u4e00\u7ea7\u3002\u5f53\u4e3a true \u65f6\uff0c\u8bbf\u95ee\u4fee\u9970\u7b26\u5c06\u83b7\u5f97\u81ea\u5df1\u7684\u7f29\u8fdb\u7ea7\u522b\u3002\u56e0\u6b64\uff0c\u8bb0\u5f55\u6210\u5458\u603b\u662f\u6bd4\u8bb0\u5f55\u7f29\u8fdb 2 \u7ea7\uff0c\u800c\u4e0d\u7ba1\u662f\u5426\u5b58\u5728\u8bbf\u95ee\u4fee\u9970\u7b26\u3002\u5ffd\u7565 AccessModifierOffset \u7684\u503c\u3002 true fasle class C { class D { void bar (); protected : D (); }; public : C (); }; void foo () { return 1 ; } class C { class D { void bar (); protected : D (); }; public : C (); }; void foo () { return 1 ; }","title":"IndentAccessModifiers (Boolean)"},{"location":"IndentCaseBlocks/","text":"IndentCaseBlocks ( Boolean ) \u00b6 Info clang-format 11 \u7f29\u8fdb case \u6807\u7b7e\u963b\u585e case \u6807\u7b7e\u7684\u4e00\u7ea7\u3002 \u5f53\u4e3a false \u65f6\uff0c case \u6807\u7b7e\u540e\u9762\u7684\u5757\u4f7f\u7528\u4e0e case \u6807\u7b7e\u76f8\u540c\u7684\u7f29\u8fdb\u7ea7\u522b\uff0c\u5c06 case \u6807\u7b7e\u89c6\u4e3aif\u8bed\u53e5\u3002\u5f53\u4e3a true \u65f6\uff0c\u8be5\u5757\u4f5c\u4e3a\u8303\u56f4\u5757\u7f29\u8fdb\u3002 true false switch ( fool ) { case 1 : { bar (); } break ; default : { plop (); } } switch ( fool ) { case 1 : { bar (); } break ; default : { plop (); } }","title":"IndentCaseBlocks"},{"location":"IndentCaseBlocks/#indentcaseblocks-boolean","text":"Info clang-format 11 \u7f29\u8fdb case \u6807\u7b7e\u963b\u585e case \u6807\u7b7e\u7684\u4e00\u7ea7\u3002 \u5f53\u4e3a false \u65f6\uff0c case \u6807\u7b7e\u540e\u9762\u7684\u5757\u4f7f\u7528\u4e0e case \u6807\u7b7e\u76f8\u540c\u7684\u7f29\u8fdb\u7ea7\u522b\uff0c\u5c06 case \u6807\u7b7e\u89c6\u4e3aif\u8bed\u53e5\u3002\u5f53\u4e3a true \u65f6\uff0c\u8be5\u5757\u4f5c\u4e3a\u8303\u56f4\u5757\u7f29\u8fdb\u3002 true false switch ( fool ) { case 1 : { bar (); } break ; default : { plop (); } } switch ( fool ) { case 1 : { bar (); } break ; default : { plop (); } }","title":"IndentCaseBlocks (Boolean)"},{"location":"IndentCaseLabels/","text":"IndentCaseLabels ( Boolean ) \u00b6 Info clang-format 3.3 \u7f29\u8fdb case \u6807\u8bb0 switch \u8bed\u53e5\u7684\u4e00\u4e2a\u7ea7\u522b\u3002 \u5f53\u4e3a false \u65f6\uff0c\u4f7f\u7528\u4e0e switch \u8bed\u53e5\u76f8\u540c\u7684\u7f29\u8fdb\u7ea7\u522b\u3002 switch \u8bed\u53e5\u4f53\u603b\u662f\u6bd4 case \u6807\u7b7e\u7f29\u8fdb\u4e00\u7ea7( case \u6807\u7b7e\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u5757\u9664\u5916\uff0c\u5b83\u672c\u8eab\u4f1a\u7f29\u8fdb\u4ee3\u7801\u2014\u2014\u9664\u975e\u542f\u7528\u4e86 IndentCaseBlocks )\u3002 true false switch ( fool ) { case 1 : bar (); break ; default : plop (); } switch ( fool ) { case 1 : bar (); break ; default : plop (); }","title":"IndentCaseLabels"},{"location":"IndentCaseLabels/#indentcaselabels-boolean","text":"Info clang-format 3.3 \u7f29\u8fdb case \u6807\u8bb0 switch \u8bed\u53e5\u7684\u4e00\u4e2a\u7ea7\u522b\u3002 \u5f53\u4e3a false \u65f6\uff0c\u4f7f\u7528\u4e0e switch \u8bed\u53e5\u76f8\u540c\u7684\u7f29\u8fdb\u7ea7\u522b\u3002 switch \u8bed\u53e5\u4f53\u603b\u662f\u6bd4 case \u6807\u7b7e\u7f29\u8fdb\u4e00\u7ea7( case \u6807\u7b7e\u540e\u9762\u7684\u7b2c\u4e00\u4e2a\u5757\u9664\u5916\uff0c\u5b83\u672c\u8eab\u4f1a\u7f29\u8fdb\u4ee3\u7801\u2014\u2014\u9664\u975e\u542f\u7528\u4e86 IndentCaseBlocks )\u3002 true false switch ( fool ) { case 1 : bar (); break ; default : plop (); } switch ( fool ) { case 1 : bar (); break ; default : plop (); }","title":"IndentCaseLabels (Boolean)"},{"location":"IndentExternBlock/","text":"IndentExternBlock ( IndentExternBlockStyle ) \u00b6 Info clang-format 12 IndentExternBlockStyle \u662f extern \u5757\u7684\u7f29\u8fdb\u7c7b\u578b\u3002 \u53ef\u80fd\u7684\u503c\uff1a AfterExternBlock NoIndent Indent IEBS_AfterExternBlock : \u5411\u540e\u517c\u5bb9 AfterExternBlock \u7684\u7f29\u8fdb\u3002 IndentExternBlock : AfterExternBlock BraceWrapping.AfterExternBlock : true extern \"C\" { void foo (); } IndentExternBlock : AfterExternBlock BraceWrapping.AfterExternBlock : false extern \"C\" { void foo (); } IEBS_NoIndent : \u4e0d\u7f29\u8fdb\u5916\u90e8\u5757\u3002 extern \"C\" { void foo (); } IEBS_Indent : \u7f29\u8fdb\u5916\u90e8\u5757\u3002 extern \"C\" { void foo (); }","title":"IndentExternBlock"},{"location":"IndentExternBlock/#indentexternblock-indentexternblockstyle","text":"Info clang-format 12 IndentExternBlockStyle \u662f extern \u5757\u7684\u7f29\u8fdb\u7c7b\u578b\u3002 \u53ef\u80fd\u7684\u503c\uff1a AfterExternBlock NoIndent Indent IEBS_AfterExternBlock : \u5411\u540e\u517c\u5bb9 AfterExternBlock \u7684\u7f29\u8fdb\u3002 IndentExternBlock : AfterExternBlock BraceWrapping.AfterExternBlock : true extern \"C\" { void foo (); } IndentExternBlock : AfterExternBlock BraceWrapping.AfterExternBlock : false extern \"C\" { void foo (); } IEBS_NoIndent : \u4e0d\u7f29\u8fdb\u5916\u90e8\u5757\u3002 extern \"C\" { void foo (); } IEBS_Indent : \u7f29\u8fdb\u5916\u90e8\u5757\u3002 extern \"C\" { void foo (); }","title":"IndentExternBlock (IndentExternBlockStyle)"},{"location":"IndentGotoLabels/","text":"IndentGotoLabels ( Boolean ) \u00b6 Info clang-format 10 \u7f29\u8fdb goto \u6807\u7b7e\u3002 \u5f53\u4e3a false \u65f6\uff0c goto \u6807\u7b7e\u88ab\u63a8\u5230\u6700\u5de6\u4fa7\u3002 true false int f () { if ( foo ()) { label1 : bar (); } label2 : return 1 ; } int f () { if ( foo ()) { label1 : bar (); } label2 : return 1 ; }","title":"IndentGotoLabels"},{"location":"IndentGotoLabels/#indentgotolabels-boolean","text":"Info clang-format 10 \u7f29\u8fdb goto \u6807\u7b7e\u3002 \u5f53\u4e3a false \u65f6\uff0c goto \u6807\u7b7e\u88ab\u63a8\u5230\u6700\u5de6\u4fa7\u3002 true false int f () { if ( foo ()) { label1 : bar (); } label2 : return 1 ; } int f () { if ( foo ()) { label1 : bar (); } label2 : return 1 ; }","title":"IndentGotoLabels (Boolean)"},{"location":"IndentPPDirectives/","text":"IndentPPDirectives ( PPDirectiveIndentStyle ) \u00b6 Info clang-format 6 \u8981\u4f7f\u7528\u7684\u9884\u5904\u7406\u5668\u6307\u4ee4\u7f29\u8fdb\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None AfterHash BeforeHash PPDIS_None : \u4e0d\u7f29\u8fdb\u4efb\u4f55\u6307\u4ee4\u3002 #if FOO #if BAR #include <foo> #endif #endif PPDIS_AfterHash : \u7f29\u8fdb # \u540e\u7684\u6307\u4ee4\u3002 #if FOO # if BAR # include <foo> # endif #endif PPDIS_BeforeHash : \u5728 # \u524d\u7f29\u8fdb\u6307\u4ee4\u3002 #if FOO #if BAR #include <foo> #endif #endif","title":"IndentPPDirectives"},{"location":"IndentPPDirectives/#indentppdirectives-ppdirectiveindentstyle","text":"Info clang-format 6 \u8981\u4f7f\u7528\u7684\u9884\u5904\u7406\u5668\u6307\u4ee4\u7f29\u8fdb\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a None AfterHash BeforeHash PPDIS_None : \u4e0d\u7f29\u8fdb\u4efb\u4f55\u6307\u4ee4\u3002 #if FOO #if BAR #include <foo> #endif #endif PPDIS_AfterHash : \u7f29\u8fdb # \u540e\u7684\u6307\u4ee4\u3002 #if FOO # if BAR # include <foo> # endif #endif PPDIS_BeforeHash : \u5728 # \u524d\u7f29\u8fdb\u6307\u4ee4\u3002 #if FOO #if BAR #include <foo> #endif #endif","title":"IndentPPDirectives (PPDirectiveIndentStyle)"},{"location":"IndentRequires/","text":"IndentRequires ( Boolean ) \u00b6 Info clang-format 13 \u5728\u6a21\u677f\u4e2d\u7f29\u8fdb requires \u5b50\u53e5 true false template < typename It > requires Iterator < It > void sort ( It begin , It end ) { //.... } template < typename It > requires Iterator < It > void sort ( It begin , It end ) { //.... }","title":"IndentRequires"},{"location":"IndentRequires/#indentrequires-boolean","text":"Info clang-format 13 \u5728\u6a21\u677f\u4e2d\u7f29\u8fdb requires \u5b50\u53e5 true false template < typename It > requires Iterator < It > void sort ( It begin , It end ) { //.... } template < typename It > requires Iterator < It > void sort ( It begin , It end ) { //.... }","title":"IndentRequires (Boolean)"},{"location":"IndentWidth/","text":"IndentWidth ( Unsigned ) Info clang-format 3.7 \u7528\u4e8e\u7f29\u8fdb\u7684\u5217\u6570\u3002 IndentWidth : 3 void f () { someFunction (); if ( true , false ) { f (); } }","title":"IndentWidth"},{"location":"IndentWrappedFunctionNames/","text":"IndentWrappedFunctionNames ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u51fd\u6570\u5b9a\u4e49\u6216\u58f0\u660e\u5305\u88c5\u5728\u7c7b\u578b\u4e4b\u540e\uff0c\u5219\u7f29\u8fdb\u3002 true false LoooooooooooooooooooooooooooooooooooooooongReturnType LoooooooooooooooooooooooooooooooongFunctionDeclaration (); LoooooooooooooooooooooooooooooooooooooooongReturnType LoooooooooooooooooooooooooooooooongFunctionDeclaration ();","title":"IndentWrappedFunctionNames"},{"location":"IndentWrappedFunctionNames/#indentwrappedfunctionnames-boolean","text":"Info clang-format 3.7 \u5982\u679c\u51fd\u6570\u5b9a\u4e49\u6216\u58f0\u660e\u5305\u88c5\u5728\u7c7b\u578b\u4e4b\u540e\uff0c\u5219\u7f29\u8fdb\u3002 true false LoooooooooooooooooooooooooooooooooooooooongReturnType LoooooooooooooooooooooooooooooooongFunctionDeclaration (); LoooooooooooooooooooooooooooooooooooooooongReturnType LoooooooooooooooooooooooooooooooongFunctionDeclaration ();","title":"IndentWrappedFunctionNames (Boolean)"},{"location":"InsertTrailingCommas/","text":"InsertTrailingCommas ( TrailingCommaStyle ) \u00b6 Info clang-format 12 \u5982\u679c\u8bbe\u7f6e\u4e3a TCS_Wrapped \uff0c\u5219\u4f1a\u5728\u8de8\u591a\u884c\u6362\u884c\u7684\u5bb9\u5668\u6587\u672c(\u6570\u7ec4\u548c\u5bf9\u8c61)\u4e2d\u63d2\u5165\u672b\u5c3e\u7684\u9017\u53f7\u3002\u5b83\u76ee\u524d\u4ec5\u5bf9 JavaScript \u53ef\u7528\uff0c\u5e76\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528 TCS_None \u3002 InsertTrailingCommas \u4e0d\u80fd\u4e0e BinPackArguments \u4e00\u8d77\u4f7f\u7528\uff0c\u56e0\u4e3a\u63d2\u5165\u9017\u53f7\u4f1a\u7981\u7528\u5305\u88c5\u3002 const someArray = [ aaaaaaaaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaa , // ^ inserted ] \u53ef\u80fd\u7684\u503c\uff1a None Wrapped TCS_None : \u4e0d\u8981\u5728\u540e\u9762\u63d2\u5165\u9017\u53f7\u3002 TCS_Wrapped : \u5728\u5305\u88c5\u5728\u591a\u884c\u4e2d\u7684\u62ec\u53f7\u5b57\u9762\u503c\u4e2d\u63d2\u5165\u5c3e\u968f\u9017\u53f7\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5728\u6982\u5ff5\u4e0a\u4e0e\u88c5\u7bb1\u4e0d\u517c\u5bb9\uff0c\u56e0\u4e3a\u672b\u5c3e\u7684\u9017\u53f7\u88ab\u7528\u4f5c\u6307\u793a\u5bb9\u5668\u5e94\u8be5\u6bcf\u884c\u683c\u5f0f\u5316(\u5373\u4e0d\u5305\u542b)\u3002\u56e0\u6b64\uff0c\u63d2\u5165\u672b\u5c3e\u9017\u53f7\u4f1a\u62b5\u6d88\u62ec\u53f7\u7684\u4f5c\u7528\u3002","title":"InsertTrailingCommas"},{"location":"InsertTrailingCommas/#inserttrailingcommas-trailingcommastyle","text":"Info clang-format 12 \u5982\u679c\u8bbe\u7f6e\u4e3a TCS_Wrapped \uff0c\u5219\u4f1a\u5728\u8de8\u591a\u884c\u6362\u884c\u7684\u5bb9\u5668\u6587\u672c(\u6570\u7ec4\u548c\u5bf9\u8c61)\u4e2d\u63d2\u5165\u672b\u5c3e\u7684\u9017\u53f7\u3002\u5b83\u76ee\u524d\u4ec5\u5bf9 JavaScript \u53ef\u7528\uff0c\u5e76\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7981\u7528 TCS_None \u3002 InsertTrailingCommas \u4e0d\u80fd\u4e0e BinPackArguments \u4e00\u8d77\u4f7f\u7528\uff0c\u56e0\u4e3a\u63d2\u5165\u9017\u53f7\u4f1a\u7981\u7528\u5305\u88c5\u3002 const someArray = [ aaaaaaaaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaa , aaaaaaaaaaaaaaaaaaaaaaaaaa , // ^ inserted ] \u53ef\u80fd\u7684\u503c\uff1a None Wrapped TCS_None : \u4e0d\u8981\u5728\u540e\u9762\u63d2\u5165\u9017\u53f7\u3002 TCS_Wrapped : \u5728\u5305\u88c5\u5728\u591a\u884c\u4e2d\u7684\u62ec\u53f7\u5b57\u9762\u503c\u4e2d\u63d2\u5165\u5c3e\u968f\u9017\u53f7\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u5728\u6982\u5ff5\u4e0a\u4e0e\u88c5\u7bb1\u4e0d\u517c\u5bb9\uff0c\u56e0\u4e3a\u672b\u5c3e\u7684\u9017\u53f7\u88ab\u7528\u4f5c\u6307\u793a\u5bb9\u5668\u5e94\u8be5\u6bcf\u884c\u683c\u5f0f\u5316(\u5373\u4e0d\u5305\u542b)\u3002\u56e0\u6b64\uff0c\u63d2\u5165\u672b\u5c3e\u9017\u53f7\u4f1a\u62b5\u6d88\u62ec\u53f7\u7684\u4f5c\u7528\u3002","title":"InsertTrailingCommas (TrailingCommaStyle)"},{"location":"JavaImportGroups/","text":"JavaImportGroups ( List of Strings ) \u00b6 Info clang-format 8 \u4e00\u4e2a\u7531 Java \u5bfc\u5165\u6240\u9700\u7684\u7ec4\u6392\u5e8f\u7684\u524d\u7f00\u5411\u91cf\u3002 \u4e00\u4e2a\u7ec4\u7684\u524d\u7f00\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7ec4\u7684\u5b50\u96c6\u2014\u2014\u603b\u662f\u5339\u914d\u6700\u957f\u7684\u524d\u7f00\u3002\u5728\u7ec4\u4e2d\uff0c\u5bfc\u5165\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5e8f\u3002\u9759\u6001\u5bfc\u5165\u88ab\u5355\u72ec\u5206\u7ec4\uff0c\u5e76\u9075\u5faa\u76f8\u540c\u7684\u5206\u7ec4\u89c4\u5219\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u5bfc\u5165\u88ab\u653e\u7f6e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u524d\uff0c\u4f46\u662f\u8fd9\u4e2a\u884c\u4e3a\u4f1a\u88ab\u53e6\u4e00\u4e2a\u9009\u9879 SortJavaStaticImport \u66f4\u6539\u3002 \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u50cf\u4e0b\u9762\u7684 yaml \u793a\u4f8b\u4e2d\u90a3\u6837\u914d\u7f6e\u3002\u8fd9\u5c06\u5bfc\u81f4\u5bfc\u5165\u88ab\u683c\u5f0f\u5316\uff0c\u5982\u4e0b\u9762\u7684 Java \u793a\u4f8b\u6240\u793a\u3002 JavaImportGroups : [ 'com.example' , 'com' , 'org' ] import static com.example.function1 ; import static com.test.function2 ; import static org.example.function3 ; import com.example.ClassA ; import com.example.Test ; import com.example.a.ClassB ; import com.test.ClassC ; import org.example.ClassD ;","title":"JavaImportGroups"},{"location":"JavaImportGroups/#javaimportgroups-list-of-strings","text":"Info clang-format 8 \u4e00\u4e2a\u7531 Java \u5bfc\u5165\u6240\u9700\u7684\u7ec4\u6392\u5e8f\u7684\u524d\u7f00\u5411\u91cf\u3002 \u4e00\u4e2a\u7ec4\u7684\u524d\u7f00\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7ec4\u7684\u5b50\u96c6\u2014\u2014\u603b\u662f\u5339\u914d\u6700\u957f\u7684\u524d\u7f00\u3002\u5728\u7ec4\u4e2d\uff0c\u5bfc\u5165\u6309\u5b57\u5178\u987a\u5e8f\u6392\u5e8f\u3002\u9759\u6001\u5bfc\u5165\u88ab\u5355\u72ec\u5206\u7ec4\uff0c\u5e76\u9075\u5faa\u76f8\u540c\u7684\u5206\u7ec4\u89c4\u5219\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u5bfc\u5165\u88ab\u653e\u7f6e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u524d\uff0c\u4f46\u662f\u8fd9\u4e2a\u884c\u4e3a\u4f1a\u88ab\u53e6\u4e00\u4e2a\u9009\u9879 SortJavaStaticImport \u66f4\u6539\u3002 \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u50cf\u4e0b\u9762\u7684 yaml \u793a\u4f8b\u4e2d\u90a3\u6837\u914d\u7f6e\u3002\u8fd9\u5c06\u5bfc\u81f4\u5bfc\u5165\u88ab\u683c\u5f0f\u5316\uff0c\u5982\u4e0b\u9762\u7684 Java \u793a\u4f8b\u6240\u793a\u3002 JavaImportGroups : [ 'com.example' , 'com' , 'org' ] import static com.example.function1 ; import static com.test.function2 ; import static org.example.function3 ; import com.example.ClassA ; import com.example.Test ; import com.example.a.ClassB ; import com.test.ClassC ; import org.example.ClassD ;","title":"JavaImportGroups (List of Strings)"},{"location":"JavaScriptQuotes/","text":"JavaScriptQuotes (JavaScriptQuoteStyle) \u00b6 Info clang-format 3.9 JavaScript \u5b57\u7b26\u4e32\u4f7f\u7528\u7684 JavaScriptQuoteStyle \u3002 \u53ef\u80fd\u7684\u503c\uff1a Leave Single Double JSQS_Leave : \u5b57\u7b26\u4e32\u5f15\u53f7\u4fdd\u6301\u539f\u6837\u3002 string1 = \"foo\" ; string2 = ' bar ' ; JSQS_Single : \u603b\u662f\u4f7f\u7528\u5355\u5f15\u53f7\u3002 string1 = ' foo ' ; string2 = ' bar ' ; JSQS_Double : \u603b\u662f\u4f7f\u7528\u53cc\u5f15\u53f7\u3002 string1 = \"foo\" ; string2 = \"bar\" ;","title":"JavaScriptQuotes"},{"location":"JavaScriptQuotes/#javascriptquotes-javascriptquotestyle","text":"Info clang-format 3.9 JavaScript \u5b57\u7b26\u4e32\u4f7f\u7528\u7684 JavaScriptQuoteStyle \u3002 \u53ef\u80fd\u7684\u503c\uff1a Leave Single Double JSQS_Leave : \u5b57\u7b26\u4e32\u5f15\u53f7\u4fdd\u6301\u539f\u6837\u3002 string1 = \"foo\" ; string2 = ' bar ' ; JSQS_Single : \u603b\u662f\u4f7f\u7528\u5355\u5f15\u53f7\u3002 string1 = ' foo ' ; string2 = ' bar ' ; JSQS_Double : \u603b\u662f\u4f7f\u7528\u53cc\u5f15\u53f7\u3002 string1 = \"foo\" ; string2 = \"bar\" ;","title":"JavaScriptQuotes (JavaScriptQuoteStyle)"},{"location":"JavaScriptWrapImports/","text":"JavaScriptWrapImports ( boolean ) \u00b6 Info clang-format 3.9 \u662f\u5426\u5305\u88c5 JavaScript \u7684\u5bfc\u5165/\u5bfc\u51fa\u8bed\u53e5\u3002 true false import { VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying , } from ' some / module . js ' import { VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying ,} from \"some/module.js\"","title":"JavaScriptWrapImports"},{"location":"JavaScriptWrapImports/#javascriptwrapimports-boolean","text":"Info clang-format 3.9 \u662f\u5426\u5305\u88c5 JavaScript \u7684\u5bfc\u5165/\u5bfc\u51fa\u8bed\u53e5\u3002 true false import { VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying , } from ' some / module . js ' import { VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying , VeryLongImportsAreAnnoying ,} from \"some/module.js\"","title":"JavaScriptWrapImports (boolean)"},{"location":"KeepEmptyLinesAtTheStartOfBlocks/","text":"KeepEmptyLinesAtTheStartOfBlocks ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u4fdd\u7559\u5757\u5f00\u5934\u7684\u7a7a\u884c\u3002 true false if ( foo ) { bar (); } if ( foo ) { bar (); }","title":"KeepEmptyLinesAtTheStartOfBlocks"},{"location":"KeepEmptyLinesAtTheStartOfBlocks/#keepemptylinesatthestartofblocks-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u4fdd\u7559\u5757\u5f00\u5934\u7684\u7a7a\u884c\u3002 true false if ( foo ) { bar (); } if ( foo ) { bar (); }","title":"KeepEmptyLinesAtTheStartOfBlocks (Boolean)"},{"location":"LambdaBodyIndentation/","text":"LambdaBodyIndentation ( LambdaBodyIndentationKind ) \u00b6 Info clang-format 13 lambda \u4e3b\u4f53\u7684\u7f29\u8fdb\u6837\u5f0f\u3002\uff08\u9ed8\u8ba4\uff09\u5bfc\u81f4 lambda \u4e3b\u4f53\u76f8\u5bf9\u4e8e\u7b7e\u540d\u7684\u7f29\u8fdb\u7ea7\u522b\u7f29\u8fdb\u4e00\u4e2a\u989d\u5916\u7684\u7ea7\u522b\u3002 OuterScope \u5f3a\u5236 lambda \u4e3b\u4f53\u76f8\u5bf9\u4e8e\u5305\u542b lambda \u7b7e\u540d\u7684\u7236\u4f5c\u7528\u57df\u7f29\u8fdb\u4e00\u4e2a\u989d\u5916\u7684\u7ea7\u522b\u3002 \u5bf9\u4e8e\u56de\u8c03\u7e41\u91cd\u7684\u4ee3\u7801\uff0c\u5c06\u7b7e\u540d\u7f29\u8fdb\u4e24\u7ea7\u5e76\u4f7f\u7528 OuterScope \u53ef\u80fd\u4f1a\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002KJ \u98ce\u683c\u6307\u5357\u9700\u8981 OuterScope \u3002 KJ\u98ce\u683c\u6307\u5357 Signature OuterScope LBI_Signature : \u76f8\u5bf9\u4e8e lambda \u7b7e\u540d\u5bf9\u9f50 lambda \u4e3b\u4f53\u3002\u8fd9\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u3002 someMethod ( []( SomeReallyLongLambdaSignatureArgument foo ) { return ; }); LBI_OuterScope : \u76f8\u5bf9\u4e8e lambda \u7b7e\u540d\u6240\u5728\u7684\u5916\u90e8\u8303\u56f4\u7684\u7f29\u8fdb\u7ea7\u522b\u5bf9\u9f50 lambda \u4e3b\u4f53\u3002 someMethod ( []( SomeReallyLongLambdaSignatureArgument foo ) { return ; });","title":"LambdaBodyIndentation"},{"location":"LambdaBodyIndentation/#lambdabodyindentation-lambdabodyindentationkind","text":"Info clang-format 13 lambda \u4e3b\u4f53\u7684\u7f29\u8fdb\u6837\u5f0f\u3002\uff08\u9ed8\u8ba4\uff09\u5bfc\u81f4 lambda \u4e3b\u4f53\u76f8\u5bf9\u4e8e\u7b7e\u540d\u7684\u7f29\u8fdb\u7ea7\u522b\u7f29\u8fdb\u4e00\u4e2a\u989d\u5916\u7684\u7ea7\u522b\u3002 OuterScope \u5f3a\u5236 lambda \u4e3b\u4f53\u76f8\u5bf9\u4e8e\u5305\u542b lambda \u7b7e\u540d\u7684\u7236\u4f5c\u7528\u57df\u7f29\u8fdb\u4e00\u4e2a\u989d\u5916\u7684\u7ea7\u522b\u3002 \u5bf9\u4e8e\u56de\u8c03\u7e41\u91cd\u7684\u4ee3\u7801\uff0c\u5c06\u7b7e\u540d\u7f29\u8fdb\u4e24\u7ea7\u5e76\u4f7f\u7528 OuterScope \u53ef\u80fd\u4f1a\u63d0\u9ad8\u53ef\u8bfb\u6027\u3002KJ \u98ce\u683c\u6307\u5357\u9700\u8981 OuterScope \u3002 KJ\u98ce\u683c\u6307\u5357 Signature OuterScope LBI_Signature : \u76f8\u5bf9\u4e8e lambda \u7b7e\u540d\u5bf9\u9f50 lambda \u4e3b\u4f53\u3002\u8fd9\u662f\u9ed8\u8ba4\u8bbe\u7f6e\u3002 someMethod ( []( SomeReallyLongLambdaSignatureArgument foo ) { return ; }); LBI_OuterScope : \u76f8\u5bf9\u4e8e lambda \u7b7e\u540d\u6240\u5728\u7684\u5916\u90e8\u8303\u56f4\u7684\u7f29\u8fdb\u7ea7\u522b\u5bf9\u9f50 lambda \u4e3b\u4f53\u3002 someMethod ( []( SomeReallyLongLambdaSignatureArgument foo ) { return ; });","title":"LambdaBodyIndentation (LambdaBodyIndentationKind)"},{"location":"Language/","text":"Language ( LanguageKind ) \u00b6 Info clang-format 3.5 \u8bed\u8a00\uff0c\u8fd9\u79cd\u683c\u5f0f\u98ce\u683c\u662f\u9488\u5bf9\u7684\u3002 \u53ef\u80fd\u7684\u503c\uff1a None Cpp CSharp Java JavaScript ObjC Proto TableGen TextProto LK_None : \u4e0d\u4f7f\u7528\u3002 LK_Cpp : \u5e94\u7528\u4e8e C , C++ \u3002 LK_CSharp : \u5e94\u8be5\u7528\u4e8e C# \u3002 LK_Java : \u5e94\u8be5\u7528\u4e8e Java \u3002 LK_JavaScript : \u5e94\u8be5\u7528\u4e8e JavaScript \u3002 LK_ObjC : \u5e94\u8be5\u7528\u4e8e Objective-C \uff0c Objective-C++ \u3002 LK_Proto : \u5e94\u8be5\u7528\u4e8e\u534f\u8bae\u7f13\u51b2\u533a (https://developers.google.com/protocol-buffers)\u3002 LK_TableGen : \u5e94\u8be5\u7528\u4e8e TableGen \u4ee3\u7801\u3002 LK_TextProto : \u5e94\u8be5\u7528\u4e8e\u6587\u672c\u683c\u5f0f\u7684\u534f\u8bae\u7f13\u51b2\u533a\u6d88\u606f (https://developers.google.com/protocol-buffers)\u3002","title":"Language"},{"location":"Language/#language-languagekind","text":"Info clang-format 3.5 \u8bed\u8a00\uff0c\u8fd9\u79cd\u683c\u5f0f\u98ce\u683c\u662f\u9488\u5bf9\u7684\u3002 \u53ef\u80fd\u7684\u503c\uff1a None Cpp CSharp Java JavaScript ObjC Proto TableGen TextProto LK_None : \u4e0d\u4f7f\u7528\u3002 LK_Cpp : \u5e94\u7528\u4e8e C , C++ \u3002 LK_CSharp : \u5e94\u8be5\u7528\u4e8e C# \u3002 LK_Java : \u5e94\u8be5\u7528\u4e8e Java \u3002 LK_JavaScript : \u5e94\u8be5\u7528\u4e8e JavaScript \u3002 LK_ObjC : \u5e94\u8be5\u7528\u4e8e Objective-C \uff0c Objective-C++ \u3002 LK_Proto : \u5e94\u8be5\u7528\u4e8e\u534f\u8bae\u7f13\u51b2\u533a (https://developers.google.com/protocol-buffers)\u3002 LK_TableGen : \u5e94\u8be5\u7528\u4e8e TableGen \u4ee3\u7801\u3002 LK_TextProto : \u5e94\u8be5\u7528\u4e8e\u6587\u672c\u683c\u5f0f\u7684\u534f\u8bae\u7f13\u51b2\u533a\u6d88\u606f (https://developers.google.com/protocol-buffers)\u3002","title":"Language (LanguageKind)"},{"location":"MacroBlockBegin/","text":"MacroBlockBegin ( String ) \u00b6 Info clang-format 3.7 \u5339\u914d\u5f00\u59cb\u5757\u7684\u5b8f\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 MacroBlockBegin : \"^NS_MAP_BEGIN|\\ NS_TABLE_HEAD$\" MacroBlockEnd : \"^\\ NS_MAP_END|\\ NS_TABLE_.*_END$\" With Without NS_MAP_BEGIN foo (); NS_MAP_END NS_TABLE_HEAD bar (); NS_TABLE_FOO_END NS_MAP_BEGIN foo (); NS_MAP_END NS_TABLE_HEAD bar (); NS_TABLE_FOO_END","title":"MacroBlockBegin"},{"location":"MacroBlockBegin/#macroblockbegin-string","text":"Info clang-format 3.7 \u5339\u914d\u5f00\u59cb\u5757\u7684\u5b8f\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 MacroBlockBegin : \"^NS_MAP_BEGIN|\\ NS_TABLE_HEAD$\" MacroBlockEnd : \"^\\ NS_MAP_END|\\ NS_TABLE_.*_END$\" With Without NS_MAP_BEGIN foo (); NS_MAP_END NS_TABLE_HEAD bar (); NS_TABLE_FOO_END NS_MAP_BEGIN foo (); NS_MAP_END NS_TABLE_HEAD bar (); NS_TABLE_FOO_END","title":"MacroBlockBegin (String)"},{"location":"MacroBlockEnd/","text":"MacroBlockEnd ( String ) \u00b6 Info clang-format 3.7 \u5339\u914d\u4ee5\u5757\u7ed3\u675f\u7684\u5b8f\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002","title":"MacroBlockEnd"},{"location":"MacroBlockEnd/#macroblockend-string","text":"Info clang-format 3.7 \u5339\u914d\u4ee5\u5757\u7ed3\u675f\u7684\u5b8f\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002","title":"MacroBlockEnd (String)"},{"location":"MaxEmptyLinesToKeep/","text":"MaxEmptyLinesToKeep ( Unsigned ) \u00b6 Info clang-format 3.7 \u8981\u4fdd\u7559\u7684\u6700\u5927\u8fde\u7eed\u7a7a\u884c\u6570\u3002 MaxEmptyLinesToKeep : 1 vs. MaxEmptyLinesToKeep : 0 int f () { int f () { int = 1 ; int i = 1 ; i = foo (); i = foo (); return i ; } return i ; }","title":"MaxEmptyLinesToKeep"},{"location":"MaxEmptyLinesToKeep/#maxemptylinestokeep-unsigned","text":"Info clang-format 3.7 \u8981\u4fdd\u7559\u7684\u6700\u5927\u8fde\u7eed\u7a7a\u884c\u6570\u3002 MaxEmptyLinesToKeep : 1 vs. MaxEmptyLinesToKeep : 0 int f () { int f () { int = 1 ; int i = 1 ; i = foo (); i = foo (); return i ; } return i ; }","title":"MaxEmptyLinesToKeep (Unsigned)"},{"location":"NamespaceIndentation/","text":"NamespaceIndentation ( NamespaceIndentationKind ) \u00b6 Info clang-format 3.7 \u540d\u79f0\u7a7a\u95f4\u4f7f\u7528\u7684\u7f29\u8fdb\u3002 \u53ef\u80fd\u7684\u503c\uff1a None Inner All NI_None : \u4e0d\u8981\u5728\u540d\u79f0\u7a7a\u95f4\u4e2d\u7f29\u8fdb\u3002 namespace out { int i ; namespace in { int i ; } } NI_Inner : \u53ea\u5728\u5185\u90e8\u540d\u79f0\u7a7a\u95f4\u4e2d\u7f29\u8fdb(\u5d4c\u5957\u5728\u5176\u4ed6\u540d\u79f0\u7a7a\u95f4\u4e2d)\u3002 namespace out { int i ; namespace in { int i ; } } NI_All : \u7f29\u8fdb\u6240\u6709\u540d\u79f0\u7a7a\u95f4\u3002 namespace out { int i ; namespace in { int i ; } }","title":"NamespaceIndentation"},{"location":"NamespaceIndentation/#namespaceindentation-namespaceindentationkind","text":"Info clang-format 3.7 \u540d\u79f0\u7a7a\u95f4\u4f7f\u7528\u7684\u7f29\u8fdb\u3002 \u53ef\u80fd\u7684\u503c\uff1a None Inner All NI_None : \u4e0d\u8981\u5728\u540d\u79f0\u7a7a\u95f4\u4e2d\u7f29\u8fdb\u3002 namespace out { int i ; namespace in { int i ; } } NI_Inner : \u53ea\u5728\u5185\u90e8\u540d\u79f0\u7a7a\u95f4\u4e2d\u7f29\u8fdb(\u5d4c\u5957\u5728\u5176\u4ed6\u540d\u79f0\u7a7a\u95f4\u4e2d)\u3002 namespace out { int i ; namespace in { int i ; } } NI_All : \u7f29\u8fdb\u6240\u6709\u540d\u79f0\u7a7a\u95f4\u3002 namespace out { int i ; namespace in { int i ; } }","title":"NamespaceIndentation (NamespaceIndentationKind)"},{"location":"NamespaceMacros/","text":"NamespaceMacros ( List of Strings ) \u00b6 Info clang-format 9 \u7528\u4e8e\u6253\u5f00\u547d\u540d\u7a7a\u95f4\u5757\u7684\u5b8f\u7684\u5411\u91cf\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a NAMESPACE ( < namespace - name > , ...) { < namespace - content > } \u4f8b\u5982: TESTSUITE","title":"NamespaceMacros"},{"location":"NamespaceMacros/#namespacemacros-list-of-strings","text":"Info clang-format 9 \u7528\u4e8e\u6253\u5f00\u547d\u540d\u7a7a\u95f4\u5757\u7684\u5b8f\u7684\u5411\u91cf\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a NAMESPACE ( < namespace - name > , ...) { < namespace - content > } \u4f8b\u5982: TESTSUITE","title":"NamespaceMacros (List of Strings)"},{"location":"ObjCBinPackProtocolList/","text":"ObjCBinPackProtocolList ( BinPackStyle ) \u00b6 Info clang-format 7 \u63a7\u5236\u5305\u88c5 Objective-C \u534f\u8bae\u4e00\u81f4\u6027\u5217\u8868\u9879\u5230\u5c3d\u53ef\u80fd\u5c11\u7684\u884c\uff0c\u5f53\u4ed6\u4eec\u8d85\u8fc7 ColumnLimit \u3002 \u5982\u679c\u662f Auto (\u9ed8\u8ba4\u503c)\uff0c\u5219\u59d4\u6258 BinPackParameters \u4e2d\u7684\u503c\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u628a\u7b26\u5408 Objective-C \u534f\u8bae\u7684\u5217\u8868\u9879\u653e\u5165\u5c3d\u53ef\u80fd\u5c11\u7684\u884c\u4e2d\uff0c\u53ea\u8981\u5b83\u4eec\u8d85\u8fc7 ColumnLimit \u3002 \u5982\u679c\u662f Always \uff0c\u90a3\u4e48\u5f53 Objective-C \u534f\u8bae\u4e00\u81f4\u6027\u5217\u8868\u9879\u8d85\u8fc7 ColumnLimit \u65f6\uff0c\u603b\u662f\u628a\u5b83\u4eec\u6253\u5305\u6210\u5c3d\u53ef\u80fd\u5c11\u7684\u884c\u3002 \u5982\u679c\u662f Never \uff0c\u5f53\u8d85\u8fc7 ColumnLimit \u65f6\uff0c\u5c06\u7b26\u5408 Objective-C \u534f\u8bae\u7684\u5217\u8868\u9879\u653e\u5728\u5355\u72ec\u7684\u884c\u4e0a\u3002 Always (\u6216 Auto , BinPackParameters=true )\uff1a @interface ccccccccccccc () < ccccccccccccc , ccccccccccccc , ccccccccccccc , ccccccccccccc > { } Never (\u6216 Auto , BinPackParameters=false )\uff1a @interface ddddddddddddd () < ddddddddddddd , ddddddddddddd , ddddddddddddd , ddddddddddddd > { } \u53ef\u80fd\u7684\u503c\uff1a BPS_Auto : \u81ea\u52a8\u786e\u5b9a\u53c2\u6570\u88c5\u7bb1\u884c\u4e3a\u3002 BPS_Always : \u603b\u662f\u5305\u88c5\u53c2\u6570\u3002 BPS_Never : \u4ece\u4e0d\u5305\u88c5\u53c2\u6570","title":"ObjCBinPackProtocolList"},{"location":"ObjCBinPackProtocolList/#objcbinpackprotocollist-binpackstyle","text":"Info clang-format 7 \u63a7\u5236\u5305\u88c5 Objective-C \u534f\u8bae\u4e00\u81f4\u6027\u5217\u8868\u9879\u5230\u5c3d\u53ef\u80fd\u5c11\u7684\u884c\uff0c\u5f53\u4ed6\u4eec\u8d85\u8fc7 ColumnLimit \u3002 \u5982\u679c\u662f Auto (\u9ed8\u8ba4\u503c)\uff0c\u5219\u59d4\u6258 BinPackParameters \u4e2d\u7684\u503c\u3002\u5982\u679c\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u628a\u7b26\u5408 Objective-C \u534f\u8bae\u7684\u5217\u8868\u9879\u653e\u5165\u5c3d\u53ef\u80fd\u5c11\u7684\u884c\u4e2d\uff0c\u53ea\u8981\u5b83\u4eec\u8d85\u8fc7 ColumnLimit \u3002 \u5982\u679c\u662f Always \uff0c\u90a3\u4e48\u5f53 Objective-C \u534f\u8bae\u4e00\u81f4\u6027\u5217\u8868\u9879\u8d85\u8fc7 ColumnLimit \u65f6\uff0c\u603b\u662f\u628a\u5b83\u4eec\u6253\u5305\u6210\u5c3d\u53ef\u80fd\u5c11\u7684\u884c\u3002 \u5982\u679c\u662f Never \uff0c\u5f53\u8d85\u8fc7 ColumnLimit \u65f6\uff0c\u5c06\u7b26\u5408 Objective-C \u534f\u8bae\u7684\u5217\u8868\u9879\u653e\u5728\u5355\u72ec\u7684\u884c\u4e0a\u3002 Always (\u6216 Auto , BinPackParameters=true )\uff1a @interface ccccccccccccc () < ccccccccccccc , ccccccccccccc , ccccccccccccc , ccccccccccccc > { } Never (\u6216 Auto , BinPackParameters=false )\uff1a @interface ddddddddddddd () < ddddddddddddd , ddddddddddddd , ddddddddddddd , ddddddddddddd > { } \u53ef\u80fd\u7684\u503c\uff1a BPS_Auto : \u81ea\u52a8\u786e\u5b9a\u53c2\u6570\u88c5\u7bb1\u884c\u4e3a\u3002 BPS_Always : \u603b\u662f\u5305\u88c5\u53c2\u6570\u3002 BPS_Never : \u4ece\u4e0d\u5305\u88c5\u53c2\u6570","title":"ObjCBinPackProtocolList (BinPackStyle)"},{"location":"ObjCBlockIndentWidth/","text":"ObjCBlockIndentWidth ( Unsigned ) \u00b6 Info clang-format 3.7 \u7528\u4e8e ObjC \u5757\u7f29\u8fdb\u7684\u5b57\u7b26\u6570\u3002 ObjCBlockIndentWidth : 4 [ operation setCompletionBlock :^ { [ self onOperationDone ]; }];","title":"ObjCBlockIndentWidth"},{"location":"ObjCBlockIndentWidth/#objcblockindentwidth-unsigned","text":"Info clang-format 3.7 \u7528\u4e8e ObjC \u5757\u7f29\u8fdb\u7684\u5b57\u7b26\u6570\u3002 ObjCBlockIndentWidth : 4 [ operation setCompletionBlock :^ { [ self onOperationDone ]; }];","title":"ObjCBlockIndentWidth (Unsigned)"},{"location":"ObjCBreakBeforeNestedBlockParam/","text":"ObjCBreakBeforeNestedBlockParam ( Boolean ) \u00b6 Info clang-format 12 \u5f53\u51fd\u6570\u8c03\u7528\u4e2d\u6709\u5d4c\u5957\u7684\u5757\u5f62\u53c2\u65f6\uff0c\u5c06\u5f62\u53c2\u5217\u8868\u5206\u6210\u51e0\u884c\u3002 true false (void)_aMethod { [self.test1 t:self w:self callback:^(typeof(self) self, NSNumber *u, NSNumber *v) { u = c; }] } ( void ) _aMethod { [ self . test1 t : self w : self callback :^ ( typeof ( self ) self , NSNumber * u , NSNumber * v ) { u = c ; }] }","title":"ObjCBreakBeforeNestedBlockParam"},{"location":"ObjCBreakBeforeNestedBlockParam/#objcbreakbeforenestedblockparam-boolean","text":"Info clang-format 12 \u5f53\u51fd\u6570\u8c03\u7528\u4e2d\u6709\u5d4c\u5957\u7684\u5757\u5f62\u53c2\u65f6\uff0c\u5c06\u5f62\u53c2\u5217\u8868\u5206\u6210\u51e0\u884c\u3002 true false (void)_aMethod { [self.test1 t:self w:self callback:^(typeof(self) self, NSNumber *u, NSNumber *v) { u = c; }] } ( void ) _aMethod { [ self . test1 t : self w : self callback :^ ( typeof ( self ) self , NSNumber * u , NSNumber * v ) { u = c ; }] }","title":"ObjCBreakBeforeNestedBlockParam (Boolean)"},{"location":"ObjCSpaceAfterProperty/","text":"ObjCSpaceAfterProperty ( Boolean ) \u00b6 Info clang-format 3.7 \u5728 Objective-C \u7684 @property \u540e\u9762\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u5373\u4f7f\u7528 @property (readonly) \u800c\u4e0d\u662f @property(readonly) \u3002","title":"ObjCSpaceAfterProperty"},{"location":"ObjCSpaceAfterProperty/#objcspaceafterproperty-boolean","text":"Info clang-format 3.7 \u5728 Objective-C \u7684 @property \u540e\u9762\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u5373\u4f7f\u7528 @property (readonly) \u800c\u4e0d\u662f @property(readonly) \u3002","title":"ObjCSpaceAfterProperty (Boolean)"},{"location":"ObjCSpaceBeforeProtocolList/","text":"ObjCSpaceBeforeProtocolList ( Boolean ) \u00b6 Info clang-format 3.7 \u5728 Objective-C \u534f\u8bae\u5217\u8868\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f8b\u5982\u4f7f\u7528 Foo <protocol> \u4ee3\u66ff Foo<protocol> \u3002","title":"ObjCSpaceBeforeProtocolList"},{"location":"ObjCSpaceBeforeProtocolList/#objcspacebeforeprotocollist-boolean","text":"Info clang-format 3.7 \u5728 Objective-C \u534f\u8bae\u5217\u8868\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a\u7a7a\u683c\uff0c\u4f8b\u5982\u4f7f\u7528 Foo <protocol> \u4ee3\u66ff Foo<protocol> \u3002","title":"ObjCSpaceBeforeProtocolList (Boolean)"},{"location":"PPIndentWidth/","text":"PPIndentWidth ( Integer ) \u00b6 Info clang-format 14 \u7528\u4e8e\u7f29\u8fdb\u9884\u5904\u7406\u5668\u8bed\u53e5\u7684\u5217\u6570\u3002 \u5f53\u8bbe\u7f6e\u4e3a -1\uff08\u9ed8\u8ba4\uff09\u65f6\uff0c IndentWidth \u4e5f\u7528\u4e8e\u9884\u5904\u7406\u5668\u8bed\u53e5\u3002 PPIndentWidth: 1 #ifdef __linux__ # define FOO #else # define BAR #endif","title":"PPIndentWidth"},{"location":"PPIndentWidth/#ppindentwidth-integer","text":"Info clang-format 14 \u7528\u4e8e\u7f29\u8fdb\u9884\u5904\u7406\u5668\u8bed\u53e5\u7684\u5217\u6570\u3002 \u5f53\u8bbe\u7f6e\u4e3a -1\uff08\u9ed8\u8ba4\uff09\u65f6\uff0c IndentWidth \u4e5f\u7528\u4e8e\u9884\u5904\u7406\u5668\u8bed\u53e5\u3002 PPIndentWidth: 1 #ifdef __linux__ # define FOO #else # define BAR #endif","title":"PPIndentWidth (Integer)"},{"location":"PackConstructorInitializers/","text":"PackConstructorInitializers ( PackConstructorInitializersStyle ) \u00b6 Info clang-format 14 \u8981\u4f7f\u7528\u7684\u5305\u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never BinPack CurrentLine NextLine PCIS_Never : \u59cb\u7ec8\u5c06\u6bcf\u4e2a\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5668\u653e\u5728\u81ea\u5df1\u7684\u884c\u4e0a\u3002 Constructor () : a (), b () PCIS_BinPack : Bin-pack \u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u3002 Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), cccccccccccccccccccc () PCIS_CurrentLine : \u5982\u679c\u5408\u9002\uff0c\u5c06\u6240\u6709\u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u653e\u5728\u5f53\u524d\u884c\u3002 \u5426\u5219\uff0c\u5c06\u6bcf\u4e2a\u90fd\u653e\u5728\u81ea\u5df1\u7684\u884c\u4e0a\u3002 Constructor () : a (), b () Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), ddddddddddddd () PCIS_NextLine : \u4e0e PCIS_CurrentLine \u76f8\u540c\uff0c\u4f46\u5982\u679c\u6240\u6709\u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u90fd\u4e0d\u9002\u5408\u5f53\u524d\u884c\uff0c\u5219\u5c1d\u8bd5\u5c06\u5b83\u4eec\u653e\u5728\u4e0b\u4e00\u884c\u3002 Constructor () : a (), b () Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), ddddddddddddd () Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), cccccccccccccccccccc ()","title":"PackConstructorInitializers"},{"location":"PackConstructorInitializers/#packconstructorinitializers-packconstructorinitializersstyle","text":"Info clang-format 14 \u8981\u4f7f\u7528\u7684\u5305\u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never BinPack CurrentLine NextLine PCIS_Never : \u59cb\u7ec8\u5c06\u6bcf\u4e2a\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5668\u653e\u5728\u81ea\u5df1\u7684\u884c\u4e0a\u3002 Constructor () : a (), b () PCIS_BinPack : Bin-pack \u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u3002 Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), cccccccccccccccccccc () PCIS_CurrentLine : \u5982\u679c\u5408\u9002\uff0c\u5c06\u6240\u6709\u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u653e\u5728\u5f53\u524d\u884c\u3002 \u5426\u5219\uff0c\u5c06\u6bcf\u4e2a\u90fd\u653e\u5728\u81ea\u5df1\u7684\u884c\u4e0a\u3002 Constructor () : a (), b () Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), ddddddddddddd () PCIS_NextLine : \u4e0e PCIS_CurrentLine \u76f8\u540c\uff0c\u4f46\u5982\u679c\u6240\u6709\u6784\u9020\u51fd\u6570\u521d\u59cb\u503c\u8bbe\u5b9a\u9879\u90fd\u4e0d\u9002\u5408\u5f53\u524d\u884c\uff0c\u5219\u5c1d\u8bd5\u5c06\u5b83\u4eec\u653e\u5728\u4e0b\u4e00\u884c\u3002 Constructor () : a (), b () Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), ddddddddddddd () Constructor () : aaaaaaaaaaaaaaaaaaaa (), bbbbbbbbbbbbbbbbbbbb (), cccccccccccccccccccc ()","title":"PackConstructorInitializers (PackConstructorInitializersStyle)"},{"location":"PenaltyBreakAssignment/","text":"PenaltyBreakAssignment ( Unsigned ) \u00b6 Info clang-format 5 \u7a81\u7834\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyBreakAssignment"},{"location":"PenaltyBreakAssignment/#penaltybreakassignment-unsigned","text":"Info clang-format 5 \u7a81\u7834\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyBreakAssignment (Unsigned)"},{"location":"PenaltyBreakBeforeFirstCallParameter/","text":"PenaltyBreakBeforeFirstCallParameter ( Unsigned ) \u00b6 Info clang-format 3.7 call( \u540e\u4e2d\u65ad\u51fd\u6570\u8c03\u7528\u7684\u8865\u507f\u3002","title":"PenaltyBreakBeforeFirstCallParameter"},{"location":"PenaltyBreakBeforeFirstCallParameter/#penaltybreakbeforefirstcallparameter-unsigned","text":"Info clang-format 3.7 call( \u540e\u4e2d\u65ad\u51fd\u6570\u8c03\u7528\u7684\u8865\u507f\u3002","title":"PenaltyBreakBeforeFirstCallParameter (Unsigned)"},{"location":"PenaltyBreakComment/","text":"PenaltyBreakComment ( Unsigned ) \u00b6 Info clang-format 3.7 \u6ce8\u91ca\u4e2d\u5f15\u5165\u7684\u6bcf\u4e2a\u6362\u884c\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyBreakComment"},{"location":"PenaltyBreakComment/#penaltybreakcomment-unsigned","text":"Info clang-format 3.7 \u6ce8\u91ca\u4e2d\u5f15\u5165\u7684\u6bcf\u4e2a\u6362\u884c\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyBreakComment (Unsigned)"},{"location":"PenaltyBreakFirstLessLess/","text":"PenaltyBreakFirstLessLess ( Unsigned ) \u00b6 Info clang-format 3.7 \u5728\u7b2c\u4e00\u4e2a << \u4e4b\u524d\u4e2d\u65ad\u7684\u8865\u507f\u3002","title":"PenaltyBreakFirstLessLess"},{"location":"PenaltyBreakFirstLessLess/#penaltybreakfirstlessless-unsigned","text":"Info clang-format 3.7 \u5728\u7b2c\u4e00\u4e2a << \u4e4b\u524d\u4e2d\u65ad\u7684\u8865\u507f\u3002","title":"PenaltyBreakFirstLessLess (Unsigned)"},{"location":"PenaltyBreakString/","text":"PenaltyBreakString ( Unsigned ) \u00b6 Info clang-format 3.7 \u5728\u5b57\u7b26\u4e32\u6587\u5b57\u4e2d\u5f15\u5165\u7684\u6bcf\u4e2a\u6362\u884c\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyBreakString"},{"location":"PenaltyBreakString/#penaltybreakstring-unsigned","text":"Info clang-format 3.7 \u5728\u5b57\u7b26\u4e32\u6587\u5b57\u4e2d\u5f15\u5165\u7684\u6bcf\u4e2a\u6362\u884c\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyBreakString (Unsigned)"},{"location":"PenaltyBreakTemplateDeclaration/","text":"PenaltyBreakTemplateDeclaration ( Unsigned ) \u00b6 Info clang-format 7 \u6a21\u677f\u58f0\u660e\u540e\u4e2d\u65ad\u7684\u8865\u507f\u3002","title":"PenaltyBreakTemplateDeclaration"},{"location":"PenaltyBreakTemplateDeclaration/#penaltybreaktemplatedeclaration-unsigned","text":"Info clang-format 7 \u6a21\u677f\u58f0\u660e\u540e\u4e2d\u65ad\u7684\u8865\u507f\u3002","title":"PenaltyBreakTemplateDeclaration (Unsigned)"},{"location":"PenaltyExcessCharacter/","text":"PenaltyExcessCharacter ( Unsigned ) \u00b6 Info clang-format 3.7 \u5217\u9650\u5236\u4e4b\u5916\u7684\u6bcf\u4e2a\u5b57\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyExcessCharacter"},{"location":"PenaltyExcessCharacter/#penaltyexcesscharacter-unsigned","text":"Info clang-format 3.7 \u5217\u9650\u5236\u4e4b\u5916\u7684\u6bcf\u4e2a\u5b57\u7b26\u7684\u8865\u507f\u3002","title":"PenaltyExcessCharacter (Unsigned)"},{"location":"PenaltyIndentedWhitespace/","text":"PenaltyIndentedWhitespace ( Unsigned ) \u00b6 Info clang-format 12 \u7a7a\u683c\u7f29\u8fdb\u7684\u6bcf\u4e2a\u5b57\u7b26\u7684\u8865\u507f\uff08\u76f8\u5bf9\u4e8e\u524d\u5bfc\u975e\u7a7a\u683c\u5217\u8ba1\u7b97\uff09\u3002","title":"PenaltyIndentedWhitespace"},{"location":"PenaltyIndentedWhitespace/#penaltyindentedwhitespace-unsigned","text":"Info clang-format 12 \u7a7a\u683c\u7f29\u8fdb\u7684\u6bcf\u4e2a\u5b57\u7b26\u7684\u8865\u507f\uff08\u76f8\u5bf9\u4e8e\u524d\u5bfc\u975e\u7a7a\u683c\u5217\u8ba1\u7b97\uff09\u3002","title":"PenaltyIndentedWhitespace (Unsigned)"},{"location":"PenaltyReturnTypeOnItsOwnLine/","text":"PenaltyReturnTypeOnItsOwnLine (Unsigned) \u00b6 Info clang-format 3.7 \u5c06\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u653e\u5728\u5b83\u81ea\u5df1\u7684\u884c\u4e0a\u7684\u8865\u507f\u3002","title":"PenaltyReturnTypeOnItsOwnLine"},{"location":"PenaltyReturnTypeOnItsOwnLine/#penaltyreturntypeonitsownline-unsigned","text":"Info clang-format 3.7 \u5c06\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u653e\u5728\u5b83\u81ea\u5df1\u7684\u884c\u4e0a\u7684\u8865\u507f\u3002","title":"PenaltyReturnTypeOnItsOwnLine (Unsigned)"},{"location":"PointerAlignment/","text":"PointerAlignment ( PointerAlignmentStyle ) \u00b6 Info clang-format 3.7 \u6307\u9488\u548c\u5f15\u7528\u5bf9\u9f50\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Left Right Middle PAS_Left : \u5c06\u6307\u9488\u5411\u5de6\u5bf9\u9f50\u3002 int * a ; PAS_Right : \u5c06\u6307\u9488\u5411\u53f3\u5bf9\u9f50\u3002 int * a ; PAS_Middle : \u5728\u4e2d\u95f4\u5bf9\u9f50\u6307\u9488\u3002 int * a ;","title":"PointerAlignment"},{"location":"PointerAlignment/#pointeralignment-pointeralignmentstyle","text":"Info clang-format 3.7 \u6307\u9488\u548c\u5f15\u7528\u5bf9\u9f50\u6837\u5f0f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Left Right Middle PAS_Left : \u5c06\u6307\u9488\u5411\u5de6\u5bf9\u9f50\u3002 int * a ; PAS_Right : \u5c06\u6307\u9488\u5411\u53f3\u5bf9\u9f50\u3002 int * a ; PAS_Middle : \u5728\u4e2d\u95f4\u5bf9\u9f50\u6307\u9488\u3002 int * a ;","title":"PointerAlignment (PointerAlignmentStyle)"},{"location":"QualifierAlignment/","text":"QualifierAlignment ( QualifierAlignmentStyle ) \u00b6 Info clang-format 14 \u6392\u5217\u8bf4\u660e\u7b26\u548c\u9650\u5b9a\u7b26\u7684\u4e0d\u540c\u65b9\u5f0f\uff08\u4f8b\u5982 const / volatile \uff09\u3002 Waring \u5c06 QualifierAlignment \u8bbe\u7f6e\u4e3a Leave \u4ee5\u5916\u7684\u5176\u4ed6\u5185\u5bb9\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u4ee3\u7801\u683c\u5f0f\uff0c\u8fd9\u662f\u7531\u4e8e clang-format \u7f3a\u4e4f\u5b8c\u6574\u7684\u8bed\u4e49\u4fe1\u606f\u800c\u505a\u51fa\u7684\u9519\u8bef\u51b3\u5b9a\u3002\u56e0\u6b64\uff0c\u5e94\u683c\u5916\u5c0f\u5fc3\u5730\u5ba1\u67e5\u4f7f\u7528\u6b64\u9009\u9879\u6240\u505a\u7684\u4ee3\u7801\u66f4\u6539\u3002 \u53ef\u80fd\u7684\u503c\uff1a Leave Left Right Custom QAS_Leave : \u4e0d\u8981\u5c06\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u66f4\u6539\u4e3a\u5de6\u5bf9\u9f50\u6216\u53f3\u5bf9\u9f50\uff08\u9ed8\u8ba4\uff09\u3002 int const a ; const int * a ; QAS_Left : \u5c06\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u66f4\u6539\u4e3a\u5de6\u5bf9\u9f50\u3002 const int a ; const int * a ; QAS_Right : \u5c06\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u66f4\u6539\u4e3a\u53f3\u5bf9\u9f50\u3002 int const a ; int const * a ; QAS_Custom : \u66f4\u6539\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u4ee5\u6839\u636e QualifierOrder \u5bf9\u9f50\u3002 QualifierOrder: ['inline', 'static' , 'type', 'const'] int const a ; int const * a ;","title":"QualifierAlignment"},{"location":"QualifierAlignment/#qualifieralignment-qualifieralignmentstyle","text":"Info clang-format 14 \u6392\u5217\u8bf4\u660e\u7b26\u548c\u9650\u5b9a\u7b26\u7684\u4e0d\u540c\u65b9\u5f0f\uff08\u4f8b\u5982 const / volatile \uff09\u3002 Waring \u5c06 QualifierAlignment \u8bbe\u7f6e\u4e3a Leave \u4ee5\u5916\u7684\u5176\u4ed6\u5185\u5bb9\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u4ee3\u7801\u683c\u5f0f\uff0c\u8fd9\u662f\u7531\u4e8e clang-format \u7f3a\u4e4f\u5b8c\u6574\u7684\u8bed\u4e49\u4fe1\u606f\u800c\u505a\u51fa\u7684\u9519\u8bef\u51b3\u5b9a\u3002\u56e0\u6b64\uff0c\u5e94\u683c\u5916\u5c0f\u5fc3\u5730\u5ba1\u67e5\u4f7f\u7528\u6b64\u9009\u9879\u6240\u505a\u7684\u4ee3\u7801\u66f4\u6539\u3002 \u53ef\u80fd\u7684\u503c\uff1a Leave Left Right Custom QAS_Leave : \u4e0d\u8981\u5c06\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u66f4\u6539\u4e3a\u5de6\u5bf9\u9f50\u6216\u53f3\u5bf9\u9f50\uff08\u9ed8\u8ba4\uff09\u3002 int const a ; const int * a ; QAS_Left : \u5c06\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u66f4\u6539\u4e3a\u5de6\u5bf9\u9f50\u3002 const int a ; const int * a ; QAS_Right : \u5c06\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u66f4\u6539\u4e3a\u53f3\u5bf9\u9f50\u3002 int const a ; int const * a ; QAS_Custom : \u66f4\u6539\u8bf4\u660e\u7b26/\u9650\u5b9a\u7b26\u4ee5\u6839\u636e QualifierOrder \u5bf9\u9f50\u3002 QualifierOrder: ['inline', 'static' , 'type', 'const'] int const a ; int const * a ;","title":"QualifierAlignment (QualifierAlignmentStyle)"},{"location":"QualifierOrder/","text":"QualifierOrder ( List of Strings ) \u00b6 Info clang-format 14 \u9650\u5b9a\u7b26\u51fa\u73b0\u7684\u987a\u5e8f\u3002\u987a\u5e8f\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u4efb\u4f55\u4e00\u9879\uff1a const inline static constexpr volatile restrict type Attention \u5b83\u5fc5\u987b\u5305\u542b type \u3002 type \u5de6\u4fa7\u7684\u9879\u76ee\u5c06\u653e\u7f6e\u5728\u7c7b\u578b\u7684\u5de6\u4fa7\u5e76\u6309\u63d0\u4f9b\u7684\u987a\u5e8f\u5bf9\u9f50\u3002 type \u53f3\u4fa7\u7684\u9879\u76ee\u5c06\u653e\u7f6e\u5728\u7c7b\u578b\u7684\u53f3\u4fa7\u5e76\u6309\u7167\u63d0\u4f9b\u7684\u987a\u5e8f\u5bf9\u9f50\u3002 QualifierOrder: ['inline', 'static', 'type', 'const', 'volatile' ]","title":"QualifierOrder"},{"location":"QualifierOrder/#qualifierorder-list-of-strings","text":"Info clang-format 14 \u9650\u5b9a\u7b26\u51fa\u73b0\u7684\u987a\u5e8f\u3002\u987a\u5e8f\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u53ef\u4ee5\u5305\u542b\u4ee5\u4e0b\u4efb\u4f55\u4e00\u9879\uff1a const inline static constexpr volatile restrict type Attention \u5b83\u5fc5\u987b\u5305\u542b type \u3002 type \u5de6\u4fa7\u7684\u9879\u76ee\u5c06\u653e\u7f6e\u5728\u7c7b\u578b\u7684\u5de6\u4fa7\u5e76\u6309\u63d0\u4f9b\u7684\u987a\u5e8f\u5bf9\u9f50\u3002 type \u53f3\u4fa7\u7684\u9879\u76ee\u5c06\u653e\u7f6e\u5728\u7c7b\u578b\u7684\u53f3\u4fa7\u5e76\u6309\u7167\u63d0\u4f9b\u7684\u987a\u5e8f\u5bf9\u9f50\u3002 QualifierOrder: ['inline', 'static', 'type', 'const', 'volatile' ]","title":"QualifierOrder (List of Strings)"},{"location":"RawStringFormats/","text":"RawStringFormats ( List of RawStringFormats ) \u00b6 Info clang-format 6 \u5b9a\u4e49\u5728\u539f\u59cb\u5b57\u7b26\u4e32\u4e2d\u68c0\u6d4b\u652f\u6301\u7684\u8bed\u8a00\u4ee3\u7801\u5757\u7684\u63d0\u793a\u3002 \u5e26\u6709\u5339\u914d\u7684\u5206\u9694\u7b26\u6216\u5305\u542b\u5339\u914d\u7684\u51fd\u6570\u540d\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u5c06\u6839\u636e .clang-format \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u8bed\u8a00\u7684\u6837\u5f0f\u8fdb\u884c\u91cd\u65b0\u683c\u5f0f\u5316\uff0c\u5047\u8bbe\u8be5\u8bed\u8a00\u662f\u6307\u5b9a\u7684\u8bed\u8a00\u3002\u5982\u679c\u5728. clang-format \u6587\u4ef6\u4e2d\u6ca1\u6709\u4e3a\u7279\u5b9a\u8bed\u8a00\u5b9a\u4e49\u6837\u5f0f\uff0c\u5219\u4f7f\u7528 BasedOnStyle \u7ed9\u51fa\u7684\u9884\u5b9a\u4e49\u6837\u5f0f\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230 BasedOnStyle \uff0c\u5219\u683c\u5f0f\u5316\u57fa\u4e8e llvm \u98ce\u683c\u3002\u5339\u914d\u5206\u9694\u7b26\u4f18\u5148\u4e8e\u5339\u914d\u7684\u5c01\u95ed\u51fd\u6570\u540d\uff0c\u4ee5\u786e\u5b9a\u539f\u59cb\u5b57\u7b26\u4e32\u5185\u5bb9\u7684\u8bed\u8a00\u3002 \u5982\u679c\u6307\u5b9a\u4e86\u89c4\u8303\u5206\u9694\u7b26\uff0c\u540c\u4e00\u8bed\u8a00\u4e2d\u51fa\u73b0\u7684\u5176\u4ed6\u5206\u9694\u7b26\u5c06\u5c3d\u53ef\u80fd\u66f4\u65b0\u4e3a\u89c4\u8303\u3002 \u6bcf\u79cd\u8bed\u8a00\u6700\u591a\u5e94\u8be5\u6709\u4e00\u4e2a\u89c4\u8303\uff0c\u6bcf\u4e2a\u5206\u9694\u7b26\u548c\u5305\u56f4\u51fd\u6570\u4e0d\u5e94\u8be5\u51fa\u73b0\u5728\u591a\u4e2a\u89c4\u8303\u4e2d\u3002 \u8981\u5728 .clang-format \u6587\u4ef6\u4e2d\u914d\u7f6e\u5b83\uff0c\u8bf7\u4f7f\u7528\uff1a RawStringFormats : - Language : TextProto Delimiters : - 'pb' - 'proto' EnclosingFunctions : - 'PARSE_TEXT_PROTO' BasedOnStyle : google - Language : Cpp Delimiters : - 'cc' - 'cpp' BasedOnStyle : llvm CanonicalDelimiter : 'cc'","title":"RawStringFormats"},{"location":"RawStringFormats/#rawstringformats-list-of-rawstringformats","text":"Info clang-format 6 \u5b9a\u4e49\u5728\u539f\u59cb\u5b57\u7b26\u4e32\u4e2d\u68c0\u6d4b\u652f\u6301\u7684\u8bed\u8a00\u4ee3\u7801\u5757\u7684\u63d0\u793a\u3002 \u5e26\u6709\u5339\u914d\u7684\u5206\u9694\u7b26\u6216\u5305\u542b\u5339\u914d\u7684\u51fd\u6570\u540d\u7684\u539f\u59cb\u5b57\u7b26\u4e32\u5c06\u6839\u636e .clang-format \u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u8bed\u8a00\u7684\u6837\u5f0f\u8fdb\u884c\u91cd\u65b0\u683c\u5f0f\u5316\uff0c\u5047\u8bbe\u8be5\u8bed\u8a00\u662f\u6307\u5b9a\u7684\u8bed\u8a00\u3002\u5982\u679c\u5728. clang-format \u6587\u4ef6\u4e2d\u6ca1\u6709\u4e3a\u7279\u5b9a\u8bed\u8a00\u5b9a\u4e49\u6837\u5f0f\uff0c\u5219\u4f7f\u7528 BasedOnStyle \u7ed9\u51fa\u7684\u9884\u5b9a\u4e49\u6837\u5f0f\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230 BasedOnStyle \uff0c\u5219\u683c\u5f0f\u5316\u57fa\u4e8e llvm \u98ce\u683c\u3002\u5339\u914d\u5206\u9694\u7b26\u4f18\u5148\u4e8e\u5339\u914d\u7684\u5c01\u95ed\u51fd\u6570\u540d\uff0c\u4ee5\u786e\u5b9a\u539f\u59cb\u5b57\u7b26\u4e32\u5185\u5bb9\u7684\u8bed\u8a00\u3002 \u5982\u679c\u6307\u5b9a\u4e86\u89c4\u8303\u5206\u9694\u7b26\uff0c\u540c\u4e00\u8bed\u8a00\u4e2d\u51fa\u73b0\u7684\u5176\u4ed6\u5206\u9694\u7b26\u5c06\u5c3d\u53ef\u80fd\u66f4\u65b0\u4e3a\u89c4\u8303\u3002 \u6bcf\u79cd\u8bed\u8a00\u6700\u591a\u5e94\u8be5\u6709\u4e00\u4e2a\u89c4\u8303\uff0c\u6bcf\u4e2a\u5206\u9694\u7b26\u548c\u5305\u56f4\u51fd\u6570\u4e0d\u5e94\u8be5\u51fa\u73b0\u5728\u591a\u4e2a\u89c4\u8303\u4e2d\u3002 \u8981\u5728 .clang-format \u6587\u4ef6\u4e2d\u914d\u7f6e\u5b83\uff0c\u8bf7\u4f7f\u7528\uff1a RawStringFormats : - Language : TextProto Delimiters : - 'pb' - 'proto' EnclosingFunctions : - 'PARSE_TEXT_PROTO' BasedOnStyle : google - Language : Cpp Delimiters : - 'cc' - 'cpp' BasedOnStyle : llvm CanonicalDelimiter : 'cc'","title":"RawStringFormats (List of RawStringFormats)"},{"location":"ReferenceAlignment/","text":"ReferenceAlignment ( ReferenceAlignmentStyle ) \u00b6 Info clang-format 14 \u5f15\u7528\u5bf9\u9f50\u6837\u5f0f\uff08\u8986\u76d6\u5f15\u7528\u7684 PointerAlignment \uff09\u3002 \u53ef\u80fd\u7684\u503c\uff1a Pointer Left Right Middle RAS_Pointer : \u50cf PointerAlignment \u4e00\u6837\u5bf9\u9f50\u5f15\u7528\u3002 RAS_Left : \u5c06\u5f15\u7528\u5bf9\u9f50\u5230\u5de6\u4fa7\u3002 int & a ; RAS_Right : \u5c06\u5f15\u7528\u5bf9\u9f50\u5230\u53f3\u4fa7\u3002 int & a ; RAS_Middle : \u5728\u4e2d\u95f4\u5bf9\u9f50\u5f15\u7528\u3002 int & a ;","title":"ReferenceAlignment"},{"location":"ReferenceAlignment/#referencealignment-referencealignmentstyle","text":"Info clang-format 14 \u5f15\u7528\u5bf9\u9f50\u6837\u5f0f\uff08\u8986\u76d6\u5f15\u7528\u7684 PointerAlignment \uff09\u3002 \u53ef\u80fd\u7684\u503c\uff1a Pointer Left Right Middle RAS_Pointer : \u50cf PointerAlignment \u4e00\u6837\u5bf9\u9f50\u5f15\u7528\u3002 RAS_Left : \u5c06\u5f15\u7528\u5bf9\u9f50\u5230\u5de6\u4fa7\u3002 int & a ; RAS_Right : \u5c06\u5f15\u7528\u5bf9\u9f50\u5230\u53f3\u4fa7\u3002 int & a ; RAS_Middle : \u5728\u4e2d\u95f4\u5bf9\u9f50\u5f15\u7528\u3002 int & a ;","title":"ReferenceAlignment (ReferenceAlignmentStyle)"},{"location":"ReflowComments/","text":"ReflowComments ( Boolean ) \u00b6 Info clang-format 4 \u5982\u679c\u4e3a true \uff0c clang-format \u5c06\u5c1d\u8bd5\u91cd\u65b0\u8f93\u5165\u6ce8\u91ca\u3002 false true // veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of information /* second veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of information */ // veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of // information /* second veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of * information */","title":"ReflowComments"},{"location":"ReflowComments/#reflowcomments-boolean","text":"Info clang-format 4 \u5982\u679c\u4e3a true \uff0c clang-format \u5c06\u5c1d\u8bd5\u91cd\u65b0\u8f93\u5165\u6ce8\u91ca\u3002 false true // veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of information /* second veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of information */ // veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of // information /* second veryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongComment with plenty of * information */","title":"ReflowComments (Boolean)"},{"location":"ShortNamespaceLines/","text":"ShortNamespaceLines ( Unsigned ) \u00b6 Info clang-format 14 \u77ed\u540d\u79f0\u7a7a\u95f4\u6240\u8de8\u7684\u672a\u6362\u884c\u7684\u6700\u5927\u884c\u6570\u3002\u9ed8\u8ba4\u4e3a 1 \u3002 \u8fd9\u901a\u8fc7\u8ba1\u7b97\u672a\u6362\u884c\u7684\u884c(\u5373\u4e0d\u5305\u542b\u6253\u5f00\u6216\u5173\u95ed\u540d\u79f0\u7a7a\u95f4\u5927\u62ec\u53f7)\u6765\u786e\u5b9a\u77ed\u540d\u79f0\u7a7a\u95f4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5e76\u4f7f FixNamespaceComments \u7701\u7565\u4e3a\u8fd9\u4e9b\u884c\u6dfb\u52a0\u7684\u7ed3\u675f\u6ce8\u91ca\u3002 ShortNamespaceLines : 1 vs. ShortNamespaceLines : 0 namespace a { namespace a { int foo ; int foo ; } } // namespace a ShortNamespaceLines : 1 vs. ShortNamespaceLines : 0 namespace b { namespace b { int foo ; int foo ; int bar ; int bar ; } // namespace b } // namespace b","title":"ShortNamespaceLines"},{"location":"ShortNamespaceLines/#shortnamespacelines-unsigned","text":"Info clang-format 14 \u77ed\u540d\u79f0\u7a7a\u95f4\u6240\u8de8\u7684\u672a\u6362\u884c\u7684\u6700\u5927\u884c\u6570\u3002\u9ed8\u8ba4\u4e3a 1 \u3002 \u8fd9\u901a\u8fc7\u8ba1\u7b97\u672a\u6362\u884c\u7684\u884c(\u5373\u4e0d\u5305\u542b\u6253\u5f00\u6216\u5173\u95ed\u540d\u79f0\u7a7a\u95f4\u5927\u62ec\u53f7)\u6765\u786e\u5b9a\u77ed\u540d\u79f0\u7a7a\u95f4\u7684\u6700\u5927\u957f\u5ea6\uff0c\u5e76\u4f7f FixNamespaceComments \u7701\u7565\u4e3a\u8fd9\u4e9b\u884c\u6dfb\u52a0\u7684\u7ed3\u675f\u6ce8\u91ca\u3002 ShortNamespaceLines : 1 vs. ShortNamespaceLines : 0 namespace a { namespace a { int foo ; int foo ; } } // namespace a ShortNamespaceLines : 1 vs. ShortNamespaceLines : 0 namespace b { namespace b { int foo ; int foo ; int bar ; int bar ; } // namespace b } // namespace b","title":"ShortNamespaceLines (Unsigned)"},{"location":"SortIncludes/","text":"SortIncludes (SortIncludesOptions) \u00b6 Info clang-format 4 \u63a7\u5236 clang-format \u662f\u5426\u4ee5\u53ca\u5982\u4f55\u6392\u5e8f #include \u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5305\u542b\u6c38\u8fdc\u4e0d\u4f1a\u6392\u5e8f\u3002\u5982\u679c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5219\u5305\u542b\u4ee5 ascii \u6216\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u6392\u5e8f\u3002\u5982\u679c\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5219\u5305\u542b\u6309\u5b57\u6bcd\u6216\u533a\u5206\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u6392\u5e8f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never CaseSensitive CaseInsensitive SI_Never : \u5305\u542b\u6c38\u8fdc\u4e0d\u4f1a\u6392\u5e8f\u3002 #include \"B/A.h\" #include \"A/B.h\" #include \"a/b.h\" #include \"A/b.h\" #include \"B/a.h\" SI_CaseSensitive : include \u4ee5\u5927\u5c0f\u5199\u654f\u611f\u7684\u65b9\u5f0f\u6392\u5e8f\u3002 #include \"A/B.h\" #include \"A/b.h\" #include \"B/A.h\" #include \"B/a.h\" #include \"a/b.h\" SI_CaseInsensitive : include \u4ee5\u4e0d\u533a\u5206\u5b57\u6bcd\u6216\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u6392\u5e8f\u3002 #include \"A/B.h\" #include \"A/b.h\" #include \"a/b.h\" #include \"B/A.h\" #include \"B/a.h\"","title":"SortIncludes"},{"location":"SortIncludes/#sortincludes-sortincludesoptions","text":"Info clang-format 4 \u63a7\u5236 clang-format \u662f\u5426\u4ee5\u53ca\u5982\u4f55\u6392\u5e8f #include \u3002\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5305\u542b\u6c38\u8fdc\u4e0d\u4f1a\u6392\u5e8f\u3002\u5982\u679c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5219\u5305\u542b\u4ee5 ascii \u6216\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u6392\u5e8f\u3002\u5982\u679c\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5219\u5305\u542b\u6309\u5b57\u6bcd\u6216\u533a\u5206\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u6392\u5e8f\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never CaseSensitive CaseInsensitive SI_Never : \u5305\u542b\u6c38\u8fdc\u4e0d\u4f1a\u6392\u5e8f\u3002 #include \"B/A.h\" #include \"A/B.h\" #include \"a/b.h\" #include \"A/b.h\" #include \"B/a.h\" SI_CaseSensitive : include \u4ee5\u5927\u5c0f\u5199\u654f\u611f\u7684\u65b9\u5f0f\u6392\u5e8f\u3002 #include \"A/B.h\" #include \"A/b.h\" #include \"B/A.h\" #include \"B/a.h\" #include \"a/b.h\" SI_CaseInsensitive : include \u4ee5\u4e0d\u533a\u5206\u5b57\u6bcd\u6216\u5927\u5c0f\u5199\u7684\u65b9\u5f0f\u6392\u5e8f\u3002 #include \"A/B.h\" #include \"A/b.h\" #include \"a/b.h\" #include \"B/A.h\" #include \"B/a.h\"","title":"SortIncludes (SortIncludesOptions)"},{"location":"SortJavaStaticImport/","text":"SortJavaStaticImport ( SortJavaStaticImportOptions ) \u00b6 Info clang-format 12 \u5728\u5bf9 Java \u5bfc\u5165\u6392\u5e8f\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u524d\u3002\u5982\u679c JavaStaticImportAfterImport \u5728\u540e\u9762\uff0c\u5219\u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u540e\u3002 \u53ef\u80fd\u7684\u503c\uff1a Before After SJSIO_Before : \u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u524d\u3002 import static org.example.function1 ; import org.example.ClassA ; SJSIO_After : \u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u540e\u3002 import org.example.ClassA ; import static org.example.function1 ;","title":"SortJavaStaticImport"},{"location":"SortJavaStaticImport/#sortjavastaticimport-sortjavastaticimportoptions","text":"Info clang-format 12 \u5728\u5bf9 Java \u5bfc\u5165\u6392\u5e8f\u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u524d\u3002\u5982\u679c JavaStaticImportAfterImport \u5728\u540e\u9762\uff0c\u5219\u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u540e\u3002 \u53ef\u80fd\u7684\u503c\uff1a Before After SJSIO_Before : \u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u524d\u3002 import static org.example.function1 ; import org.example.ClassA ; SJSIO_After : \u9759\u6001\u5bfc\u5165\u653e\u5728\u975e\u9759\u6001\u5bfc\u5165\u4e4b\u540e\u3002 import org.example.ClassA ; import static org.example.function1 ;","title":"SortJavaStaticImport (SortJavaStaticImportOptions)"},{"location":"SortUsingDeclarations/","text":"SortUsingDeclarations ( Boolean ) \u00b6 Info clang-format 5 \u5982\u679c\u4e3a true \uff0c clang-format \u5c06\u4f7f\u7528\u58f0\u660e\u8fdb\u884c\u6392\u5e8f\u3002 \u4f7f\u7528\u58f0\u660e\u7684\u987a\u5e8f\u5b9a\u4e49\u5982\u4e0b:\u4f7f\u7528 :: \u5206\u9694\u5b57\u7b26\u4e32\u5e76\u4e22\u5f03\u4efb\u4f55\u521d\u59cb\u5316\u7684\u7a7a\u5b57\u7b26\u4e32\u3002\u6bcf\u4e2a\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u975e\u547d\u540d\u7a7a\u95f4\u540d\u79f0;\u5176\u4ed6\u7684\u90fd\u662f\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u3002\u6309\u5b57\u5178\u987a\u5e8f\u5bf9\u540d\u79f0\u5217\u8868\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d\u4e2a\u4eba\u540d\u79f0\u7684\u6392\u5e8f\u987a\u5e8f\u662f\u6240\u6709\u975e\u540d\u79f0\u7a7a\u95f4\u540d\u79f0\u51fa\u73b0\u5728\u6240\u6709\u540d\u79f0\u7a7a\u95f4\u540d\u79f0\u4e4b\u524d\uff0c\u5e76\u4e14\u5728\u8fd9\u4e9b\u7ec4\u4e2d\uff0c\u540d\u79f0\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 true false using std :: cin ; using std :: cout ; using std :: cout ; using std :: cin ;","title":"SortUsingDeclarations"},{"location":"SortUsingDeclarations/#sortusingdeclarations-boolean","text":"Info clang-format 5 \u5982\u679c\u4e3a true \uff0c clang-format \u5c06\u4f7f\u7528\u58f0\u660e\u8fdb\u884c\u6392\u5e8f\u3002 \u4f7f\u7528\u58f0\u660e\u7684\u987a\u5e8f\u5b9a\u4e49\u5982\u4e0b:\u4f7f\u7528 :: \u5206\u9694\u5b57\u7b26\u4e32\u5e76\u4e22\u5f03\u4efb\u4f55\u521d\u59cb\u5316\u7684\u7a7a\u5b57\u7b26\u4e32\u3002\u6bcf\u4e2a\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u662f\u4e00\u4e2a\u975e\u547d\u540d\u7a7a\u95f4\u540d\u79f0;\u5176\u4ed6\u7684\u90fd\u662f\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u3002\u6309\u5b57\u5178\u987a\u5e8f\u5bf9\u540d\u79f0\u5217\u8868\u8fdb\u884c\u6392\u5e8f\uff0c\u5176\u4e2d\u4e2a\u4eba\u540d\u79f0\u7684\u6392\u5e8f\u987a\u5e8f\u662f\u6240\u6709\u975e\u540d\u79f0\u7a7a\u95f4\u540d\u79f0\u51fa\u73b0\u5728\u6240\u6709\u540d\u79f0\u7a7a\u95f4\u540d\u79f0\u4e4b\u524d\uff0c\u5e76\u4e14\u5728\u8fd9\u4e9b\u7ec4\u4e2d\uff0c\u540d\u79f0\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 true false using std :: cin ; using std :: cout ; using std :: cout ; using std :: cin ;","title":"SortUsingDeclarations (Boolean)"},{"location":"SpaceAfterCStyleCast/","text":"SpaceAfterCStyleCast ( Boolean ) \u00b6 Info clang-format 3.5 \u5982\u679c\u4e3a true \uff0c\u5219\u5728 C \u98ce\u683c\u5f3a\u5236\u8f6c\u6362\u540e\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002 true false ( int ) i ; ( int ) i ;","title":"SpaceAfterCStyleCast"},{"location":"SpaceAfterCStyleCast/#spaceaftercstylecast-boolean","text":"Info clang-format 3.5 \u5982\u679c\u4e3a true \uff0c\u5219\u5728 C \u98ce\u683c\u5f3a\u5236\u8f6c\u6362\u540e\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002 true false ( int ) i ; ( int ) i ;","title":"SpaceAfterCStyleCast (Boolean)"},{"location":"SpaceAfterLogicalNot/","text":"SpaceAfterLogicalNot ( Boolean ) \u00b6 Info clang-format 9 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u903b\u8f91\u5426\u64cd\u4f5c\u7b26( ! )\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002 true false ! someExpression (); ! someExpression ();","title":"SpaceAfterLogicalNot"},{"location":"SpaceAfterLogicalNot/#spaceafterlogicalnot-boolean","text":"Info clang-format 9 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u903b\u8f91\u5426\u64cd\u4f5c\u7b26( ! )\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002 true false ! someExpression (); ! someExpression ();","title":"SpaceAfterLogicalNot (Boolean)"},{"location":"SpaceAfterTemplateKeyword/","text":"SpaceAfterTemplateKeyword ( Boolean ) \u00b6 Info clang-format 4 \u5982\u679c\u4e3a true \uff0c\u5219\u5728 template \u5173\u952e\u5b57\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002 true false template < int > void foo (); template < int > void foo ();","title":"SpaceAfterTemplateKeyword"},{"location":"SpaceAfterTemplateKeyword/#spaceaftertemplatekeyword-boolean","text":"Info clang-format 4 \u5982\u679c\u4e3a true \uff0c\u5219\u5728 template \u5173\u952e\u5b57\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c\u3002 true false template < int > void foo (); template < int > void foo ();","title":"SpaceAfterTemplateKeyword (Boolean)"},{"location":"SpaceAroundPointerQualifiers/","text":"SpaceAroundPointerQualifiers ( SpaceAroundPointerQualifiersStyle ) \u00b6 Info clang-format 12 \u5b9a\u4e49\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u5728\u6307\u9488\u9650\u5b9a\u7b26\u4e4b\u524d\u6216\u4e4b\u540e\u653e\u7f6e\u7a7a\u683c \u53ef\u80fd\u7684\u503c\uff1a Default Before After Both SAPQ_Default : \u4e0d\u8981\u786e\u4fdd\u6307\u9488\u9650\u5b9a\u7b26\u5468\u56f4\u6709\u7a7a\u683c\uff0c\u800c\u662f\u4f7f\u7528 PointerAlignment \u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ; SAPQ_Before : \u786e\u4fdd\u5728\u6307\u9488\u9650\u5b9a\u7b26\u4e4b\u524d\u6709\u7a7a\u683c\u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ; SAPQ_After : \u786e\u4fdd\u5728\u6307\u9488\u9650\u5b9a\u7b26\u540e\u6709\u7a7a\u683c\u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ; SAPQ_Both : \u786e\u4fdd\u5728\u6307\u9488\u9650\u5b9a\u7b26\u7684\u524d\u540e\u90fd\u6709\u7a7a\u683c\u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ;","title":"SpaceAroundPointerQualifiers"},{"location":"SpaceAroundPointerQualifiers/#spacearoundpointerqualifiers-spacearoundpointerqualifiersstyle","text":"Info clang-format 12 \u5b9a\u4e49\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u5728\u6307\u9488\u9650\u5b9a\u7b26\u4e4b\u524d\u6216\u4e4b\u540e\u653e\u7f6e\u7a7a\u683c \u53ef\u80fd\u7684\u503c\uff1a Default Before After Both SAPQ_Default : \u4e0d\u8981\u786e\u4fdd\u6307\u9488\u9650\u5b9a\u7b26\u5468\u56f4\u6709\u7a7a\u683c\uff0c\u800c\u662f\u4f7f\u7528 PointerAlignment \u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ; SAPQ_Before : \u786e\u4fdd\u5728\u6307\u9488\u9650\u5b9a\u7b26\u4e4b\u524d\u6709\u7a7a\u683c\u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ; SAPQ_After : \u786e\u4fdd\u5728\u6307\u9488\u9650\u5b9a\u7b26\u540e\u6709\u7a7a\u683c\u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ; SAPQ_Both : \u786e\u4fdd\u5728\u6307\u9488\u9650\u5b9a\u7b26\u7684\u524d\u540e\u90fd\u6709\u7a7a\u683c\u3002 PointerAlignment : Left PointerAlignment : Right void * const * x = NULL ; vs . void * const * x = NULL ;","title":"SpaceAroundPointerQualifiers (SpaceAroundPointerQualifiersStyle)"},{"location":"SpaceBeforeAssignmentOperators/","text":"SpaceBeforeAssignmentOperators ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a false \uff0c\u5219\u5728\u8d4b\u503c\u64cd\u4f5c\u7b26\u4e4b\u524d\u5220\u9664\u7a7a\u683c\u3002 true false int a = 5 ; a += 42 ; int a = 5 ; a += 42 ;","title":"SpaceBeforeAssignmentOperators"},{"location":"SpaceBeforeAssignmentOperators/#spacebeforeassignmentoperators-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a false \uff0c\u5219\u5728\u8d4b\u503c\u64cd\u4f5c\u7b26\u4e4b\u524d\u5220\u9664\u7a7a\u683c\u3002 true false int a = 5 ; a += 42 ; int a = 5 ; a += 42 ;","title":"SpaceBeforeAssignmentOperators (Boolean)"},{"location":"SpaceBeforeCaseColon/","text":"SpaceBeforeCaseColon ( Boolean ) \u00b6 Info clang-format 12 \u5982\u679c\u4e3a false \uff0c\u5219\u5728 case \u5192\u53f7\u4e4b\u524d\u5220\u9664\u7a7a\u683c\u3002 true false switch ( x ) { case 1 : break ; } switch ( x ) { case 1 : break ; }","title":"SpaceBeforeCaseColon"},{"location":"SpaceBeforeCaseColon/#spacebeforecasecolon-boolean","text":"Info clang-format 12 \u5982\u679c\u4e3a false \uff0c\u5219\u5728 case \u5192\u53f7\u4e4b\u524d\u5220\u9664\u7a7a\u683c\u3002 true false switch ( x ) { case 1 : break ; } switch ( x ) { case 1 : break ; }","title":"SpaceBeforeCaseColon (Boolean)"},{"location":"SpaceBeforeCpp11BracedList/","text":"SpaceBeforeCpp11BracedList ( Boolean ) \u00b6 Info clang-format 7 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u7528\u4e8e\u521d\u59cb\u5316\u5bf9\u8c61\u7684 C++11 \u5927\u62ec\u53f7\u5217\u8868\u4e4b\u524d\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c(\u5728\u524d\u9762\u7684\u6807\u8bc6\u7b26\u6216\u7c7b\u578b\u4e4b\u540e)\u3002 true false Foo foo { bar }; Foo {}; vector < int > { 1 , 2 , 3 }; new int [ 3 ] { 1 , 2 , 3 }; Foo foo { bar }; Foo {}; vector < int > { 1 , 2 , 3 }; new int [ 3 ]{ 1 , 2 , 3 };","title":"SpaceBeforeCpp11BracedList"},{"location":"SpaceBeforeCpp11BracedList/#spacebeforecpp11bracedlist-boolean","text":"Info clang-format 7 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u7528\u4e8e\u521d\u59cb\u5316\u5bf9\u8c61\u7684 C++11 \u5927\u62ec\u53f7\u5217\u8868\u4e4b\u524d\u63d2\u5165\u4e00\u4e2a\u7a7a\u683c(\u5728\u524d\u9762\u7684\u6807\u8bc6\u7b26\u6216\u7c7b\u578b\u4e4b\u540e)\u3002 true false Foo foo { bar }; Foo {}; vector < int > { 1 , 2 , 3 }; new int [ 3 ] { 1 , 2 , 3 }; Foo foo { bar }; Foo {}; vector < int > { 1 , 2 , 3 }; new int [ 3 ]{ 1 , 2 , 3 };","title":"SpaceBeforeCpp11BracedList (Boolean)"},{"location":"SpaceBeforeCtorInitializerColon/","text":"SpaceBeforeCtorInitializerColon ( Boolean ) \u00b6 Info clang-format 7 \u5982\u679c\u4e3a false \uff0c\u5728\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5668\u5192\u53f7\u4e4b\u524d\u7684\u7a7a\u683c\u5c06\u88ab\u5220\u9664\u3002 true false Foo :: Foo () : a ( a ) {} Foo :: Foo () : a ( a ) {}","title":"SpaceBeforeCtorInitializerColon"},{"location":"SpaceBeforeCtorInitializerColon/#spacebeforectorinitializercolon-boolean","text":"Info clang-format 7 \u5982\u679c\u4e3a false \uff0c\u5728\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5668\u5192\u53f7\u4e4b\u524d\u7684\u7a7a\u683c\u5c06\u88ab\u5220\u9664\u3002 true false Foo :: Foo () : a ( a ) {} Foo :: Foo () : a ( a ) {}","title":"SpaceBeforeCtorInitializerColon (Boolean)"},{"location":"SpaceBeforeInheritanceColon/","text":"SpaceBeforeInheritanceColon ( Boolean ) \u00b6 Info clang-format 7 \u5982\u679c\u4e3a false \uff0c\u5728\u7ee7\u627f\u5192\u53f7\u4e4b\u524d\u7684\u7a7a\u683c\u5c06\u88ab\u5220\u9664\u3002 true false class Foo : Bar {} class Foo : Bar {}","title":"SpaceBeforeInheritanceColon"},{"location":"SpaceBeforeInheritanceColon/#spacebeforeinheritancecolon-boolean","text":"Info clang-format 7 \u5982\u679c\u4e3a false \uff0c\u5728\u7ee7\u627f\u5192\u53f7\u4e4b\u524d\u7684\u7a7a\u683c\u5c06\u88ab\u5220\u9664\u3002 true false class Foo : Bar {} class Foo : Bar {}","title":"SpaceBeforeInheritanceColon (Boolean)"},{"location":"SpaceBeforeParens/","text":"SpaceBeforeParens ( SpaceBeforeParensOptions ) \u00b6 Info clang-format 3.5 \u5b9a\u4e49\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u5728\u5f00\u62ec\u53f7\u524d\u653e\u7a7a\u683c\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never ControlStatements ControlStatementsExceptForEachMacros NonEmptyParentheses Always SBPO_Never : \u4e0d\u8981\u5728\u62ec\u53f7\u524d\u653e\u7a7a\u683c\u3002 void f () { if ( true ) { f (); } } SBPO_ControlStatements : \u53ea\u5728\u63a7\u5236\u8bed\u53e5\u5173\u952e\u5b57( for / if / while ...)\u4e4b\u540e\u7684\u5f00\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002 void f () { if ( true ) { f (); } } SBPO_ControlStatementsExceptForEachMacros : \u4e0e SBPO_ControlStatements \u76f8\u540c\uff0c\u9664\u4e86\u8fd9\u4e2a\u9009\u9879\u4e0d\u9002\u7528\u4e8e ForEach \u5b8f\u3002\u8fd9\u5728 ForEach \u5b8f\u88ab\u89c6\u4e3a\u51fd\u6570\u8c03\u7528\u800c\u4e0d\u662f\u63a7\u5236\u8bed\u53e5\u7684\u9879\u76ee\u4e2d\u975e\u5e38\u6709\u7528\u3002 void f () { Q_FOREACH (...) { f (); } } SBPO_NonEmptyParentheses : \u53ea\u6709\u62ec\u53f7\u4e0d\u662f\u7a7a\u7684\u65f6\u5019\u624d\u5728\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\uff0c\u5373 () void () { if ( true ) { f (); g ( x , y , z ); } } SBPO_Always : \u603b\u662f\u5728\u5f00\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\uff0c\u9664\u975e\u8bed\u6cd5\u89c4\u5219\u7981\u6b62(\u5728\u7c7b\u4f3c\u51fd\u6570\u7684\u5b8f\u5b9a\u4e49\u4e2d)\u6216\u7531\u5176\u4ed6\u98ce\u683c\u89c4\u5219\u51b3\u5b9a(\u5728\u4e00\u5143\u64cd\u4f5c\u7b26\u3001\u5f00\u62ec\u53f7\u540e\uff0c\u7b49\u7b49)\u3002 void f () { if ( true ) { f (); } }","title":"SpaceBeforeParens"},{"location":"SpaceBeforeParens/#spacebeforeparens-spacebeforeparensoptions","text":"Info clang-format 3.5 \u5b9a\u4e49\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u5728\u5f00\u62ec\u53f7\u524d\u653e\u7a7a\u683c\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never ControlStatements ControlStatementsExceptForEachMacros NonEmptyParentheses Always SBPO_Never : \u4e0d\u8981\u5728\u62ec\u53f7\u524d\u653e\u7a7a\u683c\u3002 void f () { if ( true ) { f (); } } SBPO_ControlStatements : \u53ea\u5728\u63a7\u5236\u8bed\u53e5\u5173\u952e\u5b57( for / if / while ...)\u4e4b\u540e\u7684\u5f00\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\u3002 void f () { if ( true ) { f (); } } SBPO_ControlStatementsExceptForEachMacros : \u4e0e SBPO_ControlStatements \u76f8\u540c\uff0c\u9664\u4e86\u8fd9\u4e2a\u9009\u9879\u4e0d\u9002\u7528\u4e8e ForEach \u5b8f\u3002\u8fd9\u5728 ForEach \u5b8f\u88ab\u89c6\u4e3a\u51fd\u6570\u8c03\u7528\u800c\u4e0d\u662f\u63a7\u5236\u8bed\u53e5\u7684\u9879\u76ee\u4e2d\u975e\u5e38\u6709\u7528\u3002 void f () { Q_FOREACH (...) { f (); } } SBPO_NonEmptyParentheses : \u53ea\u6709\u62ec\u53f7\u4e0d\u662f\u7a7a\u7684\u65f6\u5019\u624d\u5728\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\uff0c\u5373 () void () { if ( true ) { f (); g ( x , y , z ); } } SBPO_Always : \u603b\u662f\u5728\u5f00\u62ec\u53f7\u524d\u653e\u4e00\u4e2a\u7a7a\u683c\uff0c\u9664\u975e\u8bed\u6cd5\u89c4\u5219\u7981\u6b62(\u5728\u7c7b\u4f3c\u51fd\u6570\u7684\u5b8f\u5b9a\u4e49\u4e2d)\u6216\u7531\u5176\u4ed6\u98ce\u683c\u89c4\u5219\u51b3\u5b9a(\u5728\u4e00\u5143\u64cd\u4f5c\u7b26\u3001\u5f00\u62ec\u53f7\u540e\uff0c\u7b49\u7b49)\u3002 void f () { if ( true ) { f (); } }","title":"SpaceBeforeParens (SpaceBeforeParensOptions)"},{"location":"SpaceBeforeParensOptions/","text":"SpaceBeforeParensOptions ( SpaceBeforeParensCustom ) \u00b6 Info clang-format 14 \u63a7\u5236\u62ec\u53f7\u524d\u7684\u5355\u4e2a\u7a7a\u683c\u3002 \u5982\u679c SpaceBeforeParens \u8bbe\u7f6e\u4e3a Custom \uff0c\u5219\u4f7f\u7528\u5b83\u6765\u6307\u5b9a\u5e94\u5982\u4f55\u5904\u7406\u62ec\u53f7\u5927\u5c0f\u5199\u524d\u7684\u6bcf\u4e2a\u5355\u72ec\u7684\u7a7a\u683c\u3002\u5426\u5219\uff0c\u8fd9\u5c06\u88ab\u5ffd\u7565\u3002 \u7528\u6cd5\u793a\u4f8b\uff1a SpaceBeforeParens: Custom SpaceBeforeParensOptions: AfterControlStatements: true AfterFunctionDefinitionName: true Nested configuration flags: bool AfterControlStatements : \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u63a7\u5236\u8bed\u53e5\u5173\u952e\u5b57\uff08 for / if / while ...\uff09\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u7a7a\u683c\u3002 true : false : if (...) {} vs . if (...) {} bool AfterForeachMacros : \u5982\u679c\u4e3a true \uff0c\u5219\u5728 foreach \u5b8f\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u7a7a\u683c\u3002 true : false : FOREACH (...) vs . FOREACH (...) < loop - body > < loop - body > bool AfterFunctionDeclarationName : \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u51fd\u6570\u58f0\u660e\u540d\u79f0\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u4e00\u4e2a\u7a7a\u683c\u3002 true : false : void f (); vs . void f (); bool AfterFunctionDefinitionName : \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u51fd\u6570\u5b9a\u4e49\u540d\u79f0\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u4e00\u4e2a\u7a7a\u683c\u3002 true : false : void f () {} vs . void f () {} bool AfterIfMacros : \u5982\u679c\u4e3a true \uff0c\u5219\u5728 if \u5b8f\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u7a7a\u683c\u3002 true : false : IF (...) vs . IF (...) < conditional - body > < conditional - body > bool BeforeNonEmptyParentheses : \u5982\u679c\u4e3a true \uff0c\u5219\u4ec5\u5f53\u62ec\u53f7\u4e0d\u4e3a\u7a7a\u65f6\u624d\u5728\u62ec\u53f7\u524d\u653e\u7f6e\u4e00\u4e2a\u7a7a\u683c\u3002 true : false : void f ( int a ); vs . void f (); f ( a ); f ();","title":"SpaceBeforeParensOptions"},{"location":"SpaceBeforeParensOptions/#spacebeforeparensoptions-spacebeforeparenscustom","text":"Info clang-format 14 \u63a7\u5236\u62ec\u53f7\u524d\u7684\u5355\u4e2a\u7a7a\u683c\u3002 \u5982\u679c SpaceBeforeParens \u8bbe\u7f6e\u4e3a Custom \uff0c\u5219\u4f7f\u7528\u5b83\u6765\u6307\u5b9a\u5e94\u5982\u4f55\u5904\u7406\u62ec\u53f7\u5927\u5c0f\u5199\u524d\u7684\u6bcf\u4e2a\u5355\u72ec\u7684\u7a7a\u683c\u3002\u5426\u5219\uff0c\u8fd9\u5c06\u88ab\u5ffd\u7565\u3002 \u7528\u6cd5\u793a\u4f8b\uff1a SpaceBeforeParens: Custom SpaceBeforeParensOptions: AfterControlStatements: true AfterFunctionDefinitionName: true Nested configuration flags: bool AfterControlStatements : \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u63a7\u5236\u8bed\u53e5\u5173\u952e\u5b57\uff08 for / if / while ...\uff09\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u7a7a\u683c\u3002 true : false : if (...) {} vs . if (...) {} bool AfterForeachMacros : \u5982\u679c\u4e3a true \uff0c\u5219\u5728 foreach \u5b8f\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u7a7a\u683c\u3002 true : false : FOREACH (...) vs . FOREACH (...) < loop - body > < loop - body > bool AfterFunctionDeclarationName : \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u51fd\u6570\u58f0\u660e\u540d\u79f0\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u4e00\u4e2a\u7a7a\u683c\u3002 true : false : void f (); vs . void f (); bool AfterFunctionDefinitionName : \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u51fd\u6570\u5b9a\u4e49\u540d\u79f0\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u4e00\u4e2a\u7a7a\u683c\u3002 true : false : void f () {} vs . void f () {} bool AfterIfMacros : \u5982\u679c\u4e3a true \uff0c\u5219\u5728 if \u5b8f\u548c\u5de6\u62ec\u53f7\u4e4b\u95f4\u653e\u7f6e\u7a7a\u683c\u3002 true : false : IF (...) vs . IF (...) < conditional - body > < conditional - body > bool BeforeNonEmptyParentheses : \u5982\u679c\u4e3a true \uff0c\u5219\u4ec5\u5f53\u62ec\u53f7\u4e0d\u4e3a\u7a7a\u65f6\u624d\u5728\u62ec\u53f7\u524d\u653e\u7f6e\u4e00\u4e2a\u7a7a\u683c\u3002 true : false : void f ( int a ); vs . void f (); f ( a ); f ();","title":"SpaceBeforeParensOptions (SpaceBeforeParensCustom)"},{"location":"SpaceBeforeRangeBasedForLoopColon/","text":"SpaceBeforeRangeBasedForLoopColon ( Boolean ) \u00b6 Info clang-format 7 \u5982\u679c\u4e3a false \uff0c\u5728\u57fa\u4e8e\u8303\u56f4\u7684 for loop \u5192\u53f7\u4e4b\u524d\u5c06\u5220\u9664\u7a7a\u683c\u3002 true false for ( auto v : values ) {} for ( auto v : values ) {}","title":"SpaceBeforeRangeBasedForLoopColon"},{"location":"SpaceBeforeRangeBasedForLoopColon/#spacebeforerangebasedforloopcolon-boolean","text":"Info clang-format 7 \u5982\u679c\u4e3a false \uff0c\u5728\u57fa\u4e8e\u8303\u56f4\u7684 for loop \u5192\u53f7\u4e4b\u524d\u5c06\u5220\u9664\u7a7a\u683c\u3002 true false for ( auto v : values ) {} for ( auto v : values ) {}","title":"SpaceBeforeRangeBasedForLoopColon (Boolean)"},{"location":"SpaceBeforeSquareBrackets/","text":"SpaceBeforeSquareBrackets ( Boolean ) \u00b6 Info clang-format 11 \u5982\u679c\u4e3a true \uff0c\u7a7a\u683c\u5c06\u5728 [ \u4e4b\u524d\u3002\u4e0d\u53d7\u5f71\u54cd\u3002\u53ea\u6709\u7b2c\u4e00\u4e2a [ \u4f1a\u88ab\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 true false int a [ 5 ]; int a [ 5 ][ 5 ]; int a [ 5 ]; int a [ 5 ][ 5 ];","title":"SpaceBeforeSquareBrackets"},{"location":"SpaceBeforeSquareBrackets/#spacebeforesquarebrackets-boolean","text":"Info clang-format 11 \u5982\u679c\u4e3a true \uff0c\u7a7a\u683c\u5c06\u5728 [ \u4e4b\u524d\u3002\u4e0d\u53d7\u5f71\u54cd\u3002\u53ea\u6709\u7b2c\u4e00\u4e2a [ \u4f1a\u88ab\u52a0\u4e00\u4e2a\u7a7a\u683c\u3002 true false int a [ 5 ]; int a [ 5 ][ 5 ]; int a [ 5 ]; int a [ 5 ][ 5 ];","title":"SpaceBeforeSquareBrackets (Boolean)"},{"location":"SpaceInEmptyBlock/","text":"SpaceInEmptyBlock ( Boolean ) \u00b6 Info clang-format 11 \u5982\u679c\u4e3a true \uff0c\u5c06\u5728 {} \u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false void f () { } while ( true ) { } void f () {} while ( true ) {}","title":"SpaceInEmptyBlock"},{"location":"SpaceInEmptyBlock/#spaceinemptyblock-boolean","text":"Info clang-format 11 \u5982\u679c\u4e3a true \uff0c\u5c06\u5728 {} \u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false void f () { } while ( true ) { } void f () {} while ( true ) {}","title":"SpaceInEmptyBlock (Boolean)"},{"location":"SpaceInEmptyParentheses/","text":"SpaceInEmptyParentheses ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u53ef\u4ee5\u5728 () \u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false void f ( ) { int x [] = { foo ( ), bar ( )}; if ( true ) { f ( ); } } void f () { int x [] = { foo (), bar ()}; if ( true ) { f (); } }","title":"SpaceInEmptyParentheses"},{"location":"SpaceInEmptyParentheses/#spaceinemptyparentheses-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u53ef\u4ee5\u5728 () \u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false void f ( ) { int x [] = { foo ( ), bar ( )}; if ( true ) { f ( ); } } void f () { int x [] = { foo (), bar ()}; if ( true ) { f (); } }","title":"SpaceInEmptyParentheses (Boolean)"},{"location":"SpacesBeforeTrailingComments/","text":"SpacesBeforeTrailingComments ( Unsigned ) \u00b6 Info clang-format 3.7 \u5c3e\u884c\u6ce8\u91ca( // -\u6ce8\u91ca)\u4e4b\u524d\u7684\u7a7a\u683c\u6570\u3002 \u8fd9\u4e0d\u4f1a\u5f71\u54cd\u672b\u5c3e\u7684\u5757\u6ce8\u91ca( /* -\u6ce8\u91ca)\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6ce8\u91ca\u901a\u5e38\u6709\u4e0d\u540c\u7684\u4f7f\u7528\u6a21\u5f0f\u548c\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u3002 SpacesBeforeTrailingComments : 3 void f () { if ( true ) { // foo1 f (); // bar } // foo }","title":"SpacesBeforeTrailingComments"},{"location":"SpacesBeforeTrailingComments/#spacesbeforetrailingcomments-unsigned","text":"Info clang-format 3.7 \u5c3e\u884c\u6ce8\u91ca( // -\u6ce8\u91ca)\u4e4b\u524d\u7684\u7a7a\u683c\u6570\u3002 \u8fd9\u4e0d\u4f1a\u5f71\u54cd\u672b\u5c3e\u7684\u5757\u6ce8\u91ca( /* -\u6ce8\u91ca)\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u6ce8\u91ca\u901a\u5e38\u6709\u4e0d\u540c\u7684\u4f7f\u7528\u6a21\u5f0f\u548c\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u3002 SpacesBeforeTrailingComments : 3 void f () { if ( true ) { // foo1 f (); // bar } // foo }","title":"SpacesBeforeTrailingComments (Unsigned)"},{"location":"SpacesInAngles/","text":"SpacesInAngles ( SpacesInAnglesStyle ) \u00b6 Info clang-format 14 \u7528\u4e8e\u6a21\u677f\u53c2\u6570\u5217\u8868\u7684 SpacesInAnglesStyle \u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Always Leave SIAS_Never : \u5220\u9664 < \u4e4b\u540e\u548c > \u4e4b\u524d\u7684\u7a7a\u683c\u3002 static_cast < int > ( arg ); std :: function < void ( int ) > fct ; SIAS_Always : \u5728 < \u4e4b\u540e\u548c > \u4e4b\u524d\u6dfb\u52a0\u7a7a\u683c\u3002 static_cast < int > ( arg ); std :: function < void ( int ) > fct ; SIAS_Leave : \u5982\u679c\u5b58\u5728\u7a7a\u683c\uff0c\u5219\u5728 < \u4e4b\u540e\u548c\u4e4b\u524d\u4fdd\u7559\u4e00\u4e2a\u7a7a\u683c\u3002 \u9009\u9879\u6807\u51c6\uff1a Cpp03 \u4f18\u5148\u3002","title":"SpacesInAngles"},{"location":"SpacesInAngles/#spacesinangles-spacesinanglesstyle","text":"Info clang-format 14 \u7528\u4e8e\u6a21\u677f\u53c2\u6570\u5217\u8868\u7684 SpacesInAnglesStyle \u3002 \u53ef\u80fd\u7684\u503c\uff1a Never Always Leave SIAS_Never : \u5220\u9664 < \u4e4b\u540e\u548c > \u4e4b\u524d\u7684\u7a7a\u683c\u3002 static_cast < int > ( arg ); std :: function < void ( int ) > fct ; SIAS_Always : \u5728 < \u4e4b\u540e\u548c > \u4e4b\u524d\u6dfb\u52a0\u7a7a\u683c\u3002 static_cast < int > ( arg ); std :: function < void ( int ) > fct ; SIAS_Leave : \u5982\u679c\u5b58\u5728\u7a7a\u683c\uff0c\u5219\u5728 < \u4e4b\u540e\u548c\u4e4b\u524d\u4fdd\u7559\u4e00\u4e2a\u7a7a\u683c\u3002 \u9009\u9879\u6807\u51c6\uff1a Cpp03 \u4f18\u5148\u3002","title":"SpacesInAngles (SpacesInAnglesStyle)"},{"location":"SpacesInCStyleCastParentheses/","text":"SpacesInCStyleCastParentheses ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u53ef\u4ee5\u5728 C \u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false x = ( int32 ) y x = ( int32 ) y","title":"SpacesInCStyleCastParentheses"},{"location":"SpacesInCStyleCastParentheses/#spacesincstylecastparentheses-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u53ef\u4ee5\u5728 C \u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false x = ( int32 ) y x = ( int32 ) y","title":"SpacesInCStyleCastParentheses (Boolean)"},{"location":"SpacesInConditionalStatement/","text":"SpacesInConditionalStatement ( Boolean ) \u00b6 Info clang-format 11 \u5982\u679c\u4e3a true \uff0c\u5219\u5728 if / for / switch / while \u6761\u4ef6\u5468\u56f4\u63d2\u5165\u7a7a\u683c\u3002 true false if ( a ) { ... } while ( i < 5 ) { ... } if ( a ) { ... } while ( i < 5 ) { ... }","title":"SpacesInConditionalStatement"},{"location":"SpacesInConditionalStatement/#spacesinconditionalstatement-boolean","text":"Info clang-format 11 \u5982\u679c\u4e3a true \uff0c\u5219\u5728 if / for / switch / while \u6761\u4ef6\u5468\u56f4\u63d2\u5165\u7a7a\u683c\u3002 true false if ( a ) { ... } while ( i < 5 ) { ... } if ( a ) { ... } while ( i < 5 ) { ... }","title":"SpacesInConditionalStatement (Boolean)"},{"location":"SpacesInContainerLiterals/","text":"SpacesInContainerLiterals ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u5bb9\u5668\u5b57\u9762\u91cf(\u4f8b\u5982 ObjC \u548c Javascript \u6570\u7ec4\u548c dict \u5b57\u9762\u91cf)\u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false var arr = [ 1 , 2 , 3 ]; f ({ a : 1 , b : 2 , c : 3 }); var arr = [ 1 , 2 , 3 ]; f ({ a : 1 , b : 2 , c : 3 });","title":"SpacesInContainerLiterals"},{"location":"SpacesInContainerLiterals/#spacesincontainerliterals-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u5bb9\u5668\u5b57\u9762\u91cf(\u4f8b\u5982 ObjC \u548c Javascript \u6570\u7ec4\u548c dict \u5b57\u9762\u91cf)\u4e2d\u63d2\u5165\u7a7a\u683c\u3002 true false var arr = [ 1 , 2 , 3 ]; f ({ a : 1 , b : 2 , c : 3 }); var arr = [ 1 , 2 , 3 ]; f ({ a : 1 , b : 2 , c : 3 });","title":"SpacesInContainerLiterals (Boolean)"},{"location":"SpacesInLineCommentPrefix/","text":"SpacesInLineCommentPrefix ( SpacesInLineComment ) \u00b6 Info clang-format 14 \u4e00\u884c\u6ce8\u91ca\u7684\u5f00\u5934\u5141\u8bb8\u6709\u591a\u5c11\u4e2a\u7a7a\u683c\u3002\u8981\u7981\u7528\u6700\u5927\u503c\uff0c\u8bf7\u5c06\u5176\u8bbe\u7f6e\u4e3a -1 \uff0c\u4f46\u6700\u5927\u503c\u4f18\u5148\u4e8e\u6700\u5c0f\u503c\u3002 Minimum = 1 Maximum = -1 // \u5f3a\u5236\u8f93\u5165\u4e00\u4e2a\u7a7a\u683c // \u4f46\u662f\u66f4\u591a\u7684\u7a7a\u95f4\u662f\u53ef\u80fd\u7684 Minimum = 0 Maximum = 0 //\u5f3a\u5236\u6bcf\u4e2a\u6ce8\u91ca\u76f4\u63a5\u5728\u659c\u6760\u540e\u9762\u5f00\u59cb \u8bf7\u6ce8\u610f\uff0c\u5728\u884c\u6ce8\u91ca\u90e8\u5206\uff0c\u540e\u7eed\u884c\u7684\u76f8\u5bf9\u7f29\u8fdb\u88ab\u4fdd\u7559\uff0c\u8fd9\u610f\u5473\u7740\u5982\u4e0b\uff1a before : after : Minimum : 1 //if (b) { // if (b) { // return true; // return true; //} // } Maximum : 0 /// List: ///List: /// - Foo /// - Foo /// - Bar /// - Bar \u5d4c\u5957\u7684\u914d\u7f6e\u6807\u8bb0\uff1a unsigned Minimum \u6ce8\u91ca\u5f00\u59cb\u5904\u7684\u6700\u5c0f\u7a7a\u683c\u6570\u3002 unsigned Maximum \u6ce8\u91ca\u5f00\u59cb\u5904\u7684\u6700\u5927\u7a7a\u683c\u6570\u3002","title":"SpacesInLineCommentPrefix"},{"location":"SpacesInLineCommentPrefix/#spacesinlinecommentprefix-spacesinlinecomment","text":"Info clang-format 14 \u4e00\u884c\u6ce8\u91ca\u7684\u5f00\u5934\u5141\u8bb8\u6709\u591a\u5c11\u4e2a\u7a7a\u683c\u3002\u8981\u7981\u7528\u6700\u5927\u503c\uff0c\u8bf7\u5c06\u5176\u8bbe\u7f6e\u4e3a -1 \uff0c\u4f46\u6700\u5927\u503c\u4f18\u5148\u4e8e\u6700\u5c0f\u503c\u3002 Minimum = 1 Maximum = -1 // \u5f3a\u5236\u8f93\u5165\u4e00\u4e2a\u7a7a\u683c // \u4f46\u662f\u66f4\u591a\u7684\u7a7a\u95f4\u662f\u53ef\u80fd\u7684 Minimum = 0 Maximum = 0 //\u5f3a\u5236\u6bcf\u4e2a\u6ce8\u91ca\u76f4\u63a5\u5728\u659c\u6760\u540e\u9762\u5f00\u59cb \u8bf7\u6ce8\u610f\uff0c\u5728\u884c\u6ce8\u91ca\u90e8\u5206\uff0c\u540e\u7eed\u884c\u7684\u76f8\u5bf9\u7f29\u8fdb\u88ab\u4fdd\u7559\uff0c\u8fd9\u610f\u5473\u7740\u5982\u4e0b\uff1a before : after : Minimum : 1 //if (b) { // if (b) { // return true; // return true; //} // } Maximum : 0 /// List: ///List: /// - Foo /// - Foo /// - Bar /// - Bar \u5d4c\u5957\u7684\u914d\u7f6e\u6807\u8bb0\uff1a unsigned Minimum \u6ce8\u91ca\u5f00\u59cb\u5904\u7684\u6700\u5c0f\u7a7a\u683c\u6570\u3002 unsigned Maximum \u6ce8\u91ca\u5f00\u59cb\u5904\u7684\u6700\u5927\u7a7a\u683c\u6570\u3002","title":"SpacesInLineCommentPrefix (SpacesInLineComment)"},{"location":"SpacesInParentheses/","text":"SpacesInParentheses ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u524d\u540e\u63d2\u5165\u7a7a\u683c\u3002 true false t f ( Deleted & ) & = delete ; t f ( Deleted & ) & = delete ;","title":"SpacesInParentheses"},{"location":"SpacesInParentheses/#spacesinparentheses-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5219\u5728\u524d\u540e\u63d2\u5165\u7a7a\u683c\u3002 true false t f ( Deleted & ) & = delete ; t f ( Deleted & ) & = delete ;","title":"SpacesInParentheses (Boolean)"},{"location":"SpacesInSquareBrackets/","text":"SpacesInSquareBrackets ( Boolean ) \u00b6 Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5c06\u5728 [ \u548c\u4e4b\u524d ] \u540e\u9762\u63d2\u5165\u7a7a\u683c\u3002\u6ca1\u6709\u53c2\u6570\u6216\u672a\u6307\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u58f0\u660e\u7684\u533f\u540d\u51fd\u6570\u5c06\u4e0d\u53d7\u5f71\u54cd\u3002 true false int a [ 5 ]; std :: unique_ptr < int [] > foo () {} // Won't be affected int a [ 5 ];","title":"SpacesInSquareBrackets"},{"location":"SpacesInSquareBrackets/#spacesinsquarebrackets-boolean","text":"Info clang-format 3.7 \u5982\u679c\u4e3a true \uff0c\u5c06\u5728 [ \u548c\u4e4b\u524d ] \u540e\u9762\u63d2\u5165\u7a7a\u683c\u3002\u6ca1\u6709\u53c2\u6570\u6216\u672a\u6307\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u58f0\u660e\u7684\u533f\u540d\u51fd\u6570\u5c06\u4e0d\u53d7\u5f71\u54cd\u3002 true false int a [ 5 ]; std :: unique_ptr < int [] > foo () {} // Won't be affected int a [ 5 ];","title":"SpacesInSquareBrackets (Boolean)"},{"location":"Standard/","text":"Standard ( LanguageStandard ) \u00b6 Info clang-format 3.7 \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e0e\u8fd9\u4e2a\u6807\u51c6\u517c\u5bb9\u7684 C++ \u7ed3\u6784\u3002 c++03 latest vector < set < int > > x ; vector < set < int >> x ; \u53ef\u80fd\u7684\u503c\uff1a Cpp03 Cpp11 Cpp14 Cpp17 Cpp20 Latest Auto LS_Cpp03 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++03 \u3002 Cpp03 \u662f c++03 \u7684\u4e00\u4e2a\u5df2\u5f03\u7528\u522b\u540d LS_Cpp11 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++11 \u3002 LS_Cpp14 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++14 \u3002 LS_Cpp17 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++17 \u3002 LS_Cpp20 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++20 \u3002 LS_Latest : \u4f7f\u7528\u6700\u65b0\u652f\u6301\u7684\u8bed\u8a00\u7248\u672c\u8fdb\u884c\u89e3\u6790\u548c\u683c\u5f0f\u5316\u3002 Cpp11 \u662f\u6700\u65b0\u7684\u4e00\u4e2a\u5df2\u5f03\u7528\u522b\u540d\u3002 LS_Auto : \u57fa\u4e8e\u8f93\u5165\u81ea\u52a8\u68c0\u6d4b\u3002","title":"Standard"},{"location":"Standard/#standard-languagestandard","text":"Info clang-format 3.7 \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e0e\u8fd9\u4e2a\u6807\u51c6\u517c\u5bb9\u7684 C++ \u7ed3\u6784\u3002 c++03 latest vector < set < int > > x ; vector < set < int >> x ; \u53ef\u80fd\u7684\u503c\uff1a Cpp03 Cpp11 Cpp14 Cpp17 Cpp20 Latest Auto LS_Cpp03 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++03 \u3002 Cpp03 \u662f c++03 \u7684\u4e00\u4e2a\u5df2\u5f03\u7528\u522b\u540d LS_Cpp11 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++11 \u3002 LS_Cpp14 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++14 \u3002 LS_Cpp17 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++17 \u3002 LS_Cpp20 : \u89e3\u6790\u548c\u683c\u5f0f\u5316\u4e3a C++20 \u3002 LS_Latest : \u4f7f\u7528\u6700\u65b0\u652f\u6301\u7684\u8bed\u8a00\u7248\u672c\u8fdb\u884c\u89e3\u6790\u548c\u683c\u5f0f\u5316\u3002 Cpp11 \u662f\u6700\u65b0\u7684\u4e00\u4e2a\u5df2\u5f03\u7528\u522b\u540d\u3002 LS_Auto : \u57fa\u4e8e\u8f93\u5165\u81ea\u52a8\u68c0\u6d4b\u3002","title":"Standard (LanguageStandard)"},{"location":"StatementAttributeLikeMacros/","text":"StatementAttributeLikeMacros ( List of Strings ) \u00b6 Info clang-format 12 \u5728\u8bed\u53e5\u524d\u9762\u88ab\u5ffd\u7565\u7684\u5b8f\uff0c\u5c31\u50cf\u5b83\u4eec\u662f\u4e00\u4e2a\u5c5e\u6027\u4e00\u6837\u3002\u8fd9\u6837\u5b83\u4eec\u5c31\u4e0d\u4f1a\u88ab\u89e3\u6790\u4e3a\u6807\u8bc6\u7b26\uff0c\u4f8b\u5982 Qts emit \u3002 AlignConsecutiveDeclarations : true StatementAttributeLikeMacros : [] unsigned char data = 'x' ; emit signal ( data ); //\u88ab\u89e3\u6790\u4e3a\u53d8\u91cf\u58f0\u660e\u3002 AlignConsecutiveDeclarations : true StatementAttributeLikeMacros : [ emit ] unsigned char data = 'x' ; emit signal ( data ); //\u73b0\u5728\u53c8\u597d\u4e86\u3002","title":"StatementAttributeLikeMacros"},{"location":"StatementAttributeLikeMacros/#statementattributelikemacros-list-of-strings","text":"Info clang-format 12 \u5728\u8bed\u53e5\u524d\u9762\u88ab\u5ffd\u7565\u7684\u5b8f\uff0c\u5c31\u50cf\u5b83\u4eec\u662f\u4e00\u4e2a\u5c5e\u6027\u4e00\u6837\u3002\u8fd9\u6837\u5b83\u4eec\u5c31\u4e0d\u4f1a\u88ab\u89e3\u6790\u4e3a\u6807\u8bc6\u7b26\uff0c\u4f8b\u5982 Qts emit \u3002 AlignConsecutiveDeclarations : true StatementAttributeLikeMacros : [] unsigned char data = 'x' ; emit signal ( data ); //\u88ab\u89e3\u6790\u4e3a\u53d8\u91cf\u58f0\u660e\u3002 AlignConsecutiveDeclarations : true StatementAttributeLikeMacros : [ emit ] unsigned char data = 'x' ; emit signal ( data ); //\u73b0\u5728\u53c8\u597d\u4e86\u3002","title":"StatementAttributeLikeMacros (List of Strings)"},{"location":"StatementMacros/","text":"StatementMacros ( List of Strings ) \u00b6 Info clang-format 8 \u5b8f\u7684\u4e00\u4e2a\u5411\u91cf\uff0c\u5e94\u8be5\u88ab\u89e3\u91ca\u4e3a\u5b8c\u6574\u7684\u8bed\u53e5\u3002 \u5178\u578b\u7684\u5b8f\u662f\u8868\u8fbe\u5f0f\uff0c\u9700\u8981\u6dfb\u52a0\u5206\u53f7;\u6709\u65f6\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff0c\u8fd9\u5141\u8bb8 clang-format \u80fd\u591f\u8bc6\u522b\u8fd9\u79cd\u60c5\u51b5\u3002 \u4f8b\u5982: Q_UNUSED","title":"StatementMacros"},{"location":"StatementMacros/#statementmacros-list-of-strings","text":"Info clang-format 8 \u5b8f\u7684\u4e00\u4e2a\u5411\u91cf\uff0c\u5e94\u8be5\u88ab\u89e3\u91ca\u4e3a\u5b8c\u6574\u7684\u8bed\u53e5\u3002 \u5178\u578b\u7684\u5b8f\u662f\u8868\u8fbe\u5f0f\uff0c\u9700\u8981\u6dfb\u52a0\u5206\u53f7;\u6709\u65f6\u60c5\u51b5\u5e76\u975e\u5982\u6b64\uff0c\u8fd9\u5141\u8bb8 clang-format \u80fd\u591f\u8bc6\u522b\u8fd9\u79cd\u60c5\u51b5\u3002 \u4f8b\u5982: Q_UNUSED","title":"StatementMacros (List of Strings)"},{"location":"TabWidth/","text":"TabWidth ( Unsigned ) \u00b6 Info clang-format 3.7 \u7528\u4e8e\u5236\u8868\u4f4d\u7684\u5217\u6570\u3002","title":"TabWidth"},{"location":"TabWidth/#tabwidth-unsigned","text":"Info clang-format 3.7 \u7528\u4e8e\u5236\u8868\u4f4d\u7684\u5217\u6570\u3002","title":"TabWidth (Unsigned)"},{"location":"TypenameMacros/","text":"TypenameMacros ( List of Strings ) \u00b6 Info clang-format 3.7 \u5b8f\u7684\u4e00\u4e2a\u5411\u91cf\uff0c\u5b83\u5e94\u8be5\u88ab\u89e3\u91ca\u4e3a\u7c7b\u578b\u58f0\u660e\u800c\u4e0d\u662f\u51fd\u6570\u8c03\u7528\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a STACK_OF (...) \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a TypenameMacros : [ 'STACK_OF' , 'LIST' ] \u4f8b\u5982: OpenSSL STACK_OF , BSD LIST_ENTRY","title":"TypenameMacros"},{"location":"TypenameMacros/#typenamemacros-list-of-strings","text":"Info clang-format 3.7 \u5b8f\u7684\u4e00\u4e2a\u5411\u91cf\uff0c\u5b83\u5e94\u8be5\u88ab\u89e3\u91ca\u4e3a\u7c7b\u578b\u58f0\u660e\u800c\u4e0d\u662f\u51fd\u6570\u8c03\u7528\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a STACK_OF (...) \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a TypenameMacros : [ 'STACK_OF' , 'LIST' ] \u4f8b\u5982: OpenSSL STACK_OF , BSD LIST_ENTRY","title":"TypenameMacros (List of Strings)"},{"location":"UseCRLF/","text":"UseCRLF ( Boolean ) \u00b6 Info clang-format 11 \u7528 \\r\\n \u4ee3\u66ff \\n \u6362\u884c\u3002\u5982\u679c (DeriveLineEnding)(../DeriveLineEnding) \u4e3a true \uff0c\u4e5f\u7528\u4f5c\u56de\u9000\u3002","title":"UseCRLF"},{"location":"UseCRLF/#usecrlf-boolean","text":"Info clang-format 11 \u7528 \\r\\n \u4ee3\u66ff \\n \u6362\u884c\u3002\u5982\u679c (DeriveLineEnding)(../DeriveLineEnding) \u4e3a true \uff0c\u4e5f\u7528\u4f5c\u56de\u9000\u3002","title":"UseCRLF (Boolean)"},{"location":"UseTab/","text":"UseTab ( UseTabStyle ) \u00b6 Info clang-format 3.7 \u5728\u7ed3\u679c\u6587\u4ef6\u4e2d\u4f7f\u7528\u5236\u8868\u7b26\u7684\u65b9\u6cd5\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never ForIndentation ForContinuationAndIndentation AlignWithSpaces Always UT_Never : \u4ece\u4e0d\u4f7f\u7528\u5236\u8868\u7b26\u3002 UT_ForIndentation : \u4ec5\u5728\u7f29\u8fdb\u65f6\u4f7f\u7528\u5236\u8868\u7b26\u3002 UT_ForContinuationAndIndentation : \u7528\u5236\u8868\u7b26\u586b\u5145\u6240\u6709\u7684\u524d\u5bfc\u7a7a\u683c\uff0c\u5e76\u5728\u4e00\u884c\u4e2d\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u5bf9\u9f50(\u4f8b\u5982\u8fde\u7eed\u7684\u8d4b\u503c\u548c\u58f0\u660e)\u3002 UT_AlignWithSpaces : \u4f7f\u7528\u5236\u8868\u7b26\u8fdb\u884c\u884c\u5ef6\u7eed\u548c\u7f29\u8fdb\uff0c\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u5bf9\u9f50\u3002 UT_Always : \u5f53\u6211\u4eec\u9700\u8981\u586b\u8865\u81f3\u5c11\u4ece\u4e00\u4e2a\u5236\u8868\u4f4d\u5230\u4e0b\u4e00\u4e2a\u5236\u8868\u4f4d\u7684\u7a7a\u767d\u65f6\uff0c\u4f7f\u7528\u5236\u8868\u4f4d\u3002","title":"UseTab"},{"location":"UseTab/#usetab-usetabstyle","text":"Info clang-format 3.7 \u5728\u7ed3\u679c\u6587\u4ef6\u4e2d\u4f7f\u7528\u5236\u8868\u7b26\u7684\u65b9\u6cd5\u3002 \u53ef\u80fd\u7684\u503c\uff1a Never ForIndentation ForContinuationAndIndentation AlignWithSpaces Always UT_Never : \u4ece\u4e0d\u4f7f\u7528\u5236\u8868\u7b26\u3002 UT_ForIndentation : \u4ec5\u5728\u7f29\u8fdb\u65f6\u4f7f\u7528\u5236\u8868\u7b26\u3002 UT_ForContinuationAndIndentation : \u7528\u5236\u8868\u7b26\u586b\u5145\u6240\u6709\u7684\u524d\u5bfc\u7a7a\u683c\uff0c\u5e76\u5728\u4e00\u884c\u4e2d\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u5bf9\u9f50(\u4f8b\u5982\u8fde\u7eed\u7684\u8d4b\u503c\u548c\u58f0\u660e)\u3002 UT_AlignWithSpaces : \u4f7f\u7528\u5236\u8868\u7b26\u8fdb\u884c\u884c\u5ef6\u7eed\u548c\u7f29\u8fdb\uff0c\u4f7f\u7528\u7a7a\u683c\u8fdb\u884c\u5bf9\u9f50\u3002 UT_Always : \u5f53\u6211\u4eec\u9700\u8981\u586b\u8865\u81f3\u5c11\u4ece\u4e00\u4e2a\u5236\u8868\u4f4d\u5230\u4e0b\u4e00\u4e2a\u5236\u8868\u4f4d\u7684\u7a7a\u767d\u65f6\uff0c\u4f7f\u7528\u5236\u8868\u4f4d\u3002","title":"UseTab (UseTabStyle)"},{"location":"WhitespaceSensitiveMacros/","text":"WhitespaceSensitiveMacros ( List of Strings ) \u00b6 Info clang-format 12 \u4e00\u4e2a\u5b8f\u5411\u91cf\uff0c\u5b83\u662f\u7a7a\u683c\u654f\u611f\u7684\uff0c\u4e0d\u5e94\u8be5\u88ab\u89e6\u53ca\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a STRINGIZE (...) \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a WhitespaceSensitiveMacros : [ 'STRINGIZE' , 'PP_STRINGIZE' ] \u4f8b\u5982: BOOST_PP_STRINGIZE \u3002","title":"WhitespaceSensitiveMacros"},{"location":"WhitespaceSensitiveMacros/#whitespacesensitivemacros-list-of-strings","text":"Info clang-format 12 \u4e00\u4e2a\u5b8f\u5411\u91cf\uff0c\u5b83\u662f\u7a7a\u683c\u654f\u611f\u7684\uff0c\u4e0d\u5e94\u8be5\u88ab\u89e6\u53ca\u3002 \u8fd9\u4e9b\u5e94\u8be5\u662f\u4ee5\u4e0b\u5f62\u5f0f\u7684\u5b8f\uff1a STRINGIZE (...) \u5728 .clang-format \u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u53ef\u4ee5\u8fd9\u6837\u914d\u7f6e\uff1a WhitespaceSensitiveMacros : [ 'STRINGIZE' , 'PP_STRINGIZE' ] \u4f8b\u5982: BOOST_PP_STRINGIZE \u3002","title":"WhitespaceSensitiveMacros (List of Strings)"}]}